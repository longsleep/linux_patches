From dvrabel@hera.kernel.org  Wed Apr 15 21:03:18 2009
From: David Vrabel <david.vrabel@csr.com>
Date: Wed,  8 Apr 2009 17:36:32 +0000
Subject: WUSB: fix oops when completing URBs for disconnected devices
To: Greg KH <gregkh@suse.de>
Cc: David Vrabel <david.vrabel@csr.com>
Message-ID: <1239212193-27618-6-git-send-email-david.vrabel@csr.com>


Fix an oops in wusbhc_giveback_urb() if the wusb device had disconnected
while an urb was in progress. Also release the ref count obtained here.

Signed-off-by: David Vrabel <david.vrabel@csr.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/wusbcore/devconnect.c |    2 ++
 drivers/usb/wusbcore/wusbhc.c     |    8 +++++---
 2 files changed, 7 insertions(+), 3 deletions(-)

--- a/drivers/usb/wusbcore/devconnect.c
+++ b/drivers/usb/wusbcore/devconnect.c
@@ -267,6 +267,8 @@ static void wusbhc_devconnect_acked_work
 	mutex_lock(&wusbhc->mutex);
 	wusbhc_devconnect_acked(wusbhc, wusb_dev);
 	mutex_unlock(&wusbhc->mutex);
+
+	wusb_dev_put(wusb_dev);
 }
 
 /*
--- a/drivers/usb/wusbcore/wusbhc.c
+++ b/drivers/usb/wusbcore/wusbhc.c
@@ -338,14 +338,16 @@ EXPORT_SYMBOL_GPL(wusb_cluster_id_put);
 void wusbhc_giveback_urb(struct wusbhc *wusbhc, struct urb *urb, int status)
 {
 	struct wusb_dev *wusb_dev = __wusb_dev_get_by_usb_dev(wusbhc, urb->dev);
-
-	if (status == 0) {
+
+	if (status == 0 && wusb_dev) {
 		wusb_dev->entry_ts = jiffies;
 
-		/* wusbhc_devconnect_acked() can't be called from from
+		/* wusbhc_devconnect_acked() can't be called from
 		   atomic context so defer it to a work queue. */
 		if (!list_empty(&wusb_dev->cack_node))
 			queue_work(wusbd, &wusb_dev->devconnect_acked_work);
+		else
+			wusb_dev_put(wusb_dev);
 	}
 
 	usb_hcd_giveback_urb(&wusbhc->usb_hcd, urb, status);
