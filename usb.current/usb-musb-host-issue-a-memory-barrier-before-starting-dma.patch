From balbi@ti.com  Tue Sep 21 14:16:02 2010
From: Santosh Shilimkar <santosh.shilimkar@ti.com>
To: Greg KH <greg@kroah.com>
Cc: Santosh Shilimkar <santosh.shilimkar@ti.com>,
        Maulik Mankad <x0082077@ti.com>,
        Russell King <rmk+kernel@arm.linux.org.uk>,
        Felipe Balbi <balbi@ti.com>
Subject: usb: musb: host: Issue a memory barrier before starting DMA
Date: Mon, 20 Sep 2010 10:32:07 +0300
Message-Id: <1284967927-7163-8-git-send-email-balbi@ti.com>

From: Santosh Shilimkar <santosh.shilimkar@ti.com>

This patch fixes the issue which was observed while transfering
a large file ( > 20MB) over USB (OMAP MUSB controller acts as USB host)
to an attached USB thumb drive.

It was found that CDB field of CBW packet was set to 0x0. This was
due to missing a barrier before DMA engine starts transfer.
This  buffer is  allocated using dma_alloc_coherent which gives
non-cacheble but bufferable memory and hence needed a write
memory barrier to flush the write buffer.

More info on this thread is here:
	http://www.spinics.net/lists/linux-omap/msg33987.html

Signed-off-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
Signed-off-by: Maulik Mankad <x0082077@ti.com>
Cc: Russell King <rmk+kernel@arm.linux.org.uk>
Signed-off-by: Felipe Balbi <balbi@ti.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/musb/musb_host.c |    6 ++++++
 1 file changed, 6 insertions(+)

--- a/drivers/usb/musb/musb_host.c
+++ b/drivers/usb/musb/musb_host.c
@@ -660,6 +660,12 @@ static bool musb_tx_dma_program(struct d
 
 	qh->segsize = length;
 
+	/*
+	 * Ensure the data reaches to main memory before starting
+	 * DMA transfer
+	 */
+	wmb();
+
 	if (!dma->channel_program(channel, pkt_size, mode,
 			urb->transfer_dma + offset, length)) {
 		dma->channel_release(channel);
