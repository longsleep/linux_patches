From jesper.juhl@gmail.com  Fri Aug 10 10:49:03 2007
From: Jesper Juhl <jesper.juhl@gmail.com>
Date: Thu, 9 Aug 2007 23:02:36 +0200
Subject: USB: Fix a memory leak in em28xx_usb_probe()
To: Luca Risolia <luca.risolia@studio.unibo.it>, Ludovico Cavedon <cavedon@sssup.it>, Markus Rechberger <mrechberger@gmail.com>, Mauro Carvalho Chehab <mchehab@infradead.org>, Sascha Sommer <saschasommer@freenet.de>, Jesper Juhl <jesper.juhl@gmail.com>, Greg Kroah-Hartman <greg@kroah.com>
Message-ID: <200708092302.36705.jesper.juhl@gmail.com>
Content-Disposition: inline

From: Jesper Juhl <jesper.juhl@gmail.com>

If, in em28xx_usb_probe() the memory allocation
	dev->alt_max_pkt_size = kmalloc(32*
						dev->num_alt,GFP_KERNEL);
fails, then we'll bail out and return -ENOMEM.
The problem is that in that case we don't free the storage allocated
to 'dev', thus causing a memory leak.

This patch fixes the leak by freeing 'dev' before we return -ENOMEM.
This fixes Coverity bug #647.


Signed-off-by: Jesper Juhl <jesper.juhl@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/media/video/em28xx/em28xx-video.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/media/video/em28xx/em28xx-video.c
+++ b/drivers/media/video/em28xx/em28xx-video.c
@@ -1772,6 +1772,7 @@ static int em28xx_usb_probe(struct usb_i
 	if (dev->alt_max_pkt_size == NULL) {
 		em28xx_errdev("out of memory!\n");
 		em28xx_devused&=~(1<<nr);
+		kfree(dev);
 		return -ENOMEM;
 	}
 
