From matthew@wil.cx  Tue May  4 13:01:18 2010
From: Matthew Wilcox <matthew@wil.cx>
Date: Fri, 30 Apr 2010 13:11:29 -0600
Subject: USB: Add a usb_pipe_endpoint() convenience function
To: Greg Kroah-Hartman <greg@kroah.com>, linux-usb@vger.kernel.org
Cc: Matthew Wilcox <willy@linux.intel.com>
Message-ID: <1272654690-27957-2-git-send-email-matthew@wil.cx>


From: Matthew Wilcox <willy@linux.intel.com>

Converting a pipe number to a struct usb_host_endpoint pointer is a little
messy.  Introduce a new convenience function to hide the mess.

Signed-off-by: Matthew Wilcox <willy@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/message.c |    3 +--
 drivers/usb/core/urb.c     |    3 +--
 include/linux/usb.h        |    8 ++++++++
 3 files changed, 10 insertions(+), 4 deletions(-)

--- a/drivers/usb/core/message.c
+++ b/drivers/usb/core/message.c
@@ -226,8 +226,7 @@ int usb_bulk_msg(struct usb_device *usb_
 	struct urb *urb;
 	struct usb_host_endpoint *ep;
 
-	ep = (usb_pipein(pipe) ? usb_dev->ep_in : usb_dev->ep_out)
-			[usb_pipeendpoint(pipe)];
+	ep = usb_pipe_endpoint(usb_dev, pipe);
 	if (!ep || len < 0)
 		return -EINVAL;
 
--- a/drivers/usb/core/urb.c
+++ b/drivers/usb/core/urb.c
@@ -308,8 +308,7 @@ int usb_submit_urb(struct urb *urb, gfp_
 	 * will be required to set urb->ep directly and we will eliminate
 	 * urb->pipe.
 	 */
-	ep = (usb_pipein(urb->pipe) ? dev->ep_in : dev->ep_out)
-			[usb_pipeendpoint(urb->pipe)];
+	ep = usb_pipe_endpoint(dev, urb->pipe);
 	if (!ep)
 		return -ENOENT;
 
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -1552,6 +1552,14 @@ static inline unsigned int __create_pipe
 #define usb_rcvintpipe(dev,endpoint)	\
 	((PIPE_INTERRUPT << 30) | __create_pipe(dev, endpoint) | USB_DIR_IN)
 
+static inline struct usb_host_endpoint *
+usb_pipe_endpoint(struct usb_device *dev, unsigned int pipe)
+{
+	struct usb_host_endpoint **eps;
+	eps = usb_pipein(pipe) ? dev->ep_in : dev->ep_out;
+	return eps[usb_pipeendpoint(pipe)];
+}
+
 /*-------------------------------------------------------------------------*/
 
 static inline __u16
