From oliver@neukum.org  Mon Sep 15 10:10:04 2008
From: Oliver Neukum <oliver@neukum.org>
Date: Tue, 2 Sep 2008 14:16:11 +0200
Subject: USB: Documentation/usb/anchors.txt #2
To: greg@kroah.com
Cc: Marcel Holtmann <marcel@holtmann.org>, linux-usb@vger.kernel.org
Message-ID: <200809021416.11580.oliver@neukum.org>
Content-Disposition: inline

From: Oliver Neukum <oliver@neukum.org>

This adds Documentation for the extensions of the anchor API.

Signed-off-by: Oliver Neukum <oneukum@suse.de>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 Documentation/usb/anchors.txt |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

--- a/Documentation/usb/anchors.txt
+++ b/Documentation/usb/anchors.txt
@@ -52,6 +52,11 @@ Therefore no guarantee is made that the 
 the call returns. They may be unlinked later but will be unlinked in
 finite time.
 
+usb_scuttle_anchored_urbs()
+---------------------------
+
+All URBs of an anchor are unanchored en masse.
+
 usb_wait_anchor_empty_timeout()
 -------------------------------
 
@@ -59,4 +64,16 @@ This function waits for all URBs associa
 or a timeout, whichever comes first. Its return value will tell you
 whether the timeout was reached.
 
+usb_anchor_empty()
+------------------
+
+Returns true if no URBs are associated with an anchor. Locking
+is the caller's responsibility.
+
+usb_get_from_anchor()
+---------------------
 
+Returns the oldest anchored URB of an anchor. The URB is unanchored
+and returned with a reference. As you may mix URBs to several
+destinations in one anchor you have no guarantee the chronologically
+first submitted URB is returned.
\ No newline at end of file
