From foo@baz Tue Apr  9 12:12:43 2002
Date: Thu, 2 Aug 2007 22:44:27 -0600
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: USB: rename choose_configuration

From: Greg Kroah-Hartman <gregkh@suse.de>

As it is global, give it a usb specific name in the global namespace.

Cc: Inaky Perez-Gonzalez <inaky@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/generic.c |    4 ++--
 drivers/usb/core/hub.c     |    2 +-
 drivers/usb/core/usb.h     |    2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

--- a/drivers/usb/core/generic.c
+++ b/drivers/usb/core/generic.c
@@ -40,7 +40,7 @@ static int is_activesync(struct usb_inte
 		&& desc->bInterfaceProtocol == 1;
 }
 
-int choose_configuration(struct usb_device *udev)
+int usb_choose_configuration(struct usb_device *udev)
 {
 	int i;
 	int num_configs;
@@ -164,7 +164,7 @@ static int generic_probe(struct usb_devi
 	if (udev->authorized == 0)
 		dev_err(&udev->dev, "Device is not authorized for usage\n");
 	else {
-		c = choose_configuration(udev);
+		c = usb_choose_configuration(udev);
 		if (c >= 0) {
 			err = usb_set_configuration(udev, c);
 			if (err) {
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -1460,7 +1460,7 @@ int usb_authorize_device(struct usb_devi
 	/* Choose and set the configuration.  This registers the interfaces
 	 * with the driver core and lets interface drivers bind to them.
 	 */
-	c = choose_configuration(usb_dev);
+	c = usb_choose_configuration(usb_dev);
 	if (c >= 0) {
 		result = usb_set_configuration(usb_dev, c);
 		if (result) {
--- a/drivers/usb/core/usb.h
+++ b/drivers/usb/core/usb.h
@@ -23,7 +23,7 @@ extern int usb_get_device_descriptor(str
 		unsigned int size);
 extern char *usb_cache_string(struct usb_device *udev, int index);
 extern int usb_set_configuration(struct usb_device *dev, int configuration);
-extern int choose_configuration(struct usb_device *udev);
+extern int usb_choose_configuration(struct usb_device *udev);
 
 extern void usb_kick_khubd(struct usb_device *dev);
 extern int usb_match_device(struct usb_device *dev,
