From linux-usb-owner@vger.kernel.org  Thu Oct 21 11:35:50 2010
Date: Thu, 21 Oct 2010 10:49:10 +0200
Message-ID: <AANLkTikZZG+E0fCqHmeEdc-3uy1=U6MEeN+oX=V2WsTe@mail.gmail.com>
Subject: [PATCH] USB: mct_u232: fix broken close
From: Johan Hovold <jhovold@gmail.com>
To: Eric Shattow Eprecocious <lucent@gmail.com>,
	Greg KH <greg@kroah.com>
Cc: linux-usb@vger.kernel.org

From: Johan Hovold <jhovold@gmail.com>

Fix regression introduced by commit
f26788da3b342099d2b02d99ba1cb7f154d6ef7b (USB: serial: refactor generic
close) which broke driver close().

This driver uses non-standard semantics for the read urb which makes the
generic close function fail to kill it (the read urb is actually an
interrupt urb and therefore bulk_in size is zero).

Reported-by: Eric Shattow "Eprecocious" <lucent@gmail.com>
Tested-by: Eric Shattow "Eprecocious" <lucent@gmail.com>
Cc: stable <stable@kernel.org>
Signed-off-by: Johan Hovold <jhovold@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/serial/mct_u232.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/drivers/usb/serial/mct_u232.c
+++ b/drivers/usb/serial/mct_u232.c
@@ -549,9 +549,12 @@ static void mct_u232_close(struct usb_se
 {
 	dbg("%s port %d", __func__, port->number);
 
-	usb_serial_generic_close(port);
-	if (port->serial->dev)
+	if (port->serial->dev) {
+		/* shutdown our urbs */
+		usb_kill_urb(port->write_urb);
+		usb_kill_urb(port->read_urb);
 		usb_kill_urb(port->interrupt_in_urb);
+	}
 } /* mct_u232_close */
 
 
