From epasheva@sierrawireless.com  Tue Jun  2 13:26:43 2009
From: Elina Pasheva <epasheva@sierrawireless.com>
Date: Mon, 1 Jun 2009 11:00:19 -0700
Subject: USB: serial: adding sierra_release_urb() function
To: <gregkh@suse.de>
Cc: <epasheva@sierrawireless.com>, <rfiler@sierrawireless.com>
Message-ID: <1243879219.6383.2.camel@Linuxdev3>


From: Elina Pasheva <epasheva@sierrawireless.com>

- Added function sierra_release_urb() to free an urb and its transfer
  buffer.  This function is to be called by sierra_close() in subsequent
  patch.
- Removed unecessary include file reference and comment

Signed-off-by: Elina Pasheva <epasheva@sierrawireless.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/serial/sierra.c |   13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

--- a/drivers/usb/serial/sierra.c
+++ b/drivers/usb/serial/sierra.c
@@ -29,12 +29,10 @@
 #include <linux/module.h>
 #include <linux/usb.h>
 #include <linux/usb/serial.h>
-#include <linux/usb/ch9.h>
 
 #define SWIMS_USB_REQUEST_SetPower	0x00
 #define SWIMS_USB_REQUEST_SetNmea	0x07
 
-/* per port private data */
 #define N_IN_URB	8
 #define N_OUT_URB	64
 #define IN_BUFLEN	4096
@@ -328,6 +326,17 @@ static int sierra_tiocmset(struct tty_st
 	return sierra_send_setup(tty, port);
 }
 
+static void sierra_release_urb(struct urb *urb)
+{
+	struct usb_serial_port *port;
+	if (urb) {
+		port =  urb->context;
+		dev_dbg(&port->dev, "%s: %p\n", __func__, urb);
+		kfree(urb->transfer_buffer);
+		usb_free_urb(urb);
+	}
+}
+
 static void sierra_outdat_callback(struct urb *urb)
 {
 	struct usb_serial_port *port = urb->context;
