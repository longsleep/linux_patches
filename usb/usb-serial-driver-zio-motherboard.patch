From vijaykumar@zilogic.com  Thu Apr 22 16:27:03 2010
From: Vijay Kumar <vijaykumar@zilogic.com>
Date: Wed, 10 Mar 2010 21:17:56 +0530
Subject: USB Serial Driver: ZIO Motherboard
To: linux-usb@vger.kernel.org
Cc: gregkh@suse.de
Message-ID: <4B97BF2C.5000803@zilogic.com>


Add ZIO Motherboard USB serial interface driver.

Signed-off-by: Vijay Kumar B. <vijaykumar@zilogic.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/serial/Kconfig  |    8 +++++
 drivers/usb/serial/Makefile |    1 
 drivers/usb/serial/zio.c    |   64 ++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 73 insertions(+)

--- a/drivers/usb/serial/Kconfig
+++ b/drivers/usb/serial/Kconfig
@@ -619,6 +619,14 @@ config USB_SERIAL_VIVOPAY_SERIAL
           To compile this driver as a module, choose M here: the
           module will be called vivopay-serial.
 
+config USB_SERIAL_ZIO
+	tristate "ZIO Motherboard USB serial interface driver"
+	help
+	  Say Y here if you want to use ZIO Motherboard.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called zio.
+
 config USB_SERIAL_DEBUG
 	tristate "USB Debugging Device"
 	help
--- a/drivers/usb/serial/Makefile
+++ b/drivers/usb/serial/Makefile
@@ -57,4 +57,5 @@ obj-$(CONFIG_USB_SERIAL_VISOR)			+= viso
 obj-$(CONFIG_USB_SERIAL_WHITEHEAT)		+= whiteheat.o
 obj-$(CONFIG_USB_SERIAL_XIRCOM)			+= keyspan_pda.o
 obj-$(CONFIG_USB_SERIAL_VIVOPAY_SERIAL)	+= vivopay-serial.o
+obj-$(CONFIG_USB_SERIAL_ZIO)			+= zio.o
 
--- /dev/null
+++ b/drivers/usb/serial/zio.c
@@ -0,0 +1,64 @@
+/*
+ * ZIO Motherboard USB driver
+ *
+ * Copyright (C) 2010 Zilogic Systems <code@zilogic.com>
+ *
+ *	This program is free software; you can redistribute it and/or
+ *	modify it under the terms of the GNU General Public License version
+ *	2 as published by the Free Software Foundation.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/tty.h>
+#include <linux/module.h>
+#include <linux/usb.h>
+#include <linux/usb/serial.h>
+#include <linux/uaccess.h>
+
+static const struct usb_device_id id_table[] = {
+	{ USB_DEVICE(0x1CBE, 0x0103) },
+	{ },
+};
+MODULE_DEVICE_TABLE(usb, id_table);
+
+static struct usb_driver zio_driver = {
+	.name =		"zio",
+	.probe =	usb_serial_probe,
+	.disconnect =	usb_serial_disconnect,
+	.id_table =	id_table,
+	.no_dynamic_id =	1,
+};
+
+static struct usb_serial_driver zio_device = {
+	.driver = {
+		.owner =	THIS_MODULE,
+		.name =		"zio",
+	},
+	.id_table =		id_table,
+	.usb_driver =		&zio_driver,
+	.num_ports =		1,
+};
+
+static int __init zio_init(void)
+{
+	int retval;
+
+	retval = usb_serial_register(&zio_device);
+	if (retval)
+		return retval;
+	retval = usb_register(&zio_driver);
+	if (retval)
+		usb_serial_deregister(&zio_device);
+	return retval;
+}
+
+static void __exit zio_exit(void)
+{
+	usb_deregister(&zio_driver);
+	usb_serial_deregister(&zio_device);
+}
+
+module_init(zio_init);
+module_exit(zio_exit);
+MODULE_LICENSE("GPL");
