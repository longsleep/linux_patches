From u.kleine-koenig@pengutronix.de  Thu Apr 16 10:17:10 2009
From: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date: Sat, 28 Mar 2009 00:26:33 +0100
Subject: USB: move orion-ehci's probe function to .devinit.text
Cc: Andrew Morton <akpm@linux-foundation.org>, Ronen Shitrit <rshitrit@marvell.com>, Lennert Buytenhek <buytenh@marvell.com>, Greg Kroah-Hartman <gregkh@suse.de>, Alan Stern <stern@rowland.harvard.edu>, David Brownell <david-b@pacbell.net>, Nicolas Pitre <nico@marvell.com>, Russell King <rmk+kernel@arm.linux.org.uk>, Tzachi Perelstein <tzachi@marvell.com>
Message-ID: <1238196439-16535-12-git-send-email-u.kleine-koenig@pengutronix.de>


A pointer to ehci_orion_drv_probe is passed to the core via
platform_driver_register and so the function must not disappear when the
.init sections are discarded.  Otherwise (if also having HOTPLUG=y)
unbinding and binding a device to the driver via sysfs will result in an
oops as does a device being registered late.

An alternative to this patch is using platform_driver_probe instead of
platform_driver_register plus removing the pointer to the probe function
from the struct platform_driver.

Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Cc: Ronen Shitrit <rshitrit@marvell.com>
Cc: Lennert Buytenhek <buytenh@marvell.com>
Cc: Alan Stern <stern@rowland.harvard.edu>
Cc: David Brownell <david-b@pacbell.net>
Cc: Nicolas Pitre <nico@marvell.com>
Cc: Russell King <rmk+kernel@arm.linux.org.uk>
Cc: Tzachi Perelstein <tzachi@marvell.com>
Cc: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/ehci-orion.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/usb/host/ehci-orion.c
+++ b/drivers/usb/host/ehci-orion.c
@@ -187,7 +187,7 @@ ehci_orion_conf_mbus_windows(struct usb_
 	}
 }
 
-static int __init ehci_orion_drv_probe(struct platform_device *pdev)
+static int __devinit ehci_orion_drv_probe(struct platform_device *pdev)
 {
 	struct orion_ehci_data *pd = pdev->dev.platform_data;
 	struct resource *res;
