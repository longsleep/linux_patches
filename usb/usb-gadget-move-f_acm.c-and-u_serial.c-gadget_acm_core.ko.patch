From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 13 Aug 2008 20:08:35 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: USB gadget: move f_acm.c and u_serial.c gadget_acm_core.ko

As f_ecm.c and u_serial.c are included in multiple .ko files, move them
into a standalone gadget_acm_core.ko

Cc: David Brownell <david-b@pacbell.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/gadget/Makefile   |    9 +++++----
 drivers/usb/gadget/f_acm.c    |   16 ++++++++++++++++
 drivers/usb/gadget/u_serial.c |    4 ++++
 3 files changed, 25 insertions(+), 4 deletions(-)

--- a/drivers/usb/gadget/f_acm.c
+++ b/drivers/usb/gadget/f_acm.c
@@ -661,6 +661,7 @@ fail:
 
 	return status;
 }
+EXPORT_SYMBOL_GPL(acm_bind);
 
 static void
 acm_unbind(struct usb_configuration *c, struct usb_function *f)
@@ -757,3 +758,18 @@ int __init acm_bind_config(struct usb_co
 		kfree(acm);
 	return status;
 }
+EXPORT_SYMBOL_GPL(acm_bind_config);
+
+static int __init acm_init(void)
+{
+	return 0;
+}
+
+static void __exit acm_exit(void)
+{
+}
+
+module_init(acm_init);
+module_exit(acm_exit);
+
+MODULE_LICENSE("GPL");
--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -27,15 +27,16 @@ gadget_core-objs		:= composite.o usbstri
 					epautoconf.o
 gadget_ether_core-objs		:= u_ether.o
 gadget_ecm_core-objs		:= f_ecm.o
+gadget_acm_core-objs		:= f_acm.o u_serial.o
 
 g_zero-objs			:= zero.o f_sourcesink.o f_loopback.o
 g_ether-objs			:= ether.o f_subset.o
-g_serial-objs			:= serial.o u_serial.o f_acm.o f_serial.o
+g_serial-objs			:= serial.o f_serial.o
 g_midi-objs			:= gmidi.o
 gadgetfs-objs			:= inode.o
 g_file_storage-objs		:= file_storage.o
 g_printer-objs			:= printer.o
-g_cdc-objs			:= cdc2.o u_serial.o f_acm.o
+g_cdc-objs			:= cdc2.o
 
 ifeq ($(CONFIG_USB_ETH_RNDIS),y)
 	g_ether-objs		+= f_rndis.o rndis.o
@@ -46,8 +47,8 @@ obj-$(CONFIG_USB_ETH)		+= g_ether.o gadg
 					gadget_ecm_core.o
 obj-$(CONFIG_USB_GADGETFS)	+= gadgetfs.o
 obj-$(CONFIG_USB_FILE_STORAGE)	+= g_file_storage.o gadget_core.o
-obj-$(CONFIG_USB_G_SERIAL)	+= g_serial.o gadget_core.o
+obj-$(CONFIG_USB_G_SERIAL)	+= g_serial.o gadget_core.o gadget_acm_core.o
 obj-$(CONFIG_USB_G_PRINTER)	+= g_printer.o gadget_core.o
 obj-$(CONFIG_USB_MIDI_GADGET)	+= g_midi.o gadget_core.o
 obj-$(CONFIG_USB_CDC_COMPOSITE) += g_cdc.o gadget_core.o gadget_ether_core.o \
-					gadget_ether_core.o
+					gadget_ether_core.o gadget_acm_core.o
--- a/drivers/usb/gadget/u_serial.c
+++ b/drivers/usb/gadget/u_serial.c
@@ -1140,6 +1140,7 @@ fail:
 	gs_tty_driver = NULL;
 	return status;
 }
+EXPORT_SYMBOL_GPL(gserial_setup);
 
 static int gs_closed(struct gs_port *port)
 {
@@ -1198,6 +1199,7 @@ void gserial_cleanup(void)
 
 	pr_debug("%s: cleaned up ttyGS* support\n", __func__);
 }
+EXPORT_SYMBOL_GPL(gserial_cleanup);
 
 /**
  * gserial_connect - notify TTY I/O glue that USB link is active
@@ -1277,6 +1279,7 @@ fail_out:
 	gser->in->driver_data = NULL;
 	return status;
 }
+EXPORT_SYMBOL_GPL(gserial_connect);
 
 /**
  * gserial_disconnect - notify TTY I/O glue that USB link is inactive
@@ -1328,3 +1331,4 @@ void gserial_disconnect(struct gserial *
 	gs_free_requests(gser->in, &port->write_pool);
 	spin_unlock_irqrestore(&port->port_lock, flags);
 }
+EXPORT_SYMBOL_GPL(gserial_disconnect);
