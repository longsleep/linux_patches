From zaitcev@redhat.com Mon Jul 23 02:16:35 2007
From: Pete Zaitcev <zaitcev@redhat.com>
Date: Mon, 23 Jul 2007 02:17:49 -0700
Subject: usblp: Make use of URB_FREE_BUFFER
To: greg@kroah.com
Cc: zaitcev@redhat.com, linux-usb-devel@lists.sourceforge.net
Message-ID: <20070723021749.0fbc82fe.zaitcev@redhat.com>


Employ the new API URB_FREE_BUFFER that we've got. There was talk of a combined
constructor for this case, but apparently it's not happening, so just set the
flag explicitly for now.

Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/class/usblp.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

--- a/drivers/usb/class/usblp.c
+++ b/drivers/usb/class/usblp.c
@@ -331,9 +331,6 @@ static void usblp_bulk_write(struct urb 
 	wake_up(&usblp->wwait);
 	spin_unlock(&usblp->lock);
 
-	/* XXX Use usb_setup_bulk_urb when available. Talk to Marcel. */
-	kfree(urb->transfer_buffer);
-	urb->transfer_buffer = NULL;	/* Not refcounted, so to be safe... */
 	usb_free_urb(urb);
 }
 
@@ -719,6 +716,7 @@ static ssize_t usblp_write(struct file *
 			usb_sndbulkpipe(usblp->dev,
 			  usblp->protocol[usblp->current_protocol].epwrite->bEndpointAddress),
 			writebuf, transfer_length, usblp_bulk_write, usblp);
+		writeurb->transfer_flags |= URB_FREE_BUFFER;
 		usb_anchor_urb(writeurb, &usblp->urbs);
 
 		if (copy_from_user(writebuf,
