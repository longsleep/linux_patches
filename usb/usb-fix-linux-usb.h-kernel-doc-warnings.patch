From linux-usb-owner@vger.kernel.org  Mon Aug  2 16:04:48 2010
Date: Thu, 29 Jul 2010 15:54:38 -0700
From: Randy Dunlap <randy.dunlap@oracle.com>
Cc: gregkh@suse.de
Subject: USB:: fix linux/usb.h kernel-doc warnings
Message-Id: <20100729155438.d3a02177.randy.dunlap@oracle.com>

From: Randy Dunlap <randy.dunlap@oracle.com>

Fix kernel-doc warnings in linux/usb.h:

Warning(include/linux/usb.h:185): No description found for parameter 'resetting_device'
Warning(include/linux/usb.h:1212): No description found for parameter 'stream_id'

Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 include/linux/usb.h |    3 +++
 1 file changed, 3 insertions(+)

--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -127,6 +127,8 @@ enum usb_interface_condition {
  *      queued reset so that usb_cancel_queued_reset() doesn't try to
  *      remove from the workqueue when running inside the worker
  *      thread. See __usb_queue_reset_device().
+ * @resetting_device: USB core reset the device, so use alt setting 0 as
+ *	current; needs bandwidth alloc after reset.
  *
  * USB device drivers attach to interfaces on a physical device.  Each
  * interface encapsulates a single high level function, such as feeding
@@ -1015,6 +1017,7 @@ typedef void (*usb_complete_t)(struct ur
  *	is a different endpoint (and pipe) from "out" endpoint two.
  *	The current configuration controls the existence, type, and
  *	maximum packet size of any given endpoint.
+ * @stream_id: the endpoint's stream ID for bulk streams
  * @dev: Identifies the USB device to perform the request.
  * @status: This is read in non-iso completion functions to get the
  *	status of the particular request.  ISO requests only use it
