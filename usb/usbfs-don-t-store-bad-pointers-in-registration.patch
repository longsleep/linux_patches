From stern@rowland.harvard.edu  Fri Jun 27 15:15:45 2008
From: Alan Stern <stern@rowland.harvard.edu>
Date: Tue, 24 Jun 2008 14:47:29 -0400 (EDT)
Subject: usbfs: don't store bad pointers in registration
To: Greg KH <greg@kroah.com>
Cc: USB list <linux-usb@vger.kernel.org>
Message-ID: <Pine.LNX.4.44L0.0806241444500.2166-100000@iolanthe.rowland.org>


This patch (as1107) fixes a small bug in the usbfs registration and
unregistration code.  It avoids leaving an error value stored in the
device's usb_classdev field and it avoids trying to unregister a NULL
pointer.  (It also fixes a rather extreme overuse of whitespace.)

Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/devio.c |   21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

--- a/drivers/usb/core/devio.c
+++ b/drivers/usb/core/devio.c
@@ -1726,24 +1726,21 @@ static struct class *usb_classdev_class;
 
 static int usb_classdev_add(struct usb_device *dev)
 {
-	int minor = ((dev->bus->busnum-1) * 128) + (dev->devnum-1);
-
-	dev->usb_classdev = device_create_drvdata(usb_classdev_class,
-						  &dev->dev,
-						  MKDEV(USB_DEVICE_MAJOR,
-							minor), NULL,
-						  "usbdev%d.%d",
-						  dev->bus->busnum,
-						  dev->devnum);
-	if (IS_ERR(dev->usb_classdev))
-		return PTR_ERR(dev->usb_classdev);
+	struct device *cldev;
 
+	cldev = device_create_drvdata(usb_classdev_class,
+			&dev->dev, dev->dev.devt, NULL,
+			"usbdev%d.%d", dev->bus->busnum, dev->devnum);
+	if (IS_ERR(cldev))
+		return PTR_ERR(cldev);
+	dev->usb_classdev = cldev;
 	return 0;
 }
 
 static void usb_classdev_remove(struct usb_device *dev)
 {
-	device_unregister(dev->usb_classdev);
+	if (dev->usb_classdev)
+		device_unregister(dev->usb_classdev);
 	usb_fs_classdev_common_remove(dev);
 }
 
