From foo@baz Mon May 17 10:33:41 PDT 2010
Date: Mon, 17 May 2010 10:33:41 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: USB: kobil_sct.h: checkpatch cleanups

Minor whitespace cleanups to make checkpatch happy.

Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/usb/serial/kobil_sct.h |   75 +++++++++++++++++++++++++----------------
 1 file changed, 46 insertions(+), 29 deletions(-)

--- a/drivers/usb/serial/kobil_sct.h
+++ b/drivers/usb/serial/kobil_sct.h
@@ -23,38 +23,55 @@
 #define SUSBCR_SSL_SETDTR			0x0004
 #define SUSBCR_SSL_CLRDTR			0x0010
 
-#define SUSBCR_SSL_PURGE_TXABORT		0x0100  // Kill the pending/current writes to the comm port.
-#define SUSBCR_SSL_PURGE_RXABORT		0x0200  // Kill the pending/current reads to the comm port.
-#define SUSBCR_SSL_PURGE_TXCLEAR		0x0400  // Kill the transmit queue if there.
-#define SUSBCR_SSL_PURGE_RXCLEAR		0x0800  // Kill the typeahead buffer if there.
+/* Kill the pending/current writes to the comm port. */
+#define SUSBCR_SSL_PURGE_TXABORT		0x0100
+/* Kill the pending/current reads to the comm port. */
+#define SUSBCR_SSL_PURGE_RXABORT		0x0200
+/* Kill the transmit queue if there. */
+#define SUSBCR_SSL_PURGE_TXCLEAR		0x0400
+/* Kill the typeahead buffer if there. */
+#define SUSBCR_SSL_PURGE_RXCLEAR		0x0800
 
 #define SUSBCRequest_GetStatusLineState		4
-#define SUSBCR_GSL_RXCHAR			0x0001  // Any Character received
-#define SUSBCR_GSL_TXEMPTY			0x0004  // Transmitt Queue Empty
-#define SUSBCR_GSL_CTS				0x0008  // CTS changed state
-#define SUSBCR_GSL_DSR				0x0010  // DSR changed state
-#define SUSBCR_GSL_RLSD				0x0020  // RLSD changed state
-#define SUSBCR_GSL_BREAK			0x0040  // BREAK received
-#define SUSBCR_GSL_ERR				0x0080  // Line status error occurred
-#define SUSBCR_GSL_RING				0x0100  // Ring signal detected
+/* Any Character received */
+#define SUSBCR_GSL_RXCHAR			0x0001
+/* Transmitt Queue Empty */
+#define SUSBCR_GSL_TXEMPTY			0x0004
+/* CTS changed state */
+#define SUSBCR_GSL_CTS				0x0008
+/* DSR changed state */
+#define SUSBCR_GSL_DSR				0x0010
+/* RLSD changed state */
+#define SUSBCR_GSL_RLSD				0x0020
+/* BREAK received */
+#define SUSBCR_GSL_BREAK			0x0040
+/* Line status error occurred */
+#define SUSBCR_GSL_ERR				0x0080
+/* Ring signal detected */
+#define SUSBCR_GSL_RING				0x0100
 
 #define SUSBCRequest_Misc			8
-#define SUSBCR_MSC_ResetReader			0x0001	// use a predefined reset sequence
-#define SUSBCR_MSC_ResetAllQueues		0x0002	// use a predefined sequence to reset the internal queues
+/* use a predefined reset sequence */
+#define SUSBCR_MSC_ResetReader			0x0001
+/* use a predefined sequence to reset the internal queues */
+#define SUSBCR_MSC_ResetAllQueues		0x0002
 
 #define SUSBCRequest_GetMisc			0x10
-#define SUSBCR_MSC_GetFWVersion			0x0001	/* get the firmware version from device,
-							   coded like this 0xHHLLBBPP
-							   with HH = Firmware Version High Byte
-							   LL = Firmware Version Low Byte
-							   BB = Build Number
-							   PP = Further Attributes
-							*/
-
-#define SUSBCR_MSC_GetHWVersion			0x0002	/* get the hardware version from device
-							   coded like this 0xHHLLPPRR
-							   with HH = Software Version High Byte
-							   LL = Software Version Low Byte
-							   PP = Further Attributes
-							   RR = Reserved for the hardware ID 
-							*/
+
+/*
+ * get the firmware version from device, coded like this 0xHHLLBBPP with
+ * HH = Firmware Version High Byte
+ * LL = Firmware Version Low Byte
+ * BB = Build Number
+ * PP = Further Attributes
+ */
+#define SUSBCR_MSC_GetFWVersion			0x0001
+
+/*
+ * get the hardware version from device coded like this 0xHHLLPPRR with
+ * HH = Software Version High Byte
+ * LL = Software Version Low Byte
+ * PP = Further Attributes
+ * RR = Reserved for the hardware ID
+ */
+#define SUSBCR_MSC_GetHWVersion			0x0002
