From sarah.a.sharp@intel.com  Wed Oct  3 17:30:15 2007
From: Sarah Sharp <sarah.a.sharp@intel.com>
Date: Wed, 3 Oct 2007 14:56:03 -0700
Subject: USB: Export URB statistics for powertop
To: Greg KH <greg@kroah.com>
Cc: "Van De Ven, Arjan" <arjan@linux.intel.com>
Message-ID: <20071003215603.GA6317@localdomain>
Content-Disposition: inline


powertop currently tracks interrupts generated by uhci and ehci and
ohci, but it has no way of telling which USB device to blame interrupts
on.  This patch exports the number of URBs that complete for a given
device.  Cat the file 'urbnum' in /sys/bus/usb/devices/.../

Signed-off-by: Sarah Sharp <sarah.a.sharp@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/driver.c |    1 +
 drivers/usb/core/hcd.c    |    1 +
 drivers/usb/core/sysfs.c  |   11 +++++++++++
 include/linux/usb.h       |    1 +
 4 files changed, 14 insertions(+)

--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -170,6 +170,7 @@ static int usb_probe_device(struct devic
 	 * unless the driver suports autosuspend.
 	 */
 	udev->pm_usage_cnt = !(udriver->supports_autosuspend);
+	atomic_set(&udev->urb_cnt, 0);
 
 	error = udriver->probe(udev);
 	return error;
--- a/drivers/usb/core/hcd.c
+++ b/drivers/usb/core/hcd.c
@@ -1279,6 +1279,7 @@ void usb_hcd_giveback_urb(struct usb_hcd
 		status = -EREMOTEIO;
 
 	unmap_urb_for_dma(hcd, urb);
+	atomic_inc(&urb->dev->urb_cnt);
 	usbmon_urb_complete(&hcd->self, urb, status);
 	usb_unanchor_urb(urb);
 
--- a/drivers/usb/core/sysfs.c
+++ b/drivers/usb/core/sysfs.c
@@ -169,6 +169,16 @@ show_quirks(struct device *dev, struct d
 }
 static DEVICE_ATTR(quirks, S_IRUGO, show_quirks, NULL);
 
+static ssize_t
+show_urbnum(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct usb_device *udev;
+
+	udev = to_usb_device(dev);
+	return sprintf(buf, "%d\n", atomic_read(&udev->urb_cnt));
+}
+static DEVICE_ATTR(urbnum, S_IRUGO, show_urbnum, NULL);
+
 
 #if defined(CONFIG_USB_PERSIST) || defined(CONFIG_USB_SUSPEND)
 static const char power_group[] = "power";
@@ -458,6 +468,7 @@ static struct attribute *dev_attrs[] = {
 	&dev_attr_bConfigurationValue.attr,
 	&dev_attr_bmAttributes.attr,
 	&dev_attr_bMaxPower.attr,
+	&dev_attr_urbnum.attr,
 	/* device attributes */
 	&dev_attr_idVendor.attr,
 	&dev_attr_idProduct.attr,
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -415,6 +415,7 @@ struct usb_device {
 
 	int pm_usage_cnt;		/* usage counter for autosuspend */
 	u32 quirks;			/* quirks of the whole device */
+	atomic_t urb_cnt;		/* number of URBs completed for the whole device */
 
 #ifdef CONFIG_PM
 	struct delayed_work autosuspend; /* for delayed autosuspends */
