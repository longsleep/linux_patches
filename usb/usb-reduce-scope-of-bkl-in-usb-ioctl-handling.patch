From oliver@neukum.org  Fri Jan 15 14:54:54 2010
From: Oliver Neukum <oliver@neukum.org>
Date: Wed, 13 Jan 2010 15:33:43 +0100
Subject: USB: Reduce scope of BKL in usb ioctl handling
Message-ID: <201001131533.43653.oliver@neukum.org>


From: Oliver Neukum <oliver@neukum.org>

This pushes BKL down in ioctl handling and drops it
for some important ioctls

Signed-off-by: Oliver Neukum <oliver@neukum.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/core/devio.c |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

--- a/drivers/usb/core/devio.c
+++ b/drivers/usb/core/devio.c
@@ -1719,9 +1719,12 @@ static long usbdev_do_ioctl(struct file
 
 	if (!(file->f_mode & FMODE_WRITE))
 		return -EPERM;
+
+	lock_kernel();
 	usb_lock_device(dev);
 	if (!connected(ps)) {
 		usb_unlock_device(dev);
+		unlock_kernel();
 		return -ENODEV;
 	}
 
@@ -1780,10 +1783,12 @@ static long usbdev_do_ioctl(struct file
 		break;
 
 	case USBDEVFS_SUBMITURB:
+		unlock_kernel();
 		snoop(&dev->dev, "%s: SUBMITURB\n", __func__);
 		ret = proc_submiturb(ps, p);
 		if (ret >= 0)
 			inode->i_mtime = CURRENT_TIME;
+		lock_kernel();
 		break;
 
 #ifdef CONFIG_COMPAT
@@ -1835,13 +1840,17 @@ static long usbdev_do_ioctl(struct file
 		break;
 
 	case USBDEVFS_REAPURB:
+		unlock_kernel();
 		snoop(&dev->dev, "%s: REAPURB\n", __func__);
 		ret = proc_reapurb(ps, p);
+		lock_kernel();
 		break;
 
 	case USBDEVFS_REAPURBNDELAY:
+		unlock_kernel();
 		snoop(&dev->dev, "%s: REAPURBNDELAY\n", __func__);
 		ret = proc_reapurbnonblock(ps, p);
+		lock_kernel();
 		break;
 
 	case USBDEVFS_DISCSIGNAL:
@@ -1875,6 +1884,7 @@ static long usbdev_do_ioctl(struct file
 		break;
 	}
 	usb_unlock_device(dev);
+	unlock_kernel();
 	if (ret >= 0)
 		inode->i_atime = CURRENT_TIME;
 	return ret;
@@ -1885,9 +1895,7 @@ static long usbdev_ioctl(struct file *fi
 {
 	int ret;
 
-	lock_kernel();
 	ret = usbdev_do_ioctl(file, cmd, (void __user *)arg);
-	unlock_kernel();
 
 	return ret;
 }
@@ -1898,9 +1906,7 @@ static long usbdev_compat_ioctl(struct f
 {
 	int ret;
 
-	lock_kernel();
 	ret = usbdev_do_ioctl(file, cmd, compat_ptr(arg));
-	unlock_kernel();
 
 	return ret;
 }
