From catalin.marinas@arm.com  Mon Feb  1 14:07:01 2010
From: Catalin Marinas <catalin.marinas@arm.com>
Date: Mon, 01 Feb 2010 17:29:14 +0000
Subject: isp1760: Flush the D-cache for the pipe-in transfer buffers
To: Matthew Dharm <mdharm-kernel@one-eyed-alien.net>
Cc: Sergei Shtylyov <sshtylyov@ru.mvista.com>, Ming Lei <tom.leiming@gmail.com>, Sebastian Siewior <bigeasy@linutronix.de>, Greg KH <greg@kroah.com>
Message-ID: <1265045354.25750.52.camel@pc1117.cambridge.arm.com>


isp1760: Flush the D-cache for the pipe-in transfer buffers

From: Catalin Marinas <catalin.marinas@arm.com>

When the HDC driver writes the data to the transfer buffers it pollutes
the D-cache (unlike DMA drivers where the device writes the data). If
the corresponding pages get mapped into user space, there are no
additional cache flushing operations performed and this causes random
user space faults on architectures with separate I and D caches
(Harvard) or those with aliasing D-cache.

Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
Cc: Matthew Dharm <mdharm-kernel@one-eyed-alien.net>
Cc: Sebastian Siewior <bigeasy@linutronix.de>
Cc: Mike Frysinger <vapier@gentoo.org>
Cc: Harvey Harrison <harvey.harrison@gmail.com>
Cc: Ming Lei <tom.leiming@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/host/isp1760-hcd.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/drivers/usb/host/isp1760-hcd.c
+++ b/drivers/usb/host/isp1760-hcd.c
@@ -18,6 +18,8 @@
 #include <linux/uaccess.h>
 #include <linux/io.h>
 #include <asm/unaligned.h>
+#include <asm/cacheflush.h>
+#include <asm/memory.h>
 
 #include "../core/hcd.h"
 #include "isp1760-hcd.h"
@@ -904,6 +906,14 @@ __acquires(priv->lock)
 			status = 0;
 	}
 
+	if (usb_pipein(urb->pipe) && usb_pipetype(urb->pipe) == PIPE_BULK) {
+		void *ptr;
+		for (ptr = urb->transfer_buffer;
+		     ptr < urb->transfer_buffer + urb->transfer_buffer_length;
+		     ptr += PAGE_SIZE)
+			flush_dcache_page(virt_to_page(ptr));
+	}
+
 	/* complete() can reenter this HCD */
 	usb_hcd_unlink_urb_from_ep(priv_to_hcd(priv), urb);
 	spin_unlock(&priv->lock);
