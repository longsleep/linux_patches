From khilman@deeprootsystems.com  Tue Sep 23 16:01:00 2008
From: Kevin Hilman <khilman@deeprootsystems.com>
Date: Mon, 15 Sep 2008 12:09:31 +0200
Subject: MUSB: Add sanity check for maximum number of endpoints
To: linux-usb@vger.kernel.org
Cc: felipe.balbi@nokia.com, Kevin Hilman <khilman@deeprootsystems.com>
Message-ID: <1221473371-4928-1-git-send-email-khilman@deeprootsystems.com>


There is no check if platform code passes in more endpoints (num_eps)
than the maximum number of enpoints (MUSB_C_NUM_EPS.)  The result is
that allocate_instance() happily writes past the end of 'struct musb'
corrupting memory.

This patch adds a BUG() if the platform code requests more than the max.

Signed-off-by: Kevin Hilman <khilman@deeprootsystems.com>
Acked-by: Felipe Balbi <felipe.balbi@nokia.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/musb/musb_core.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/usb/musb/musb_core.c
+++ b/drivers/usb/musb/musb_core.c
@@ -1806,6 +1806,7 @@ allocate_instance(struct device *dev,
 	musb->ctrl_base = mbase;
 	musb->nIrq = -ENODEV;
 	musb->config = config;
+	BUG_ON(musb->config->num_eps > MUSB_C_NUM_EPS);
 	for (epnum = 0, ep = musb->endpoints;
 			epnum < musb->config->num_eps;
 			epnum++, ep++) {
