From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 09 Apr 2008 07:41:21 +0400
From: Manu Abraham <manu@linuxtv.org>
To: Greg KH <greg@kroah.com>
Subject:

Reorganization, move DVB specific parts to firesat_dvb.c

Cc: Christian Dolzer <c.dolzer@digital-everywhere.com>
Cc: Andreas Monitzer <andy@monitzer.com>
Cc: Fabio De Lorenzo <delorenzo.fabio@gmail.com>
Cc: Robert Berger <robert.berger@reliableembeddedsystems.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/media/dvb/firesat/Makefile       |    1 
 drivers/media/dvb/firesat/firesat.h      |    5 
 drivers/media/dvb/firesat/firesat_1394.c |  163 ---------------------------
 drivers/media/dvb/firesat/firesat_dvb.c  |  184 +++++++++++++++++++++++++++++++
 4 files changed, 190 insertions(+), 163 deletions(-)

--- a/drivers/media/dvb/firesat/Makefile
+++ b/drivers/media/dvb/firesat/Makefile
@@ -1,4 +1,5 @@
 firesat-objs := firesat_1394.o	\
+		firesat_dvb.o	\
 		avc_api.o	\
 		cmp.o		\
 		firesat-rc.o	\
--- a/drivers/media/dvb/firesat/firesat.h
+++ b/drivers/media/dvb/firesat/firesat.h
@@ -70,4 +70,9 @@ struct firesat {
 extern struct list_head firesat_list;
 extern spinlock_t firesat_list_lock;
 
+/* firesat_dvb.c */
+extern int firesat_start_feed(struct dvb_demux_feed *dvbdmxfeed);
+extern int firesat_stop_feed(struct dvb_demux_feed *dvbdmxfeed);
+
+
 #endif
--- a/drivers/media/dvb/firesat/firesat_1394.c
+++ b/drivers/media/dvb/firesat/firesat_1394.c
@@ -485,169 +485,6 @@ static int firesat_get_frontend(struct d
 	return -EOPNOTSUPP;
 }
 
-static struct firesat_channel *firesat_channel_allocate(struct firesat *firesat)
-{
-	int k;
-
-	printk(KERN_INFO "%s\n", __func__);
-
-	if (down_interruptible(&firesat->demux_sem))
-		return NULL;
-
-	for (k = 0; k < 16; k++) {
-		printk(KERN_INFO "%s: channel %d: active = %d, pid = 0x%x\n",__func__,k,firesat->channel[k].active,firesat->channel[k].pid);
-
-		if (firesat->channel[k].active == 0) {
-			firesat->channel[k].active = 1;
-			up(&firesat->demux_sem);
-			return &firesat->channel[k];
-		}
-	}
-
-	up(&firesat->demux_sem);
-	return NULL; // no more channels available
-}
-
-static int firesat_channel_collect(struct firesat *firesat, int *pidc, u16 pid[])
-{
-	int k, l = 0;
-
-	if (down_interruptible(&firesat->demux_sem))
-		return -EINTR;
-
-	for (k = 0; k < 16; k++)
-		if (firesat->channel[k].active == 1)
-			pid[l++] = firesat->channel[k].pid;
-
-	up(&firesat->demux_sem);
-
-	*pidc = l;
-
-	return 0;
-}
-
-static int firesat_channel_release(struct firesat *firesat,
-				   struct firesat_channel *channel)
-{
-	if (down_interruptible(&firesat->demux_sem))
-		return -EINTR;
-
-	channel->active = 0;
-
-	up(&firesat->demux_sem);
-	return 0;
-}
-
-static int firesat_start_feed(struct dvb_demux_feed *dvbdmxfeed)
-{
-	struct firesat *firesat = (struct firesat*)dvbdmxfeed->demux->priv;
-	struct firesat_channel *channel;
-	int pidc,k;
-	u16 pids[16];
-
-	printk(KERN_INFO "%s (pid %u)\n",__func__,dvbdmxfeed->pid);
-
-	switch (dvbdmxfeed->type) {
-	case DMX_TYPE_TS:
-	case DMX_TYPE_SEC:
-		break;
-	default:
-		printk("%s: invalid type %u\n",__func__,dvbdmxfeed->type);
-		return -EINVAL;
-	}
-
-	if (dvbdmxfeed->type == DMX_TYPE_TS) {
-		switch (dvbdmxfeed->pes_type) {
-		case DMX_TS_PES_VIDEO:
-		case DMX_TS_PES_AUDIO:
-		case DMX_TS_PES_TELETEXT:
-		case DMX_TS_PES_PCR:
-		case DMX_TS_PES_OTHER:
-			channel = firesat_channel_allocate(firesat);
-			break;
-		default:
-			printk("%s: invalid pes type %u\n",__func__, dvbdmxfeed->pes_type);
-			return -EINVAL;
-		}
-	} else {
-		channel = firesat_channel_allocate(firesat);
-	}
-
-	if (!channel) {
-		printk("%s: busy!\n", __func__);
-		return -EBUSY;
-	}
-
-	dvbdmxfeed->priv = channel;
-
-	channel->dvbdmxfeed = dvbdmxfeed;
-	channel->pid = dvbdmxfeed->pid;
-	channel->type = dvbdmxfeed->type;
-	channel->firesat = firesat;
-
-	if (firesat_channel_collect(firesat, &pidc, pids)) {
-		firesat_channel_release(firesat, channel);
-		return -EINTR;
-	}
-
-	if ((k = AVCTuner_SetPIDs(firesat, pidc, pids))) {
-		firesat_channel_release(firesat, channel);
-		printk("%s: AVCTuner failed with error %d\n", __func__, k);
-		return k;
-	}
-
-	return 0;
-}
-
-static int firesat_stop_feed(struct dvb_demux_feed *dvbdmxfeed)
-{
-	struct dvb_demux *demux = dvbdmxfeed->demux;
-	struct firesat *firesat = (struct firesat*)demux->priv;
-	int k, l = 0;
-	u16 pids[16];
-
-	printk(KERN_INFO "%s (pid %u)\n", __func__, dvbdmxfeed->pid);
-
-	if (dvbdmxfeed->type == DMX_TYPE_TS && !((dvbdmxfeed->ts_type & TS_PACKET) &&
-				(demux->dmx.frontend->source != DMX_MEMORY_FE))) {
-
-		if (dvbdmxfeed->ts_type & TS_DECODER) {
-
-			if (dvbdmxfeed->pes_type >= DMX_TS_PES_OTHER ||
-				!demux->pesfilter[dvbdmxfeed->pes_type])
-
-				return -EINVAL;
-
-			demux->pids[dvbdmxfeed->pes_type] |= 0x8000;
-			demux->pesfilter[dvbdmxfeed->pes_type] = 0;
-		}
-
-		if (!(dvbdmxfeed->ts_type & TS_DECODER &&
-			dvbdmxfeed->pes_type < DMX_TS_PES_OTHER))
-
-			return 0;
-	}
-
-	if (down_interruptible(&firesat->demux_sem))
-		return -EINTR;
-
-	// list except channel to be removed
-	for (k = 0; k < 16; k++)
-		if (firesat->channel[k].active == 1 && &firesat->channel[k] != (struct firesat_channel*)dvbdmxfeed->priv)
-			pids[l++] = firesat->channel[k].pid;
-
-	if ((k = AVCTuner_SetPIDs(firesat, l, pids))) {
-		up(&firesat->demux_sem);
-		return k;
-	}
-
-	((struct firesat_channel*)dvbdmxfeed->priv)->active = 0;
-
-	up(&firesat->demux_sem);
-
-	return 0;
-}
-
 static int firesat_probe(struct device *dev)
 {
 	struct unit_directory *ud = container_of(dev, struct unit_directory, device);
--- /dev/null
+++ b/drivers/media/dvb/firesat/firesat_dvb.c
@@ -0,0 +1,184 @@
+#include <linux/init.h>
+#include <linux/slab.h>
+#include <linux/wait.h>
+#include <linux/module.h>
+#include <linux/delay.h>
+#include <linux/time.h>
+#include <linux/errno.h>
+#include <linux/interrupt.h>
+#include <asm/semaphore.h>
+#include <ieee1394_hotplug.h>
+#include <nodemgr.h>
+#include <highlevel.h>
+#include <ohci1394.h>
+#include <hosts.h>
+#include <dvbdev.h>
+
+#include "firesat.h"
+#include "avc_api.h"
+#include "cmp.h"
+#include "firesat-rc.h"
+#include "firesat-ci.h"
+
+static struct firesat_channel *firesat_channel_allocate(struct firesat *firesat)
+{
+	int k;
+
+	printk(KERN_INFO "%s\n", __func__);
+
+	if (down_interruptible(&firesat->demux_sem))
+		return NULL;
+
+	for (k = 0; k < 16; k++) {
+		printk(KERN_INFO "%s: channel %d: active = %d, pid = 0x%x\n",__func__,k,firesat->channel[k].active,firesat->channel[k].pid);
+
+		if (firesat->channel[k].active == 0) {
+			firesat->channel[k].active = 1;
+			up(&firesat->demux_sem);
+			return &firesat->channel[k];
+		}
+	}
+
+	up(&firesat->demux_sem);
+	return NULL; // no more channels available
+}
+
+static int firesat_channel_collect(struct firesat *firesat, int *pidc, u16 pid[])
+{
+	int k, l = 0;
+
+	if (down_interruptible(&firesat->demux_sem))
+		return -EINTR;
+
+	for (k = 0; k < 16; k++)
+		if (firesat->channel[k].active == 1)
+			pid[l++] = firesat->channel[k].pid;
+
+	up(&firesat->demux_sem);
+
+	*pidc = l;
+
+	return 0;
+}
+
+static int firesat_channel_release(struct firesat *firesat,
+				   struct firesat_channel *channel)
+{
+	if (down_interruptible(&firesat->demux_sem))
+		return -EINTR;
+
+	channel->active = 0;
+
+	up(&firesat->demux_sem);
+	return 0;
+}
+
+int firesat_start_feed(struct dvb_demux_feed *dvbdmxfeed)
+{
+	struct firesat *firesat = (struct firesat*)dvbdmxfeed->demux->priv;
+	struct firesat_channel *channel;
+	int pidc,k;
+	u16 pids[16];
+
+	printk(KERN_INFO "%s (pid %u)\n",__func__,dvbdmxfeed->pid);
+
+	switch (dvbdmxfeed->type) {
+	case DMX_TYPE_TS:
+	case DMX_TYPE_SEC:
+		break;
+	default:
+		printk("%s: invalid type %u\n",__func__,dvbdmxfeed->type);
+		return -EINVAL;
+	}
+
+	if (dvbdmxfeed->type == DMX_TYPE_TS) {
+		switch (dvbdmxfeed->pes_type) {
+		case DMX_TS_PES_VIDEO:
+		case DMX_TS_PES_AUDIO:
+		case DMX_TS_PES_TELETEXT:
+		case DMX_TS_PES_PCR:
+		case DMX_TS_PES_OTHER:
+			channel = firesat_channel_allocate(firesat);
+			break;
+		default:
+			printk("%s: invalid pes type %u\n",__func__, dvbdmxfeed->pes_type);
+			return -EINVAL;
+		}
+	} else {
+		channel = firesat_channel_allocate(firesat);
+	}
+
+	if (!channel) {
+		printk("%s: busy!\n", __func__);
+		return -EBUSY;
+	}
+
+	dvbdmxfeed->priv = channel;
+
+	channel->dvbdmxfeed = dvbdmxfeed;
+	channel->pid = dvbdmxfeed->pid;
+	channel->type = dvbdmxfeed->type;
+	channel->firesat = firesat;
+
+	if (firesat_channel_collect(firesat, &pidc, pids)) {
+		firesat_channel_release(firesat, channel);
+		return -EINTR;
+	}
+
+	if ((k = AVCTuner_SetPIDs(firesat, pidc, pids))) {
+		firesat_channel_release(firesat, channel);
+		printk("%s: AVCTuner failed with error %d\n", __func__, k);
+		return k;
+	}
+
+	return 0;
+}
+
+int firesat_stop_feed(struct dvb_demux_feed *dvbdmxfeed)
+{
+	struct dvb_demux *demux = dvbdmxfeed->demux;
+	struct firesat *firesat = (struct firesat*)demux->priv;
+	int k, l = 0;
+	u16 pids[16];
+
+	printk(KERN_INFO "%s (pid %u)\n", __func__, dvbdmxfeed->pid);
+
+	if (dvbdmxfeed->type == DMX_TYPE_TS && !((dvbdmxfeed->ts_type & TS_PACKET) &&
+				(demux->dmx.frontend->source != DMX_MEMORY_FE))) {
+
+		if (dvbdmxfeed->ts_type & TS_DECODER) {
+
+			if (dvbdmxfeed->pes_type >= DMX_TS_PES_OTHER ||
+				!demux->pesfilter[dvbdmxfeed->pes_type])
+
+				return -EINVAL;
+
+			demux->pids[dvbdmxfeed->pes_type] |= 0x8000;
+			demux->pesfilter[dvbdmxfeed->pes_type] = 0;
+		}
+
+		if (!(dvbdmxfeed->ts_type & TS_DECODER &&
+			dvbdmxfeed->pes_type < DMX_TS_PES_OTHER))
+
+			return 0;
+	}
+
+	if (down_interruptible(&firesat->demux_sem))
+		return -EINTR;
+
+	// list except channel to be removed
+	for (k = 0; k < 16; k++)
+		if (firesat->channel[k].active == 1 && &firesat->channel[k] != (struct firesat_channel*)dvbdmxfeed->priv)
+			pids[l++] = firesat->channel[k].pid;
+
+	if ((k = AVCTuner_SetPIDs(firesat, l, pids))) {
+		up(&firesat->demux_sem);
+		return k;
+	}
+
+	((struct firesat_channel*)dvbdmxfeed->priv)->active = 0;
+
+	up(&firesat->demux_sem);
+
+	return 0;
+}
