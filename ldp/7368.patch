From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 09 Apr 2008 07:41:21 +0400
From: Manu Abraham <manu@linuxtv.org>
To: Greg KH <greg@kroah.com>
Subject:

More Coding stye fixes, remove unnecessary callbacks

Cc: Christian Dolzer <c.dolzer@digital-everywhere.com>
Cc: Andreas Monitzer <andy@monitzer.com>
Cc: Fabio De Lorenzo <delorenzo.fabio@gmail.com>
Cc: Robert Berger <robert.berger@reliableembeddedsystems.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/media/dvb/firesat/firesat_1394.c |  135 ++++++++++++-------------------
 1 file changed, 55 insertions(+), 80 deletions(-)

--- a/drivers/media/dvb/firesat/firesat_1394.c
+++ b/drivers/media/dvb/firesat/firesat_1394.c
@@ -142,13 +142,10 @@ static struct dvb_frontend_ops firesat_o
 	.read_snr			= firesat_read_snr,
 	.read_ucblocks			= firesat_read_uncorrected_blocks,
 
-	.diseqc_reset_overload		= firesat_diseqc_reset_overload,
-	.diseqc_recv_slave_reply	= firesat_diseqc_recv_slave_reply,
 	.diseqc_send_master_cmd 	= firesat_diseqc_send_master_cmd,
 	.diseqc_send_burst		= firesat_diseqc_send_burst,
 	.set_tone			= firesat_set_tone,
 	.set_voltage			= firesat_set_voltage,
-	.enable_high_lnb_voltage	= firesat_enable_high_lnb_voltage,
 };
 
 /* End of dvb_frontend_ops */
@@ -342,7 +339,7 @@ static void fcp_request(struct hpsb_host
 {
 //	printk(KERN_INFO "FireSAT fcp_request length=%d\n",length);
 	if (length > 0 && ((data[0] & 0xF0) >> 4) == 0) {
-		struct firesat *firesat=NULL;
+		struct firesat *firesat = NULL;
 		struct firesat *firesat_entry;
 		unsigned long flags;
 
@@ -372,7 +369,7 @@ static void fcp_request(struct hpsb_host
 
 static int firesat_dvb_init(struct dvb_frontend *fe)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 	printk("fdi: 1\n");
 	firesat->isochannel = firesat->adapter->num; //<< 1 | (firesat->subunit & 0x1); // ### ask IRM
 	printk("fdi: 2\n");
@@ -385,7 +382,7 @@ static int firesat_dvb_init(struct dvb_f
 
 static int firesat_sleep(struct dvb_frontend *fe)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 
 //FIXME	hpsb_unlisten_channel(&firesat_highlevel, firesat->host, firesat->isochannel);
 	try_CMPBreakPPconnection(firesat, firesat->subunit, firesat->isochannel);
@@ -393,21 +390,10 @@ static int firesat_sleep(struct dvb_fron
 	return 0;
 }
 
-static int firesat_diseqc_reset_overload(struct dvb_frontend *fe)
-{
-	return -EOPNOTSUPP;
-}
-
-static int firesat_diseqc_recv_slave_reply(struct dvb_frontend *fe,
-					   struct dvb_diseqc_slave_reply *reply)
-{
-	return -EOPNOTSUPP;
-}
-
 static int firesat_diseqc_send_master_cmd(struct dvb_frontend *fe,
 					  struct dvb_diseqc_master_cmd *cmd)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 
 	return AVCLNBControl(firesat, LNBCONTROL_DONTCARE, LNBCONTROL_DONTCARE,
 			     LNBCONTROL_DONTCARE, 1, cmd);
@@ -421,7 +407,7 @@ static int firesat_diseqc_send_burst(str
 
 static int firesat_set_tone(struct dvb_frontend *fe, fe_sec_tone_mode_t tone)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 
 	firesat->tone = tone;
 	return 0;
@@ -430,20 +416,15 @@ static int firesat_set_tone(struct dvb_f
 static int firesat_set_voltage(struct dvb_frontend *fe,
 			       fe_sec_voltage_t voltage)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 
-	firesat->voltage=voltage;
+	firesat->voltage = voltage;
 	return 0;
 }
 
-static int firesat_enable_high_lnb_voltage (struct dvb_frontend* fe, long arg)
-{
-	return -EOPNOTSUPP;
-}
-
 static int firesat_read_status (struct dvb_frontend* fe, fe_status_t* status)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 	ANTENNA_INPUT_INFO info;
 //			printk(KERN_INFO "%s: FE_READ_STATUS\n", __func__);
 
@@ -460,11 +441,11 @@ static int firesat_read_status (struct d
 
 static int firesat_read_ber (struct dvb_frontend* fe, u32* ber)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 	ANTENNA_INPUT_INFO info;
 //			printk(KERN_INFO "%s: FE_READ_BER\n", __func__);
 
-	if(AVCTunerStatus(firesat,&info)) {
+	if (AVCTunerStatus(firesat,&info)) {
 		return -EINVAL;
 	}
 
@@ -475,12 +456,12 @@ static int firesat_read_ber (struct dvb_
 
 static int firesat_read_signal_strength (struct dvb_frontend* fe, u16* strength)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 	ANTENNA_INPUT_INFO info;
 	u16 *signal = strength;
 //	printk(KERN_INFO "%s: FE_READ_SIGNAL_STRENGTH\n", __func__);
 
-	if(AVCTunerStatus(firesat,&info)) {
+	if (AVCTunerStatus(firesat,&info)) {
 		return -EINVAL;
 	}
 
@@ -501,18 +482,12 @@ static int firesat_read_uncorrected_bloc
 static int firesat_set_frontend(struct dvb_frontend* fe,
 				struct dvb_frontend_parameters* params)
 {
-	struct firesat *firesat=fe->sec_priv;
+	struct firesat *firesat = fe->sec_priv;
 
-//	printk(KERN_INFO "%s: FE_SET_FRONTEND\n", __func__);
-//	printk(KERN_INFO "            frequency->%d\n", params->frequency);
-//	printk(KERN_INFO "            symbol_rate->%d\n",params->u.qam.symbol_rate);
-//	printk(KERN_INFO "            inversion->%d\n", params->inversion);
-
-//	if(AVCTuner_DSIT(firesat, 0/*###*/, params, NULL))
-//		return -EINVAL;
-	if(AVCTuner_DSD(firesat, params, NULL) != ACCEPTED)
+	if (AVCTuner_DSD(firesat, params, NULL) != ACCEPTED)
 		return -EINVAL;
-	else return 0; //not sure of this...
+	else
+		return 0; //not sure of this...
 }
 
 static int firesat_get_frontend(struct dvb_frontend* fe,
@@ -531,12 +506,13 @@ static struct firesat_channel *firesat_c
 
 	printk(KERN_INFO "%s\n", __func__);
 
-	if(down_interruptible(&firesat->demux_sem))
+	if (down_interruptible(&firesat->demux_sem))
 		return NULL;
 
-	for(k=0;k<16;k++) {
+	for (k = 0; k < 16; k++) {
 		printk(KERN_INFO "%s: channel %d: active = %d, pid = 0x%x\n",__func__,k,firesat->channel[k].active,firesat->channel[k].pid);
-		if(firesat->channel[k].active == 0) {
+
+		if (firesat->channel[k].active == 0) {
 			firesat->channel[k].active = 1;
 			up(&firesat->demux_sem);
 			return &firesat->channel[k];
@@ -549,13 +525,13 @@ static struct firesat_channel *firesat_c
 
 static int firesat_channel_collect(struct firesat *firesat, int *pidc, u16 pid[])
 {
-	int k, l=0;
+	int k, l = 0;
 
-	if(down_interruptible(&firesat->demux_sem))
+	if (down_interruptible(&firesat->demux_sem))
 		return -EINTR;
 
-	for(k=0;k<16;k++)
-		if(firesat->channel[k].active == 1)
+	for (k = 0; k < 16; k++)
+		if (firesat->channel[k].active == 1)
 			pid[l++] = firesat->channel[k].pid;
 
 	up(&firesat->demux_sem);
@@ -568,7 +544,7 @@ static int firesat_channel_collect(struc
 static int firesat_channel_release(struct firesat *firesat,
 				   struct firesat_channel *channel)
 {
-	if(down_interruptible(&firesat->demux_sem))
+	if (down_interruptible(&firesat->demux_sem))
 		return -EINTR;
 
 	channel->active = 0;
@@ -579,7 +555,7 @@ static int firesat_channel_release(struc
 
 static int firesat_start_feed(struct dvb_demux_feed *dvbdmxfeed)
 {
-	struct firesat *firesat=(struct firesat*)dvbdmxfeed->demux->priv;
+	struct firesat *firesat = (struct firesat*)dvbdmxfeed->demux->priv;
 	struct firesat_channel *channel;
 	int pidc,k;
 	u16 pids[16];
@@ -641,36 +617,37 @@ static int firesat_start_feed(struct dvb
 static int firesat_stop_feed(struct dvb_demux_feed *dvbdmxfeed)
 {
 	struct dvb_demux *demux = dvbdmxfeed->demux;
-	struct firesat *firesat=(struct firesat*)demux->priv;
-	int k, l=0;
+	struct firesat *firesat = (struct firesat*)demux->priv;
+	int k, l = 0;
 	u16 pids[16];
 
 	printk(KERN_INFO "%s (pid %u)\n", __func__, dvbdmxfeed->pid);
 
 	if (dvbdmxfeed->type == DMX_TYPE_TS && !((dvbdmxfeed->ts_type & TS_PACKET) &&
 				(demux->dmx.frontend->source != DMX_MEMORY_FE))) {
-	   if (dvbdmxfeed->ts_type & TS_DECODER) {
-		if (dvbdmxfeed->pes_type >= DMX_TS_PES_OTHER ||
-			!demux->pesfilter[dvbdmxfeed->pes_type])
-			return -EINVAL;
-		demux->pids[dvbdmxfeed->pes_type] |= 0x8000;
-		demux->pesfilter[dvbdmxfeed->pes_type] = 0;
-	   }
-	   if (!(dvbdmxfeed->ts_type & TS_DECODER &&
-		dvbdmxfeed->pes_type < DMX_TS_PES_OTHER)) {
-		return 0;
-	   }
+		if (dvbdmxfeed->ts_type & TS_DECODER) {
+			if (dvbdmxfeed->pes_type >= DMX_TS_PES_OTHER ||
+				!demux->pesfilter[dvbdmxfeed->pes_type])
+
+				return -EINVAL;
+
+			demux->pids[dvbdmxfeed->pes_type] |= 0x8000;
+			demux->pesfilter[dvbdmxfeed->pes_type] = 0;
+		}
+		if (!(dvbdmxfeed->ts_type & TS_DECODER &&
+			dvbdmxfeed->pes_type < DMX_TS_PES_OTHER))
+			return 0;
 	}
 
-	if(down_interruptible(&firesat->demux_sem))
+	if (down_interruptible(&firesat->demux_sem))
 		return -EINTR;
 
 	// list except channel to be removed
-	for(k=0;k<16;k++)
-		if(firesat->channel[k].active == 1 && &firesat->channel[k] != (struct firesat_channel*)dvbdmxfeed->priv)
+	for (k = 0; k < 16; k++)
+		if (firesat->channel[k].active == 1 && &firesat->channel[k] != (struct firesat_channel*)dvbdmxfeed->priv)
 			pids[l++] = firesat->channel[k].pid;
 
-	if((k=AVCTuner_SetPIDs(firesat, l, pids))) {
+	if ((k = AVCTuner_SetPIDs(firesat, l, pids))) {
 		up(&firesat->demux_sem);
 		return k;
 	}
@@ -684,13 +661,13 @@ static int firesat_stop_feed(struct dvb_
 
 static int firesat_probe(struct device *dev)
 {
-	struct unit_directory *ud=container_of(dev, struct unit_directory, device);
+	struct unit_directory *ud = container_of(dev, struct unit_directory, device);
 	struct firesat *firesat;
 	struct dvb_frontend *fe;
 	unsigned long flags;
 	int result;
-	unsigned char subunitcount=0xff,subunit;
-	struct firesat **firesats=kmalloc(sizeof(void*)*2,GFP_KERNEL);
+	unsigned char subunitcount = 0xff, subunit;
+	struct firesat **firesats = kmalloc(sizeof (void*) * 2,GFP_KERNEL);
 
 	if (!firesats) {
 		printk("%s: couldn't allocate memory.\n", __func__);
@@ -700,8 +677,8 @@ static int firesat_probe(struct device *
 //    printk(KERN_INFO "FireSAT: Detected device with GUID %08lx%04lx%04lx\n",(unsigned long)((ud->ne->guid)>>32),(unsigned long)(ud->ne->guid & 0xFFFF),(unsigned long)ud->ne->guid_vendor_id);
 	printk(KERN_INFO "%s: loading device\n", __func__);
 
-	firesats[0]=NULL;
-	firesats[1]=NULL;
+	firesats[0] = NULL;
+	firesats[1] = NULL;
 
 	ud->device.driver_data = firesats;
 
@@ -907,15 +884,15 @@ static int firesat_remove(struct device 
 	struct unit_directory *ud=container_of(dev, struct unit_directory, device);
 	struct dvb_frontend* fe;
 	struct firesat **firesats=ud->device.driver_data;
+	int k;
+	unsigned long flags;
 
-	if(firesats) {
-		int k;
+	if (firesats) {
 		for (k = 0; k < 2; k++)
 			if (firesats[k]) {
-				unsigned long flags;
-				if(firesats[k]->has_ci)
+				if (firesats[k]->has_ci)
 					firesat_ca_release(firesats[k]);
-				if(!(fe = kmalloc(sizeof(struct dvb_frontend), GFP_KERNEL))){
+				if (!(fe = kmalloc(sizeof (struct dvb_frontend), GFP_KERNEL))) {
 					fe->ops = firesat_ops;
 					fe->dvb = firesats[k]->adapter;
 
@@ -950,7 +927,7 @@ static int firesat_remove(struct device 
 static int firesat_update(struct unit_directory *ud)
 {
 //  printk(KERN_INFO "FireSAT: Found device with vendor id 0x%x, model id 0x%x\n", ud->vendor_id,ud->model_id);
-	struct firesat **firesats=ud->device.driver_data;
+	struct firesat **firesats = ud->device.driver_data;
 	int k;
     // loop over subunits
 
@@ -1001,8 +978,6 @@ static int __init firesat_init(void)
 
 static void __exit firesat_exit(void)
 {
-	/* firesat_unregister_rc(); */
-
 	hpsb_unregister_protocol(&firesat_driver);
 	hpsb_unregister_highlevel(&firesat_highlevel);
 	printk(KERN_INFO "FireSAT quit\n");
