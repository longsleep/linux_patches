From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 09 Apr 2008 07:41:21 +0400
From: Manu Abraham <manu@linuxtv.org>
To: Greg KH <greg@kroah.com>
Subject:

More cleanups

Cc: Christian Dolzer <c.dolzer@digital-everywhere.com>
Cc: Andreas Monitzer <andy@monitzer.com>
Cc: Fabio De Lorenzo <delorenzo.fabio@gmail.com>
Cc: Robert Berger <robert.berger@reliableembeddedsystems.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/media/dvb/firesat/firesat_1394.c |   48 +++++++++++++++++--------------
 1 file changed, 27 insertions(+), 21 deletions(-)

--- a/drivers/media/dvb/firesat/firesat_1394.c
+++ b/drivers/media/dvb/firesat/firesat_1394.c
@@ -34,6 +34,7 @@
 #define FIRESAT_Vendor_ID   0x001287
 
 static struct ieee1394_device_id firesat_id_table[] = {
+
 	{
 		/* FloppyDTV S/CI and FloppyDTV S2 */
 		.match_flags = IEEE1394_MATCH_MODEL_ID | IEEE1394_MATCH_SPECIFIER_ID,
@@ -217,7 +218,7 @@ static void firesat_add_host (struct hps
 
 static void firesat_remove_host (struct hpsb_host *host)
 {
-//    printk(KERN_INFO "FireSAT remove_host (nodeid = 0x%x)\n",host->node_id);
+
 }
 
 static void firesat_host_reset(struct hpsb_host *host)
@@ -609,7 +610,9 @@ static int firesat_stop_feed(struct dvb_
 
 	if (dvbdmxfeed->type == DMX_TYPE_TS && !((dvbdmxfeed->ts_type & TS_PACKET) &&
 				(demux->dmx.frontend->source != DMX_MEMORY_FE))) {
+
 		if (dvbdmxfeed->ts_type & TS_DECODER) {
+
 			if (dvbdmxfeed->pes_type >= DMX_TS_PES_OTHER ||
 				!demux->pesfilter[dvbdmxfeed->pes_type])
 
@@ -618,8 +621,10 @@ static int firesat_stop_feed(struct dvb_
 			demux->pids[dvbdmxfeed->pes_type] |= 0x8000;
 			demux->pesfilter[dvbdmxfeed->pes_type] = 0;
 		}
+
 		if (!(dvbdmxfeed->ts_type & TS_DECODER &&
 			dvbdmxfeed->pes_type < DMX_TS_PES_OTHER))
+
 			return 0;
 	}
 
@@ -677,13 +682,15 @@ static int firesat_probe(struct device *
 		}
 
 		memset(firesat, 0, sizeof (struct firesat));
-		firesat->host = ud->ne->host;
-		firesat->guid = ud->ne->guid;
+
+		firesat->host		= ud->ne->host;
+		firesat->guid		= ud->ne->guid;
 		firesat->guid_vendor_id = ud->ne->guid_vendor_id;
-		firesat->nodeentry = ud->ne;
-		firesat->isochannel = -1;
-		firesat->tone = 0xff;
-		firesat->voltage = 0xff;
+		firesat->nodeentry	= ud->ne;
+		firesat->isochannel	= -1;
+		firesat->tone		= 0xff;
+		firesat->voltage	= 0xff;
+
 		if (!(firesat->respfrm = kmalloc(sizeof (AVCRspFrm), GFP_KERNEL))) {
 			printk("%s: couldn't allocate memory.\n", __func__);
 			kfree(firesat);
@@ -725,9 +732,9 @@ static int firesat_probe(struct device *
 			continue;
 		}
 
-		firesat->has_ci=1; // TEMP workaround
+		firesat->has_ci = 1; // TEMP workaround
 
-		switch(firesat->type) {
+		switch (firesat->type) {
 		case FireSAT_DVB_S:
 			firesat->model_name = "FireSAT DVB-S";
 			firesat->frontend_info = &firesat_S_frontend_info;
@@ -781,13 +788,12 @@ static int firesat_probe(struct device *
 
 		firesat->demux.dmx.capabilities = 0/*DMX_TS_FILTERING | DMX_SECTION_FILTERING*/;
 
-		firesat->demux.priv = (void *)firesat;
-		firesat->demux.filternum = 16;
-		firesat->demux.feednum = 16;
-		firesat->demux.start_feed = firesat_start_feed;
-		firesat->demux.stop_feed = firesat_stop_feed;
-
-		firesat->demux.write_to_decoder = NULL;
+		firesat->demux.priv		= (void *)firesat;
+		firesat->demux.filternum	= 16;
+		firesat->demux.feednum		= 16;
+		firesat->demux.start_feed	= firesat_start_feed;
+		firesat->demux.stop_feed	= firesat_stop_feed;
+		firesat->demux.write_to_decoder	= NULL;
 
 		if ((result = dvb_dmx_init(&firesat->demux)) < 0) {
 			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
@@ -798,9 +804,9 @@ static int firesat_probe(struct device *
 			return result;
 		}
 
-		firesat->dmxdev.filternum = 16;
-		firesat->dmxdev.demux = &firesat->demux.dmx;
-		firesat->dmxdev.capabilities = 0;
+		firesat->dmxdev.filternum	= 16;
+		firesat->dmxdev.demux		= &firesat->demux.dmx;
+		firesat->dmxdev.capabilities	= 0;
 
 		if ((result = dvb_dmxdev_init(&firesat->dmxdev, firesat->adapter)) < 0) {
 			printk("%s: dvb_dmxdev_init failed: error %d\n",
@@ -865,9 +871,9 @@ static int firesat_probe(struct device *
 
 static int firesat_remove(struct device *dev)
 {
-	struct unit_directory *ud=container_of(dev, struct unit_directory, device);
+	struct unit_directory *ud = container_of(dev, struct unit_directory, device);
 	struct dvb_frontend* fe;
-	struct firesat **firesats=ud->device.driver_data;
+	struct firesat **firesats = ud->device.driver_data;
 	int k;
 	unsigned long flags;
 
