From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 09 Apr 2008 07:41:21 +0400
From: Manu Abraham <manu@linuxtv.org>
To: Greg KH <greg@kroah.com>
Subject:

Reorganiztion, move parts of probe from firesat_1394.c to firesat_dvb.c
as firesat_dvbdev_init()

Cc: Christian Dolzer <c.dolzer@digital-everywhere.com>
Cc: Andreas Monitzer <andy@monitzer.com>
Cc: Fabio De Lorenzo <delorenzo.fabio@gmail.com>
Cc: Robert Berger <robert.berger@reliableembeddedsystems.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/media/dvb/firesat/Makefile       |    1 
 drivers/media/dvb/firesat/firesat.h      |    1 
 drivers/media/dvb/firesat/firesat_1394.c |  130 ------------------------------
 drivers/media/dvb/firesat/firesat_dvb.c  |  133 +++++++++++++++++++++++++++++++
 4 files changed, 138 insertions(+), 127 deletions(-)

--- a/drivers/media/dvb/firesat/Makefile
+++ b/drivers/media/dvb/firesat/Makefile
@@ -1,5 +1,6 @@
 firesat-objs := firesat_1394.o	\
 		firesat_dvb.o	\
+		firesat_fe.o	\
 		avc_api.o	\
 		cmp.o		\
 		firesat-rc.o	\
--- a/drivers/media/dvb/firesat/firesat.h
+++ b/drivers/media/dvb/firesat/firesat.h
@@ -73,6 +73,7 @@ extern spinlock_t firesat_list_lock;
 /* firesat_dvb.c */
 extern int firesat_start_feed(struct dvb_demux_feed *dvbdmxfeed);
 extern int firesat_stop_feed(struct dvb_demux_feed *dvbdmxfeed);
+extern int firesat_dvbdev_init(struct firesat *firesat);
 
 
 #endif
--- a/drivers/media/dvb/firesat/firesat_1394.c
+++ b/drivers/media/dvb/firesat/firesat_1394.c
@@ -569,133 +569,9 @@ static int firesat_probe(struct device *
 			continue;
 		}
 
-		firesat->has_ci = 1; // TEMP workaround
-
-		switch (firesat->type) {
-		case FireSAT_DVB_S:
-			firesat->model_name = "FireSAT DVB-S";
-			firesat->frontend_info = &firesat_S_frontend_info;
-			break;
-		case FireSAT_DVB_C:
-			firesat->model_name = "FireSAT DVB-C";
-			firesat->frontend_info = &firesat_C_frontend_info;
-			break;
-		case FireSAT_DVB_T:
-			firesat->model_name = "FireSAT DVB-T";
-			firesat->frontend_info = &firesat_T_frontend_info;
-			break;
-		default:
-			printk("%s: unknown model type 0x%x on subunit %d!\n",
-				__func__, firesat->type,subunit);
-			firesat->model_name = "Unknown";
-			firesat->frontend_info = NULL;
-		}
-
-		if (!firesat->frontend_info) {
-			spin_lock_irqsave(&firesat_list_lock, flags);
-			list_del(&firesat->list);
-			spin_unlock_irqrestore(&firesat_list_lock, flags);
-			kfree(firesat);
-			continue;
-		}
-
-		//initialising firesat->adapter before calling dvb_register_adapter
-		if (!(firesat->adapter = kmalloc(sizeof (struct dvb_adapter), GFP_KERNEL))) {
-			printk("%s: couldn't allocate memory.\n", __func__);
-			kfree(firesat->adapter);
-			kfree(firesat);
-			return -ENOMEM;
-		}
-
-		if ((result = dvb_register_adapter(firesat->adapter,
-						   firesat->model_name,
-						   THIS_MODULE,
-						   dev)) < 0) {
-
-			printk("%s: dvb_register_adapter failed: error %d\n", __func__, result);
-
-			/* ### cleanup */
-			spin_lock_irqsave(&firesat_list_lock, flags);
-			list_del(&firesat->list);
-			spin_unlock_irqrestore(&firesat_list_lock, flags);
-			kfree(firesat);
-
-			return result;
-		}
-
-		firesat->demux.dmx.capabilities = 0/*DMX_TS_FILTERING | DMX_SECTION_FILTERING*/;
-
-		firesat->demux.priv		= (void *)firesat;
-		firesat->demux.filternum	= 16;
-		firesat->demux.feednum		= 16;
-		firesat->demux.start_feed	= firesat_start_feed;
-		firesat->demux.stop_feed	= firesat_stop_feed;
-		firesat->demux.write_to_decoder	= NULL;
-
-		if ((result = dvb_dmx_init(&firesat->demux)) < 0) {
-			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
-				   result);
-
-			dvb_unregister_adapter(firesat->adapter);
-
-			return result;
-		}
-
-		firesat->dmxdev.filternum	= 16;
-		firesat->dmxdev.demux		= &firesat->demux.dmx;
-		firesat->dmxdev.capabilities	= 0;
-
-		if ((result = dvb_dmxdev_init(&firesat->dmxdev, firesat->adapter)) < 0) {
-			printk("%s: dvb_dmxdev_init failed: error %d\n",
-				   __func__, result);
-
-			dvb_dmx_release(&firesat->demux);
-			dvb_unregister_adapter(firesat->adapter);
-
-			return result;
-		}
-
-		firesat->frontend.source = DMX_FRONTEND_0;
-
-		if ((result = firesat->demux.dmx.add_frontend(&firesat->demux.dmx,
-							  &firesat->frontend)) < 0) {
-			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
-				   result);
-
-			dvb_dmxdev_release(&firesat->dmxdev);
-			dvb_dmx_release(&firesat->demux);
-			dvb_unregister_adapter(firesat->adapter);
-
-			return result;
-		}
-
-		if ((result = firesat->demux.dmx.connect_frontend(&firesat->demux.dmx,
-								  &firesat->frontend)) < 0) {
-			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
-				   result);
-
-			firesat->demux.dmx.remove_frontend(&firesat->demux.dmx, &firesat->frontend);
-			dvb_dmxdev_release(&firesat->dmxdev);
-			dvb_dmx_release(&firesat->demux);
-			dvb_unregister_adapter(firesat->adapter);
-
-			return result;
-		}
-
-		dvb_net_init(firesat->adapter, &firesat->dvbnet, &firesat->demux.dmx);
-
-		fe->ops = firesat_ops;
-		fe->dvb = firesat->adapter;
-		fe->sec_priv = firesat; //IMPORTANT, functions depend on this!!!
-		if ((result= dvb_register_frontend(firesat->adapter, fe)) < 0) {
-			printk("%s: dvb_register_frontend_new failed: error %d\n", __func__, result);
-			/* ### cleanup */
-			return result;
-		}
-
-		if (firesat->has_ci)
-			firesat_ca_init(firesat);
-
+// ----
+		firesat_dvbdev_init(firesat);
+// ----
 		firesats[subunit] = firesat;
 	} // loop for all tuners
 
--- a/drivers/media/dvb/firesat/firesat_dvb.c
+++ b/drivers/media/dvb/firesat/firesat_dvb.c
@@ -182,3 +182,136 @@ int firesat_stop_feed(struct dvb_demux_f
 
 	return 0;
 }
+
+int firesat_dvbdev_init(struct firesat *firesat)
+{
+		firesat->has_ci = 1; // TEMP workaround
+
+#if 0
+		switch (firesat->type) {
+		case FireSAT_DVB_S:
+			firesat->model_name = "FireSAT DVB-S";
+			firesat->frontend_info = &firesat_S_frontend_info;
+			break;
+		case FireSAT_DVB_C:
+			firesat->model_name = "FireSAT DVB-C";
+			firesat->frontend_info = &firesat_C_frontend_info;
+			break;
+		case FireSAT_DVB_T:
+			firesat->model_name = "FireSAT DVB-T";
+			firesat->frontend_info = &firesat_T_frontend_info;
+			break;
+		default:
+			printk("%s: unknown model type 0x%x on subunit %d!\n",
+				__func__, firesat->type,subunit);
+			firesat->model_name = "Unknown";
+			firesat->frontend_info = NULL;
+		}
+#endif
+		if (!firesat->frontend_info) {
+			spin_lock_irqsave(&firesat_list_lock, flags);
+			list_del(&firesat->list);
+			spin_unlock_irqrestore(&firesat_list_lock, flags);
+			kfree(firesat);
+			continue;
+		}
+
+		//initialising firesat->adapter before calling dvb_register_adapter
+		if (!(firesat->adapter = kmalloc(sizeof (struct dvb_adapter), GFP_KERNEL))) {
+			printk("%s: couldn't allocate memory.\n", __func__);
+			kfree(firesat->adapter);
+			kfree(firesat);
+			return -ENOMEM;
+		}
+
+		if ((result = dvb_register_adapter(firesat->adapter,
+						   firesat->model_name,
+						   THIS_MODULE,
+						   dev)) < 0) {
+
+			printk("%s: dvb_register_adapter failed: error %d\n", __func__, result);
+
+			/* ### cleanup */
+			spin_lock_irqsave(&firesat_list_lock, flags);
+			list_del(&firesat->list);
+			spin_unlock_irqrestore(&firesat_list_lock, flags);
+			kfree(firesat);
+
+			return result;
+		}
+
+		firesat->demux.dmx.capabilities = 0/*DMX_TS_FILTERING | DMX_SECTION_FILTERING*/;
+
+		firesat->demux.priv		= (void *)firesat;
+		firesat->demux.filternum	= 16;
+		firesat->demux.feednum		= 16;
+		firesat->demux.start_feed	= firesat_start_feed;
+		firesat->demux.stop_feed	= firesat_stop_feed;
+		firesat->demux.write_to_decoder	= NULL;
+
+		if ((result = dvb_dmx_init(&firesat->demux)) < 0) {
+			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+				   result);
+
+			dvb_unregister_adapter(firesat->adapter);
+
+			return result;
+		}
+
+		firesat->dmxdev.filternum	= 16;
+		firesat->dmxdev.demux		= &firesat->demux.dmx;
+		firesat->dmxdev.capabilities	= 0;
+
+		if ((result = dvb_dmxdev_init(&firesat->dmxdev, firesat->adapter)) < 0) {
+			printk("%s: dvb_dmxdev_init failed: error %d\n",
+				   __func__, result);
+
+			dvb_dmx_release(&firesat->demux);
+			dvb_unregister_adapter(firesat->adapter);
+
+			return result;
+		}
+
+		firesat->frontend.source = DMX_FRONTEND_0;
+
+		if ((result = firesat->demux.dmx.add_frontend(&firesat->demux.dmx,
+							  &firesat->frontend)) < 0) {
+			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+				   result);
+
+			dvb_dmxdev_release(&firesat->dmxdev);
+			dvb_dmx_release(&firesat->demux);
+			dvb_unregister_adapter(firesat->adapter);
+
+			return result;
+		}
+
+		if ((result = firesat->demux.dmx.connect_frontend(&firesat->demux.dmx,
+								  &firesat->frontend)) < 0) {
+			printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+				   result);
+
+			firesat->demux.dmx.remove_frontend(&firesat->demux.dmx, &firesat->frontend);
+			dvb_dmxdev_release(&firesat->dmxdev);
+			dvb_dmx_release(&firesat->demux);
+			dvb_unregister_adapter(firesat->adapter);
+
+			return result;
+		}
+
+		dvb_net_init(firesat->adapter, &firesat->dvbnet, &firesat->demux.dmx);
+
+		fe->ops = firesat_ops;
+		fe->dvb = firesat->adapter;
+		fe->sec_priv = firesat; //IMPORTANT, functions depend on this!!!
+		if ((result= dvb_register_frontend(firesat->adapter, fe)) < 0) {
+			printk("%s: dvb_register_frontend_new failed: error %d\n", __func__, result);
+			/* ### cleanup */
+			return result;
+		}
+
+		if (firesat->has_ci)
+			firesat_ca_init(firesat);
+
+		return 0;
+}
