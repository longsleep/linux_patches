From stern@rowland.harvard.edu  Mon Dec  7 16:35:47 2009
From: Alan Stern <stern@rowland.harvard.edu>
Date: Fri, 4 Dec 2009 11:06:57 -0500 (EST)
Subject: Driver core: fix race in dev_driver_string
To: Greg KH <gregkh@suse.de>
Cc: stable@kernel.org, Oliver Neukum <oliver@neukum.org>, Rickard Bellini <rickard.bellini@ericsson.com>, Torgny Johansson <torgny.johansson@ericsson.com>
Message-ID: <Pine.LNX.4.44L0.0912041102590.3070-100000@iolanthe.rowland.org>


This patch (as1310) works around a race in dev_driver_string().  If
the device is unbound while the function is running, dev->driver might
become NULL after we test it and before we dereference it.

Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
Cc: stable <stable@kernel.org>
Cc: Oliver Neukum <oliver@neukum.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>


---
 drivers/base/core.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -56,7 +56,14 @@ static inline int device_is_not_partitio
  */
 const char *dev_driver_string(const struct device *dev)
 {
-	return dev->driver ? dev->driver->name :
+	struct device_driver *drv;
+
+	/* dev->driver can change to NULL underneath us because of unbinding,
+	 * so be careful about accessing it.  dev->bus and dev->class should
+	 * never change once they are set, so they don't need special care.
+	 */
+	drv = ACCESS_ONCE(dev->driver);
+	return drv ? drv->name :
 			(dev->bus ? dev->bus->name :
 			(dev->class ? dev->class->name : ""));
 }
