From akpm@linux-foundation.org  Wed Feb 18 16:04:28 2009
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Wed, 11 Feb 2009 13:20:22 -0800
Subject: Driver core: resume: wait for device probing to finish
To: greg@kroah.com
Cc: akpm@linux-foundation.org, arjan@linux.intel.com, kay.sievers@vrfy.org, lenb@kernel.org, pavel@suse.cz, rjw@sisk.pl
Message-ID: <200902112120.n1BLKM4I021741@imap1.linux-foundation.org>


From: Arjan van de Ven <arjan@linux.intel.com>

The resume code does not currently wait for device probing to finish.
Even without async function calls this is dicey and not correct, but with
async function calls during the boot sequence this is going to get hit
more...

This patch adds the synchronization using the newly introduced helper.

Signed-off-by: Arjan van de Ven <arjan@linux.intel.com>
Signed-off-by: Rafael J. Wysocki <rjw@sisk.pl>
Cc: Len Brown <lenb@kernel.org>
Cc: Pavel Machek <pavel@suse.cz>
Cc: Kay Sievers <kay.sievers@vrfy.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 kernel/power/disk.c |   11 +++++++++++
 1 file changed, 11 insertions(+)

--- a/kernel/power/disk.c
+++ b/kernel/power/disk.c
@@ -595,6 +595,12 @@ static int software_resume(void)
 	unsigned int flags;
 
 	/*
+	 * If the user said "noresume".. bail out early.
+	 */
+	if (noresume)
+		return 0;
+
+	/*
 	 * name_to_dev_t() below takes a sysfs buffer mutex when sysfs
 	 * is configured into the kernel. Since the regular hibernate
 	 * trigger path is via sysfs which takes a buffer mutex before
@@ -610,6 +616,11 @@ static int software_resume(void)
 			mutex_unlock(&pm_mutex);
 			return -ENOENT;
 		}
+		/*
+		 * Some device discovery might still be in progress; we need
+		 * to wait for this to finish.
+		 */
+		wait_for_device_probe();
 		swsusp_resume_device = name_to_dev_t(resume_file);
 		pr_debug("PM: Resume from partition %s\n", resume_file);
 	} else {
