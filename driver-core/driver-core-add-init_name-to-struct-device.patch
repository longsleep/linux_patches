From kay.sievers@vrfy.org Fri May  2 09:28:44 2008
From: Greg Kroah-Hartman <gregkh@suse.de>
Date: Fri, 30 May 2008 10:45:12 -0700
Subject: driver core: add init_name to struct device
Message-ID: <1209700961.3100.7.camel@linux.site>

This gives us a way to handle both the bus_id and init_name values being
used for a while during the transition period.

Cc: Kay Sievers <kay.sievers@vrfy.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/base/core.c    |   20 +++++++++++++-------
 include/linux/device.h |    1 +
 2 files changed, 14 insertions(+), 7 deletions(-)

--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -844,13 +844,19 @@ int device_add(struct device *dev)
 {
 	struct device *parent = NULL;
 	struct class_interface *class_intf;
-	int error;
+	int error = -EINVAL;
 
 	dev = get_device(dev);
-	if (!dev || !strlen(dev->bus_id)) {
-		error = -EINVAL;
-		goto Done;
-	}
+	if (!dev)
+		goto done;
+
+	/* Temporarily support init_name if it is set.
+	 * It will override bus_id for now */
+	if (dev->init_name)
+		dev_set_name(dev, "%s", dev->init_name);
+
+	if (!strlen(dev->bus_id))
+		goto done;
 
 	pr_debug("device: '%s': %s\n", dev_name(dev), __func__);
 
@@ -918,7 +924,7 @@ int device_add(struct device *dev)
 				class_intf->add_dev(dev, class_intf);
 		mutex_unlock(&dev->class->p->class_mutex);
 	}
- Done:
+done:
 	put_device(dev);
 	return error;
  PMError:
@@ -945,7 +951,7 @@ int device_add(struct device *dev)
 	cleanup_device_parent(dev);
 	if (parent)
 		put_device(parent);
-	goto Done;
+	goto done;
 }
 
 /**
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -350,6 +350,7 @@ struct device {
 
 	struct kobject kobj;
 	char	bus_id[20];	/* will be removed */
+	const char *init_name;
 	struct device_type	*type;
 	unsigned		uevent_suppress:1;
 
