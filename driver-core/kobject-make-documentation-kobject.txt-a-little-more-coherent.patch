From rusty@rustcorp.com.au  Tue Dec  9 20:18:11 2008
From: Rusty Russell <rusty@rustcorp.com.au>
Date: Tue, 9 Dec 2008 08:32:14 +1030
Subject: kobject: Make Documentation/kobject.txt a little more coherent.
To: "Eric W. Biederman" <ebiederm@xmission.com>
Cc: Greg KH <gregkh@suse.de>
Message-ID: <200812090832.20403.rusty@rustcorp.com.au>
Content-Disposition: inline


While reading Documentation/kobject.txt:

  Note kobject_rename does perform any locking or have a solid notion of
  what names are valid so the provide must provide their own sanity checking
  and serialization.

I expect better: You never see me hard with time word making sentence
coherent stuff.  Ever.

Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
Acked-by: Eric W. Biederman <ebiederm@xmission.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 Documentation/kobject.txt |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/Documentation/kobject.txt
+++ b/Documentation/kobject.txt
@@ -118,8 +118,8 @@ the name of the kobject, call kobject_re
 
     int kobject_rename(struct kobject *kobj, const char *new_name);
 
-Note kobject_rename does perform any locking or have a solid notion of
-what names are valid so the provide must provide their own sanity checking
+kobject_rename does not perform any locking or have a solid notion of
+what names are valid so the caller must provide their own sanity checking
 and serialization.
 
 There is a function called kobject_set_name() but that is legacy cruft and
