From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 13 Aug 2008 20:08:35 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: USB gadget: move u_ether.c to gadget_ether_core.ko

As u_ether.c is included in multiple .ko files, move it into a
standalone gadget_ether_core.ko

Cc: David Brownell <david-b@pacbell.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/gadget/Makefile  |   10 +++++-----
 drivers/usb/gadget/u_ether.c |   19 ++++++++++++++++++-
 2 files changed, 23 insertions(+), 6 deletions(-)

--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -25,27 +25,27 @@ obj-$(CONFIG_USB_M66592)	+= m66592-udc.o
 
 gadget_core-objs		:= composite.o usbstring.o config.o \
 					epautoconf.o
+gadget_ether_core-objs		:= u_ether.o
 
 g_zero-objs			:= zero.o f_sourcesink.o f_loopback.o
-g_ether-objs			:= ether.o u_ether.o f_subset.o f_ecm.o
+g_ether-objs			:= ether.o f_subset.o f_ecm.o
 g_serial-objs			:= serial.o u_serial.o f_acm.o f_serial.o
 g_midi-objs			:= gmidi.o
 gadgetfs-objs			:= inode.o
 g_file_storage-objs		:= file_storage.o
 g_printer-objs			:= printer.o
-g_cdc-objs			:= cdc2.o u_ether.o f_ecm.o \
-					u_serial.o f_acm.o
+g_cdc-objs			:= cdc2.o f_ecm.o u_serial.o f_acm.o
 
 ifeq ($(CONFIG_USB_ETH_RNDIS),y)
 	g_ether-objs		+= f_rndis.o rndis.o
 endif
  
 obj-$(CONFIG_USB_ZERO)		+= g_zero.o gadget_core.o
-obj-$(CONFIG_USB_ETH)		+= g_ether.o gadget_core.o
+obj-$(CONFIG_USB_ETH)		+= g_ether.o gadget_core.o gadget_ether_core.o
 obj-$(CONFIG_USB_GADGETFS)	+= gadgetfs.o
 obj-$(CONFIG_USB_FILE_STORAGE)	+= g_file_storage.o gadget_core.o
 obj-$(CONFIG_USB_G_SERIAL)	+= g_serial.o gadget_core.o
 obj-$(CONFIG_USB_G_PRINTER)	+= g_printer.o gadget_core.o
 obj-$(CONFIG_USB_MIDI_GADGET)	+= g_midi.o gadget_core.o
-obj-$(CONFIG_USB_CDC_COMPOSITE) += g_cdc.o gadget_core.o
+obj-$(CONFIG_USB_CDC_COMPOSITE) += g_cdc.o gadget_core.o gadget_ether_core.o
 
--- a/drivers/usb/gadget/u_ether.c
+++ b/drivers/usb/gadget/u_ether.c
@@ -797,6 +797,7 @@ int __init gether_setup(struct usb_gadge
 
 	return status;
 }
+EXPORT_SYMBOL_GPL(gether_setup);
 
 /**
  * gether_cleanup - remove Ethernet-over-USB device
@@ -817,7 +818,7 @@ void gether_cleanup(void)
 
 	the_dev = NULL;
 }
-
+EXPORT_SYMBOL_GPL(gether_cleanup);
 
 /**
  * gether_connect - notify network layer that USB link is active
@@ -891,6 +892,7 @@ fail0:
 		return ERR_PTR(result);
 	return dev->net;
 }
+EXPORT_SYMBOL_GPL(gether_connect);
 
 /**
  * gether_disconnect - notify network layer that USB link is inactive
@@ -962,3 +964,18 @@ void gether_disconnect(struct gether *li
 	link->ioport = NULL;
 	spin_unlock(&dev->lock);
 }
+EXPORT_SYMBOL_GPL(gether_disconnect);
+
+static int __init gether_init(void)
+{
+	return 0;
+}
+
+static void __exit gether_exit(void)
+{
+}
+
+module_init(gether_init);
+module_exit(gether_exit);
+
+MODULE_LICENSE("GPL");
