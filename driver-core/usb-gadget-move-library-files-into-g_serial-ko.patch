From david-b@pacbell.net Thu Aug 14 16:47:31 2008
From: David Brownell <david-b@pacbell.net>
Date: Thu, 14 Aug 2008 16:47:25 -0700
Subject: USB: gadget: move library files into g_serial,ko
To: Greg KH <greg@kroah.com>, linux-usb@vger.kernel.org
Message-ID: <200808141647.25336.david-b@pacbell.net>
Content-Disposition: inline


This is a quick patch addressing the linkage issues with separately
compiled gadget module components by eliminating separate compilation
for one of the gadget drivers.

It even saves some space.  On one x86_64 build:

   text	   data	    bss	    dec	    hex	filename
  17514	   2144	    676	  20334	   4f6e	g_serial.ko	BEFORE
  17513	   2119	    660	  20292	   4f44	g_serial.ko	AFTER
  -----    ----     ---   -----
      1      25      16      42				Difference

If Kbuild someday supports "--combine" we could do this more cleanly,
and I think that would save even more space.


From: David Brownell <david-b@pacbell.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/gadget/Makefile |    2 +-
 drivers/usb/gadget/serial.c |   18 ++++++++++++++++++
 2 files changed, 19 insertions(+), 1 deletion(-)

--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -26,7 +26,7 @@ C_UTILS =	composite.o usbstring.o config
 
 g_zero-objs			:= zero.o f_sourcesink.o f_loopback.o $(C_UTILS)
 g_ether-objs			:= ether.o u_ether.o f_subset.o f_ecm.o $(C_UTILS)
-g_serial-objs			:= serial.o u_serial.o f_acm.o f_serial.o $(C_UTILS)
+g_serial-objs			:= serial.o
 g_midi-objs			:= gmidi.o usbstring.o config.o epautoconf.o
 gadgetfs-objs			:= inode.o
 g_file_storage-objs		:= file_storage.o usbstring.o config.o \
--- a/drivers/usb/gadget/serial.c
+++ b/drivers/usb/gadget/serial.c
@@ -30,6 +30,24 @@
 
 /*-------------------------------------------------------------------------*/
 
+/*
+ * Kbuild is not very cooperative with respect to linking separately
+ * compiled library objects into one module.  So for now we won't use
+ * separate compilation ... ensuring init/exit sections work to shrink
+ * the runtime footprint, and giving us at least some parts of what
+ * a "gcc --combine ... part1.c part2.c part3.c ... " build would.
+ */
+#include "composite.c"
+#include "usbstring.c"
+#include "config.c"
+#include "epautoconf.c"
+
+#include "f_acm.c"
+#include "f_serial.c"
+#include "u_serial.c"
+
+/*-------------------------------------------------------------------------*/
+
 /* Thanks to NetChip Technologies for donating this product ID.
 *
 * DO NOT REUSE THESE IDs with a protocol-incompatible driver!!  Ever!!
