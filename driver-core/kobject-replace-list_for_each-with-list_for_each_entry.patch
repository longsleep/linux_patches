From rpjday@crashcourse.ca Wed Mar 26 22:13:40 2008
From: "Robert P. J. Day" <rpjday@crashcourse.ca>
Date: Thu, 27 Mar 2008 01:13:34 -0400 (EDT)
Subject: Kobject: Replace list_for_each() with list_for_each_entry().
To: Greg KH <greg@kroah.com>
Message-ID: <alpine.LFD.1.00.0803270104440.17486@localhost.localdomain>



Use the more concise list_for_each_entry(), which allows for the
deletion of the to_kobj() routine at the same time.

Signed-off-by: Robert P. J. Day <rpjday@crashcourse.ca>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 lib/kobject.c |   10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -58,11 +58,6 @@ static int create_dir(struct kobject *ko
 	return error;
 }
 
-static inline struct kobject *to_kobj(struct list_head *entry)
-{
-	return container_of(entry, struct kobject, entry);
-}
-
 static int get_kobj_path_length(struct kobject *kobj)
 {
 	int length = 1;
@@ -753,11 +748,10 @@ void kset_unregister(struct kset *k)
 struct kobject *kset_find_obj(struct kset *kset, const char *name)
 {
 	struct list_head *entry;
-	struct kobject *ret = NULL;
+	struct kobject *k, *ret = NULL;
 
 	spin_lock(&kset->list_lock);
-	list_for_each(entry, &kset->list) {
-		struct kobject *k = to_kobj(entry);
+	list_for_each_entry(k, &kset->list, entry) {
 		if (kobject_name(k) && !strcmp(kobject_name(k), name)) {
 			ret = kobject_get(k);
 			break;
