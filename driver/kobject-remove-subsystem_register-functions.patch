From foo@baz Tue Apr  9 12:12:43 2002
Date: Tue, 06 Nov 2007 15:03:30 -0800
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: kobject: remove subsystem_(un)register functions

These functions are no longer used and are the last remants of the old
subsystem crap.  So delete them for good.

Cc: Kay Sievers <kay.sievers@vrfy.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/base/bus.c      |    6 +++---
 drivers/base/class.c    |    4 ++--
 include/linux/kobject.h |    3 ---
 lib/kobject.c           |   13 -------------
 4 files changed, 5 insertions(+), 21 deletions(-)

--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@ -854,7 +854,7 @@ int bus_register(struct bus_type * bus)
 	bus->subsys.kobj.kset = bus_kset;
 	bus->subsys.kobj.ktype = &bus_ktype;
 
-	retval = subsystem_register(&bus->subsys);
+	retval = kset_register(&bus->subsys);
 	if (retval)
 		goto out;
 
@@ -900,7 +900,7 @@ bus_drivers_fail:
 bus_devices_fail:
 	bus_remove_file(bus, &bus_attr_uevent);
 bus_uevent_fail:
-	subsystem_unregister(&bus->subsys);
+	kset_unregister(&bus->subsys);
 out:
 	return retval;
 }
@@ -920,7 +920,7 @@ void bus_unregister(struct bus_type * bu
 	kset_unregister(bus->drivers_kset);
 	kset_unregister(bus->devices_kset);
 	bus_remove_file(bus, &bus_attr_uevent);
-	subsystem_unregister(&bus->subsys);
+	kset_unregister(&bus->subsys);
 }
 
 int bus_register_notifier(struct bus_type *bus, struct notifier_block *nb)
--- a/drivers/base/class.c
+++ b/drivers/base/class.c
@@ -152,7 +152,7 @@ int class_register(struct class * cls)
 	cls->subsys.kobj.kset = class_kset;
 	cls->subsys.kobj.ktype = &class_ktype;
 
-	error = subsystem_register(&cls->subsys);
+	error = kset_register(&cls->subsys);
 	if (!error) {
 		error = add_class_attrs(class_get(cls));
 		class_put(cls);
@@ -164,7 +164,7 @@ void class_unregister(struct class * cls
 {
 	pr_debug("device class '%s': unregistering\n", cls->name);
 	remove_class_attrs(cls);
-	subsystem_unregister(&cls->subsys);
+	kset_unregister(&cls->subsys);
 }
 
 static void class_create_release(struct class *cls)
--- a/include/linux/kobject.h
+++ b/include/linux/kobject.h
@@ -207,9 +207,6 @@ extern struct kset *power_kset;
 /* The global /sys/firmware/ kobject for people to chain off of */
 extern struct kobject *firmware_kobj;
 
-extern int __must_check subsystem_register(struct kset *);
-extern void subsystem_unregister(struct kset *);
-
 #if defined(CONFIG_HOTPLUG)
 int kobject_uevent(struct kobject *kobj, enum kobject_action action);
 int kobject_uevent_env(struct kobject *kobj, enum kobject_action action,
--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -800,16 +800,6 @@ struct kobject * kset_find_obj(struct ks
 	return ret;
 }
 
-int subsystem_register(struct kset *s)
-{
-	return kset_register(s);
-}
-
-void subsystem_unregister(struct kset *s)
-{
-	kset_unregister(s);
-}
-
 static void kset_release(struct kobject *kobj)
 {
 	struct kset *kset = container_of(kobj, struct kset, kobj);
@@ -904,6 +894,3 @@ EXPORT_SYMBOL(kobject_del);
 
 EXPORT_SYMBOL(kset_register);
 EXPORT_SYMBOL(kset_unregister);
-
-EXPORT_SYMBOL(subsystem_register);
-EXPORT_SYMBOL(subsystem_unregister);
