From foo@baz Tue Apr  9 12:12:43 2002
Date: Tue, 4 Dec 2007 22:53:16 -0800
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Driver core: add driver_create_group

Add function for drivers to be able to create and remove sysfs attribute
groups without having to fall back to the "raw" sysfs calls.

Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/base/driver.c  |   37 +++++++++++++++++++++++++++++++++++++
 include/linux/device.h |    5 +++++
 2 files changed, 42 insertions(+)

--- a/drivers/base/driver.c
+++ b/drivers/base/driver.c
@@ -122,6 +122,43 @@ void driver_remove_file(struct device_dr
 	}
 }
 
+/**
+ * driver_create_group - create group of sysfs files for a driver.
+ * @drv: driver.
+ * @group: pointer to a group of attributes to add
+ *
+ * Adds a group of sysfs attributes to the specified driver.
+ */
+int driver_create_group(struct device_driver *drv,
+			struct attribute_group *group)
+{
+	int error;
+	if (get_driver(drv)) {
+		error = sysfs_create_group(&drv->kobj, group);
+		put_driver(drv);
+	} else
+		error = -EINVAL;
+	return error;
+}
+EXPORT_SYMBOL_GPL(driver_create_group);
+
+/**
+ * driver_remove_group - remove group of sysfs files for a driver.
+ * @drv: driver.
+ * @group: pointer to a group of attributes to add.
+ *
+ * Removes a group of sysfs attributes that was previously created with a
+ * call to driver_create_group().
+ */
+void driver_remove_group(struct device_driver *drv,
+			 struct attribute_group *group)
+{
+	if (get_driver(drv)) {
+		sysfs_remove_group(&drv->kobj, group);
+		put_driver(drv);
+	}
+}
+EXPORT_SYMBOL_GPL(driver_remove_group);
 
 /**
  *	get_driver - increment driver reference count.
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -154,6 +154,11 @@ struct driver_attribute driver_attr_##_n
 extern int __must_check driver_create_file(struct device_driver *,
 					struct driver_attribute *);
 extern void driver_remove_file(struct device_driver *, struct driver_attribute *);
+extern int __must_check driver_create_group(struct device_driver *,
+					    struct attribute_group *);
+extern void driver_remove_group(struct device_driver *,
+				struct attribute_group *);
+
 
 extern int __must_check driver_for_each_device(struct device_driver * drv,
 		struct device *start, void *data,
