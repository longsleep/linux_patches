From sfr@canb.auug.org.au  Sat Feb  2 12:50:36 2008
From: Stephen Rothwell <sfr@canb.auug.org.au>
Date: Sat, 2 Feb 2008 22:15:07 +1100
Subject: Driver core: Update some prototypes in platform.txt
To: Greg Kroah-Hartman <gregkh@suse.de>
Cc: LKML <linux-kernel@vger.kernel.org>
Message-ID: <20080202221507.fd916a3b.sfr@canb.auug.org.au>


Just make these match the actual code.

Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 Documentation/driver-model/platform.txt |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- a/Documentation/driver-model/platform.txt
+++ b/Documentation/driver-model/platform.txt
@@ -122,15 +122,15 @@ None the less, there are some APIs to su
 using these calls except with such hotplug-deficient drivers.
 
 	struct platform_device *platform_device_alloc(
-			char *name, unsigned id);
+			const char *name, int id);
 
 You can use platform_device_alloc() to dynamically allocate a device, which
 you will then initialize with resources and platform_device_register().
 A better solution is usually:
 
 	struct platform_device *platform_device_register_simple(
-			char *name, unsigned id,
-			struct resource *res, unsigned nres);
+			const char *name, int id,
+			struct resource *res, unsigned int nres);
 
 You can use platform_device_register_simple() as a one-step call to allocate
 and register a device.
