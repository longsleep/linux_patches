From: gregkh@suse.de
Subject: kobject warning stuff

First one is to ensure that the kobject is properly initialized _before_
kobject_init() is called.  Yeah, seems funny, right?  Turns out this has
caught a lot of issues where kobject_init() is called twice on the same
object, not a good thing at all.

Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 lib/kobject.c |    1 +
 1 file changed, 1 insertion(+)

--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -152,6 +152,7 @@ static void kobject_init_internal(struct
 {
 	if (!kobj)
 		return;
+	WARN_ON(atomic_read(&kobj->kref.refcount));
 	kref_init(&kobj->kref);
 	INIT_LIST_HEAD(&kobj->entry);
 }
