From foo@baz Tue Apr  9 12:12:43 2002
Date: Mon, 29 Oct 2007 20:13:17 +0100
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: kset: convert gfs2 dlm to use kset_create

Dynamically create the kset instead of declaring it statically.

Cc: Kay Sievers <kay.sievers@vrfy.org>
Cc: Steven Whitehouse <swhiteho@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 fs/gfs2/locking/dlm/sysfs.c |   20 +++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

--- a/fs/gfs2/locking/dlm/sysfs.c
+++ b/fs/gfs2/locking/dlm/sysfs.c
@@ -189,7 +189,7 @@ static struct kobj_type gdlm_ktype = {
 	.sysfs_ops     = &gdlm_attr_ops,
 };
 
-static struct kset gdlm_kset;
+static struct kset *gdlm_kset;
 
 int gdlm_kobject_setup(struct gdlm_ls *ls, struct kobject *fskobj)
 {
@@ -201,7 +201,7 @@ int gdlm_kobject_setup(struct gdlm_ls *l
 		return error;
 	}
 
-	ls->kobj.kset = &gdlm_kset;
+	ls->kobj.kset = gdlm_kset;
 	ls->kobj.ktype = &gdlm_ktype;
 	ls->kobj.parent = fskobj;
 
@@ -221,17 +221,23 @@ int gdlm_sysfs_init(void)
 {
 	int error;
 
-	kobject_set_name(&gdlm_kset.kobj, "lock_dlm");
-	gdlm_kset.kobj.kset = &kernel_subsys;
-	error = kset_register(&gdlm_kset);
+	gdlm_kset = kset_create("lock_dlm", NULL, &kernel_subsys);
+	if (IS_ERR(gdlm_kset)) {
+		error = PTR_ERR(gdlm_kset);
+		printk(KERN_WARNING "%s: can not create kset %d\n",
+		       __FUNCTION__, error);
+		return error;
+	}
+	error = kset_register(gdlm_kset);
 	if (error)
-		printk("lock_dlm: cannot register kset %d\n", error);
+		printk(KERN_WARNING "%s: cannot register kset %d\n",
+		       __FUNCTION__, error);
 
 	return error;
 }
 
 void gdlm_sysfs_exit(void)
 {
-	kset_unregister(&gdlm_kset);
+	kset_unregister(gdlm_kset);
 }
 
