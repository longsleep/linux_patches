From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 28 Nov 2007 10:46:22 -0800
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: kobject: grab the kset reference in kobject_add, not kobject_init

kobject_init should not be grabing any references, but only initializing
the object.  This patch fixes this, and makes the lock hold-time shorter
for when a kset is present in the kobject.

The current kernel tree has been audited to verify that this change
should be safe.

Cc: Kay Sievers <kay.sievers@vrfy.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 lib/kobject.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -190,7 +190,6 @@ void kobject_init(struct kobject * kobj)
 	verify_dynamic_kobject_allocation(kobj);
 	kref_init(&kobj->kref);
 	INIT_LIST_HEAD(&kobj->entry);
-	kobj->kset = kset_get(kobj->kset);
 }
 
 
@@ -241,7 +240,7 @@ int kobject_add(struct kobject * kobj)
 		 kobj->kset ? kobject_name(&kobj->kset->kobj) : "<NULL>" );
 
 	if (kobj->kset) {
-		spin_lock(&kobj->kset->list_lock);
+		kobj->kset = kset_get(kobj->kset);
 
 		if (!parent) {
 			parent = kobject_get(&kobj->kset->kobj);
@@ -253,7 +252,8 @@ int kobject_add(struct kobject * kobj)
 			kobject_get(parent);
 		}
 
-		list_add_tail(&kobj->entry,&kobj->kset->list);
+		spin_lock(&kobj->kset->list_lock);
+		list_add_tail(&kobj->entry, &kobj->kset->list);
 		spin_unlock(&kobj->kset->list_lock);
 		kobj->parent = parent;
 	}
