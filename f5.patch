From foo@baz Tue Apr  9 12:12:43 2002
Date: Wed, 13 Aug 2008 20:08:35 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: USB gadget: add f_acm.c and u_serial.c to g_util.ko

As f_acm.c and u_serial.c are also included in multiple .ko files, move
it into g_util.ko

Cc: David Brownell <david-b@pacbell.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/usb/gadget/Makefile   |    7 ++++---
 drivers/usb/gadget/f_acm.c    |    2 ++
 drivers/usb/gadget/u_serial.c |    4 ++++
 3 files changed, 10 insertions(+), 3 deletions(-)

--- a/drivers/usb/gadget/f_acm.c
+++ b/drivers/usb/gadget/f_acm.c
@@ -661,6 +661,7 @@ fail:
 
 	return status;
 }
+EXPORT_SYMBOL_GPL(acm_bind);
 
 static void
 acm_unbind(struct usb_configuration *c, struct usb_function *f)
@@ -757,3 +758,4 @@ int __init acm_bind_config(struct usb_co
 		kfree(acm);
 	return status;
 }
+EXPORT_SYMBOL_GPL(acm_bind_config);
--- a/drivers/usb/gadget/Makefile
+++ b/drivers/usb/gadget/Makefile
@@ -24,16 +24,17 @@ obj-$(CONFIG_USB_M66592)	+= m66592-udc.o
 #
 
 g_utils-objs			:= composite.o usbstring.o config.o \
-					epautoconf.o u_ether.o f_ecm.o
+					epautoconf.o u_ether.o f_ecm.o \
+					f_acm.o u_serial.o
 
 g_zero-objs			:= zero.o f_sourcesink.o f_loopback.o
 g_ether-objs			:= ether.o f_subset.o
-g_serial-objs			:= serial.o u_serial.o f_acm.o f_serial.o
+g_serial-objs			:= serial.o f_serial.o
 g_midi-objs			:= gmidi.o
 gadgetfs-objs			:= inode.o
 g_file_storage-objs		:= file_storage.o
 g_printer-objs			:= printer.o
-g_cdc-objs			:= cdc2.o u_serial.o f_acm.o
+g_cdc-objs			:= cdc2.o
 
 ifeq ($(CONFIG_USB_ETH_RNDIS),y)
 	g_ether-objs		+= f_rndis.o rndis.o
--- a/drivers/usb/gadget/u_serial.c
+++ b/drivers/usb/gadget/u_serial.c
@@ -1140,6 +1140,7 @@ fail:
 	gs_tty_driver = NULL;
 	return status;
 }
+EXPORT_SYMBOL_GPL(gserial_setup);
 
 static int gs_closed(struct gs_port *port)
 {
@@ -1198,6 +1199,7 @@ void gserial_cleanup(void)
 
 	pr_debug("%s: cleaned up ttyGS* support\n", __func__);
 }
+EXPORT_SYMBOL_GPL(gserial_cleanup);
 
 /**
  * gserial_connect - notify TTY I/O glue that USB link is active
@@ -1277,6 +1279,7 @@ fail_out:
 	gser->in->driver_data = NULL;
 	return status;
 }
+EXPORT_SYMBOL_GPL(gserial_connect);
 
 /**
  * gserial_disconnect - notify TTY I/O glue that USB link is inactive
@@ -1328,3 +1331,4 @@ void gserial_disconnect(struct gserial *
 	gs_free_requests(gser->in, &port->write_pool);
 	spin_unlock_irqrestore(&port->port_lock, flags);
 }
+EXPORT_SYMBOL_GPL(gserial_disconnect);
