From sdietrich@novell.com  Thu Feb 25 16:03:03 2010
From: Sven-Thorsten Dietrich <sdietrich@novell.com>
Date: Tue, 23 Feb 2010 13:59:18 -0800
Subject: Staging: make drivers use spin_lock_init()
To: Greg KH <gregkh@suse.de>
Cc: lindner_marek@yahoo.de, siwu@hrz.tu-chemnitz.de, jic23@cam.ac.uk
Message-ID: <1266962359.3234.40.camel@sven.thebigcorporation.com>


This fixes some RT-triggered compile errors and typos.

Signed-off-by: Sven-Thorsten Dietrich <sdietrich@novell.com>
Acked-by: Marek Lindner <lindner_marek@yahoo.de>
Acked-by: Jonathan Cameron <jic23@cam.ac.uk>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/batman-adv/device.c |    2 +-
 drivers/staging/iio/ring_generic.h  |    3 +--
 drivers/staging/iio/ring_sw.c       |    2 +-
 3 files changed, 3 insertions(+), 4 deletions(-)

--- a/drivers/staging/batman-adv/device.c
+++ b/drivers/staging/batman-adv/device.c
@@ -118,7 +118,7 @@ int bat_device_open(struct inode *inode,
 	INIT_LIST_HEAD(&device_client->queue_list);
 	device_client->queue_len = 0;
 	device_client->index = i;
-	device_client->lock = __SPIN_LOCK_UNLOCKED(device_client->lock);
+	spin_lock_init(&device_client->lock);
 	init_waitqueue_head(&device_client->queue_wait);
 
 	file->private_data = device_client;
--- a/drivers/staging/iio/ring_generic.h
+++ b/drivers/staging/iio/ring_generic.h
@@ -146,8 +146,7 @@ static inline void __iio_init_ring_buffe
 	ring->length = length;
 	ring->loopcount = 0;
 	ring->shared_ev_pointer.ev_p = 0;
-	ring->shared_ev_pointer.lock =
-		__SPIN_LOCK_UNLOCKED(ring->shared_ev_pointer->loc);
+	spin_lock_init(&ring->shared_ev_pointer.lock);
 }
 
 /**
--- a/drivers/staging/iio/ring_sw.c
+++ b/drivers/staging/iio/ring_sw.c
@@ -20,7 +20,7 @@ static inline int __iio_init_sw_ring_buf
 		return -EINVAL;
 
 	__iio_init_ring_buffer(&ring->buf, bytes_per_datum, length);
-	ring->use_lock = __SPIN_LOCK_UNLOCKED((ring)->use_lock);
+	spin_lock_init(&ring->use_lock);
 	ring->data = kmalloc(length*ring->buf.bpd, GFP_KERNEL);
 	ring->read_p = 0;
 	ring->write_p = 0;
