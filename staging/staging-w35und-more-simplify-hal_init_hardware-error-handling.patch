From penberg@cs.helsinki.fi  Tue Apr 21 15:33:29 2009
From: Pekka Enberg <penberg@cs.helsinki.fi>
Date: Wed,  8 Apr 2009 11:14:00 +0300
Subject: Staging: w35und: more simplify hal_init_hardware() error handling
To: greg@kroah.com
Cc: Pavel Machek <pavel@ucw.cz>
Message-ID: <1239178446-12893-5-git-send-email-penberg@cs.helsinki.fi>


Impact: fix, cleanup

If initialization in hal_init_hardware() fails, we call hal_halt() to
clean up and release resource. However, hal_halt() will attempt to
call del_timer_sync() on ->LEDTimer on "stage 3" although it's not
initialized at that point. Fix that up by simplifying error handling
logic in hal_init_hardware() with gotos.

Acked-by: Pavel Machek <pavel@ucw.cz>
Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/winbond/wbusb.c |   17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

--- a/drivers/staging/winbond/wbusb.c
+++ b/drivers/staging/winbond/wbusb.c
@@ -488,15 +488,15 @@ static int hal_init_hardware(struct ieee
 
 	pHwData->InitialResource = 1;
 	if (!Wb35Reg_initial(pHwData))
-		goto error;
+		goto error_reg_destroy;
 
 	pHwData->InitialResource = 2;
 	if (!Wb35Tx_initial(pHwData))
-		goto error;
+		goto error_tx_destroy;
 
 	pHwData->InitialResource = 3;
 	if (!Wb35Rx_initial(pHwData))
-		goto error;
+		goto error_rx_destroy;
 
 	pHwData->InitialResource = 4;
 	init_timer(&pHwData->LEDTimer);
@@ -522,7 +522,13 @@ static int hal_init_hardware(struct ieee
 
 	return 0;
 
-error:
+error_rx_destroy:
+	Wb35Rx_destroy(pHwData);
+error_tx_destroy:
+	Wb35Tx_destroy(pHwData);
+error_reg_destroy:
+	Wb35Reg_destroy(pHwData);
+
 	pHwData->SurpriseRemove = 1;
 	return -EINVAL;
 }
@@ -617,11 +623,8 @@ static int wb35_hw_init(struct ieee80211
 	hal_driver_init_OK(pHwData) = 1; // Notify hal that the driver is ready now.
 	//set a tx power for reference.....
 //	sme_set_tx_power_level(priv, 12);	FIXME?
-	return 0;
 
 error:
-	hal_halt(pHwData, NULL);
-
 	return err;
 }
 
