From wfp5p@virginia.edu Wed Mar 25 08:05:13 2009
From: Bill Pemberton <wfp5p@virginia.edu>
Date: Wed, 25 Mar 2009 11:05:09 -0400
Subject: Staging: comedi: Remove UINT and *PUINT typedefs in addi-data
To: greg@kroah.com
Cc: abbotti@mev.co.uk, "fmhess@users.sourceforge.netds"@schleef.org
Message-ID: <20090325150508.13323.20653.stgit@viridian.itc.Virginia.EDU>


Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---

 drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c |   30 +--
 drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.h |    6 
 drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c |   44 ++--
 drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.h |    6 
 drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c    |    4 
 drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c    |   10 -
 drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c    |    2 
 drivers/staging/comedi/drivers/addi-data/addi_common.h     |   53 ++---
 drivers/staging/comedi/drivers/addi-data/addi_eeprom.c     |    6 
 drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c  |   10 -
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.c   |   32 +--
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.h   |    4 
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci1032.c  |   26 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci1500.c  |   36 +--
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci1516.c  |   22 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci1564.c  |   54 ++---
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci2016.c  |   18 -
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci2032.c  |   20 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci2200.c  |   22 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.c  |   42 ++--
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.h  |    6 
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c  |  126 ++++++-------
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.h  |   12 -
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3501.c  |   28 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c  |    4 
 25 files changed, 311 insertions(+), 312 deletions(-)

--- a/drivers/staging/comedi/drivers/addi-data/addi_common.h
+++ b/drivers/staging/comedi/drivers/addi-data/addi_common.h
@@ -37,7 +37,6 @@
 #define SUCCESS	1
 
 /* variable type definition */
-typedef unsigned int UINT, *PUINT;
 typedef int LONG, *PLONG;		/* 32-bit */
 typedef unsigned int ULONG, *PULONG;	/* 32-bit */
 typedef unsigned int DWORD, *PDWORD;	/* 32-bit */
@@ -50,7 +49,7 @@ typedef const struct comedi_lrange *PCRA
 #define MAKEWORD(H, L)	(unsigned short)((L) | ((H) << 8))
 #define LOWORD(W)	(unsigned short)((W) & 0xFFFF)
 #define HIWORD(W)	(unsigned short)(((W) >> 16) & 0xFFFF)
-#define MAKEDWORD(H, L)	(UINT)((L) | ((H) << 16))
+#define MAKEDWORD(H, L)	(unsigned int)((L) | ((H) << 16))
 
 #define ADDI_ENABLE		1
 #define ADDI_DISABLE		0
@@ -99,8 +98,8 @@ typedef struct {
 	int i_Dma;		// dma present or not
 	int i_Timer;		//   timer subdevice present or not
 	unsigned char b_AvailableConvertUnit;
-	UINT ui_MinAcquisitiontimeNs;	// Minimum Acquisition in Nano secs
-	UINT ui_MinDelaytimeNs;	// Minimum Delay in Nano secs
+	unsigned int ui_MinAcquisitiontimeNs;	// Minimum Acquisition in Nano secs
+	unsigned int ui_MinDelaytimeNs;	// Minimum Delay in Nano secs
 
 	/* interrupt and reset */
 	void (*v_hwdrv_Interrupt)(int irq, void *d);
@@ -366,33 +365,33 @@ typedef struct {
 	unsigned char b_ValidDriver;	// driver is ok
 	unsigned char b_AiContinuous;	// we do unlimited AI
 	unsigned char b_AiInitialisation;
-	UINT ui_AiActualScan;	//how many scans we finished
-	UINT ui_AiBufferPtr;	// data buffer ptr in samples
-	UINT ui_AiNbrofChannels;	// how many channels is measured
-	UINT ui_AiScanLength;	// Length of actual scanlist
-	UINT ui_AiActualScanPosition;	// position in actual scan
-	PUINT pui_AiChannelList;	// actual chanlist
-	UINT ui_AiChannelList[32];	// actual chanlist
+	unsigned int ui_AiActualScan;	//how many scans we finished
+	unsigned int ui_AiBufferPtr;	// data buffer ptr in samples
+	unsigned int ui_AiNbrofChannels;	// how many channels is measured
+	unsigned int ui_AiScanLength;	// Length of actual scanlist
+	unsigned int ui_AiActualScanPosition;	// position in actual scan
+	unsigned int * pui_AiChannelList;	// actual chanlist
+	unsigned int ui_AiChannelList[32];	// actual chanlist
 	unsigned char b_AiChannelConfiguration[32];	// actual chanlist
-	UINT ui_AiReadData[32];
+	unsigned int ui_AiReadData[32];
 	DWORD dw_AiInitialised;
-	UINT ui_AiTimer0;	//Timer Constant for Timer0
-	UINT ui_AiTimer1;	//Timer constant for Timer1
-	UINT ui_AiFlags;
-	UINT ui_AiDataLength;
+	unsigned int ui_AiTimer0;	//Timer Constant for Timer0
+	unsigned int ui_AiTimer1;	//Timer constant for Timer1
+	unsigned int ui_AiFlags;
+	unsigned int ui_AiDataLength;
 	short *AiData;	// Pointer to sample data
-	UINT ui_AiNbrofScans;	// number of scans to do
+	unsigned int ui_AiNbrofScans;	// number of scans to do
 	unsigned short us_UseDma;	// To use Dma or not
 	unsigned char b_DmaDoubleBuffer;	// we can use double buffering
-	UINT ui_DmaActualBuffer;	// which buffer is used now
+	unsigned int ui_DmaActualBuffer;	// which buffer is used now
 	//*UPDATE-0.7.57->0.7.68
 	//ULONG               ul_DmaBufferVirtual[2];// pointers to begin of DMA buffer
 	short *ul_DmaBufferVirtual[2];	// pointers to begin of DMA buffer
 	ULONG ul_DmaBufferHw[2];	// hw address of DMA buff
-	UINT ui_DmaBufferSize[2];	// size of dma buffer in bytes
-	UINT ui_DmaBufferUsesize[2];	// which size we may now used for transfer
-	UINT ui_DmaBufferSamples[2];	// size in samples
-	UINT ui_DmaBufferPages[2];	// number of pages in buffer
+	unsigned int ui_DmaBufferSize[2];	// size of dma buffer in bytes
+	unsigned int ui_DmaBufferUsesize[2];	// which size we may now used for transfer
+	unsigned int ui_DmaBufferSamples[2];	// size in samples
+	unsigned int ui_DmaBufferPages[2];	// number of pages in buffer
 	unsigned char b_DigitalOutputRegister;	// Digital Output Register
 	unsigned char b_OutputMemoryStatus;
 	unsigned char b_AnalogInputChannelNbr;	// Analog input channel Nbr
@@ -408,7 +407,7 @@ typedef struct {
 	unsigned char b_AiCyclicAcquisition;	// indicate cyclic acquisition
 	unsigned char b_InterruptMode;	// eoc eos or dma
 	unsigned char b_EocEosInterrupt;	// Enable disable eoc eos interrupt
-	UINT ui_EocEosConversionTime;
+	unsigned int ui_EocEosConversionTime;
 	unsigned char b_EocEosConversionTimeBase;
 	unsigned char b_SingelDiff;
 	unsigned char b_ExttrigEnable;	/* To enable or disable external trigger */
@@ -419,8 +418,8 @@ typedef struct {
 
 	/* Hardware board infos for 1710 */
 	struct {
-		UINT ui_Address;	/* Board address */
-		UINT ui_FlashAddress;
+		unsigned int ui_Address;	/* Board address */
+		unsigned int ui_FlashAddress;
 		unsigned char b_InterruptNbr;	/* Board interrupt number */
 		unsigned char b_SlotNumber;	/* PCI slot number */
 		unsigned char b_BoardVersion;
@@ -431,8 +430,8 @@ typedef struct {
 	struct {
 		ULONG ul_InterruptOccur;	/* 0   : No interrupt occur */
 						/* > 0 : Interrupt occur */
-		UINT ui_Read;	/* Read FIFO */
-		UINT ui_Write;	/* Write FIFO */
+		unsigned int ui_Read;	/* Read FIFO */
+		unsigned int ui_Write;	/* Write FIFO */
 		struct {
 			unsigned char b_OldModuleMask;
 			ULONG ul_OldInterruptMask;	/* Interrupt mask */
--- a/drivers/staging/comedi/drivers/addi-data/addi_eeprom.c
+++ b/drivers/staging/comedi/drivers/addi-data/addi_eeprom.c
@@ -806,7 +806,7 @@ int i_EepromReadMainHeader(unsigned shor
 	char *pc_PCIChipInformation, struct comedi_device *dev)
 {
 	unsigned short w_Temp, i, w_Count = 0;
-	UINT ui_Temp;
+	unsigned int ui_Temp;
 	str_MainHeader s_MainHeader;
 	str_DigitalInputHeader s_DigitalInputHeader;
 	str_DigitalOutputHeader s_DigitalOutputHeader;
@@ -876,10 +876,10 @@ int i_EepromReadMainHeader(unsigned shor
 					s_AnalogInputHeader.w_Nchannel;
 			this_board->i_Dma = s_AnalogInputHeader.b_HasDma;
 			this_board->ui_MinAcquisitiontimeNs =
-				(UINT) s_AnalogInputHeader.w_MinConvertTiming *
+				(unsigned int) s_AnalogInputHeader.w_MinConvertTiming *
 				1000;
 			this_board->ui_MinDelaytimeNs =
-				(UINT) s_AnalogInputHeader.w_MinDelayTiming *
+				(unsigned int) s_AnalogInputHeader.w_MinDelayTiming *
 				1000;
 			ui_Temp = 0xffff;
 			this_board->i_AiMaxdata =
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c
@@ -1107,7 +1107,7 @@ int i_APCI1710_InsnReadChrono(struct com
 	case APCI1710_CHRONO_READVALUE:
 		i_ReturnValue = i_APCI1710_ReadChronoValue(dev,
 			(unsigned char) CR_AREF(insn->chanspec),
-			(UINT) insn->unused[0],
+			(unsigned int) insn->unused[0],
 			(unsigned char *) & data[0], (PULONG) & data[1]);
 		break;
 
@@ -1118,8 +1118,8 @@ int i_APCI1710_InsnReadChrono(struct com
 			(PULONG) & data[0],
 			(unsigned char *) & data[1],
 			(unsigned char *) & data[2],
-			(PUINT) & data[3],
-			(PUINT) & data[4], (PUINT) & data[5]);
+			(unsigned int *) & data[3],
+			(unsigned int *) & data[4], (unsigned int *) & data[5]);
 		break;
 
 	case APCI1710_CHRONO_READINTERRUPT:
@@ -1297,7 +1297,7 @@ int i_APCI1710_GetChronoProgressStatus(s
 | Function Name     : _INT_ i_APCI1710_ReadChronoValue                       |
 |                               (unsigned char_     b_BoardHandle,                    |
 |                                unsigned char_     b_ModulNbr,                       |
-|                                UINT_    ui_TimeOut,                        |
+|                                unsigned int_    ui_TimeOut,                        |
 |                                unsigned char *_   pb_ChronoStatus,                   |
 |                                PULONG_ pul_ChronoValue)                    |
 +----------------------------------------------------------------------------+
@@ -1357,7 +1357,7 @@ int i_APCI1710_GetChronoProgressStatus(s
 
 int i_APCI1710_ReadChronoValue(struct comedi_device * dev,
 	unsigned char b_ModulNbr,
-	UINT ui_TimeOut, unsigned char * pb_ChronoStatus, PULONG pul_ChronoValue)
+	unsigned int ui_TimeOut, unsigned char * pb_ChronoStatus, PULONG pul_ChronoValue)
 {
 	int i_ReturnValue = 0;
 	DWORD dw_Status;
@@ -1587,9 +1587,9 @@ int i_APCI1710_ReadChronoValue(struct co
 |                                PULONG_ pul_Hour,                           |
 |                                unsigned char *_   pb_Minute,                         |
 |                                unsigned char *_   pb_Second,                         |
-|                                PUINT_  pui_MilliSecond,                    |
-|                                PUINT_  pui_MicroSecond,                    |
-|                                PUINT_  pui_NanoSecond)                     |
+|                                unsigned int *_  pui_MilliSecond,                    |
+|                                unsigned int *_  pui_MicroSecond,                    |
+|                                unsigned int *_  pui_NanoSecond)                     |
 +----------------------------------------------------------------------------+
 | Task              : Convert the chronometer measured timing                |
 |                     (ul_ChronoValue) in to h, mn, s, ms, µs, ns.           |
@@ -1603,11 +1603,11 @@ int i_APCI1710_ReadChronoValue(struct co
 | Output Parameters : PULONG_   pul_Hour        : Chronometer timing hour    |
 |                     unsigned char *_     pb_Minute      : Chronometer timing minute  |
 |                     unsigned char *_     pb_Second      : Chronometer timing second  |
-|                     PUINT_    pui_MilliSecond  : Chronometer timing mini   |
+|                     unsigned int *_    pui_MilliSecond  : Chronometer timing mini   |
 |                                                 second                     |
-|                     PUINT_    pui_MicroSecond : Chronometer timing micro   |
+|                     unsigned int *_    pui_MicroSecond : Chronometer timing micro   |
 |                                                 second                     |
-|                     PUINT_    pui_NanoSecond  : Chronometer timing nano    |
+|                     unsigned int *_    pui_NanoSecond  : Chronometer timing nano    |
 |                                                 second                     |
 +----------------------------------------------------------------------------+
 | Return Value      :  0: No error                                           |
@@ -1625,7 +1625,7 @@ int i_APCI1710_ConvertChronoValue(struct
 	PULONG pul_Hour,
 	unsigned char * pb_Minute,
 	unsigned char * pb_Second,
-	PUINT pui_MilliSecond, PUINT pui_MicroSecond, PUINT pui_NanoSecond)
+	unsigned int * pui_MilliSecond, unsigned int * pui_MicroSecond, unsigned int * pui_NanoSecond)
 {
 	int i_ReturnValue = 0;
 	double d_Hour;
@@ -1705,7 +1705,7 @@ int i_APCI1710_ConvertChronoValue(struct
 
 					d_MilliSecond = d_Second - *pb_Second;
 					d_MilliSecond = d_MilliSecond * 1000;
-					*pui_MilliSecond = (UINT) d_MilliSecond;
+					*pui_MilliSecond = (unsigned int) d_MilliSecond;
 
 			    /******************************/
 					/* Calculate the micro second */
@@ -1715,7 +1715,7 @@ int i_APCI1710_ConvertChronoValue(struct
 						d_MilliSecond -
 						*pui_MilliSecond;
 					d_MicroSecond = d_MicroSecond * 1000;
-					*pui_MicroSecond = (UINT) d_MicroSecond;
+					*pui_MicroSecond = (unsigned int) d_MicroSecond;
 
 			    /******************************/
 					/* Calculate the micro second */
@@ -1725,7 +1725,7 @@ int i_APCI1710_ConvertChronoValue(struct
 						d_MicroSecond -
 						*pui_MicroSecond;
 					d_NanoSecond = d_NanoSecond * 1000;
-					*pui_NanoSecond = (UINT) d_NanoSecond;
+					*pui_NanoSecond = (unsigned int) d_NanoSecond;
 					break;
 				}
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.h
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.h
@@ -54,7 +54,7 @@ int i_APCI1710_GetChronoProgressStatus(s
 
 int i_APCI1710_ReadChronoValue(struct comedi_device *dev,
 			       unsigned char b_ModulNbr,
-			       UINT ui_TimeOut, unsigned char * pb_ChronoStatus,
+			       unsigned int ui_TimeOut, unsigned char * pb_ChronoStatus,
 			       PULONG pul_ChronoValue);
 
 int i_APCI1710_ConvertChronoValue(struct comedi_device *dev,
@@ -63,8 +63,8 @@ int i_APCI1710_ConvertChronoValue(struct
 				  PULONG pul_Hour,
 				  unsigned char * pb_Minute,
 				  unsigned char * pb_Second,
-				  PUINT pui_MilliSecond, PUINT pui_MicroSecond,
-				  PUINT pui_NanoSecond);
+				  unsigned int * pui_MilliSecond, unsigned int * pui_MicroSecond,
+				  unsigned int * pui_NanoSecond);
 
 /*
  * CHRONOMETER DIGITAL INPUT OUTPUT FUNCTION
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c
@@ -78,7 +78,7 @@ struct comedi_insn *insn,unsigned int *d
 int i_APCI1710_InsnConfigINCCPT(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_ConfigType;
+	unsigned int ui_ConfigType;
 	int i_ReturnValue = 0;
 	ui_ConfigType = CR_CHAN(insn->chanspec);
 
@@ -119,7 +119,7 @@ int i_APCI1710_InsnConfigINCCPT(struct c
 
 	case APCI1710_INCCPT_INITCOMPARELOGIC:
 		i_ReturnValue = i_APCI1710_InitCompareLogic(dev,
-			CR_AREF(insn->chanspec), (UINT) data[0]);
+			CR_AREF(insn->chanspec), (unsigned int) data[0]);
 		break;
 
 	case APCI1710_INCCPT_INITFREQUENCYMEASUREMENT:
@@ -1370,7 +1370,7 @@ int i_APCI1710_InitExternalStrobe(struct
 	   | Function Name     : _INT_ i_APCI1710_InitCompareLogic                      |
 	   |                               (unsigned char_   b_BoardHandle,                      |
 	   |                                unsigned char_   b_ModulNbr,                         |
-	   |                                UINT_  ui_CompareValue)                     |
+	   |                                unsigned int_  ui_CompareValue)                     |
 	   +----------------------------------------------------------------------------+
 	   | Task              : Set the 32-Bit compare value. At that moment that the  |
 	   |                     incremental counter arrive to the compare value        |
@@ -1379,7 +1379,7 @@ int i_APCI1710_InitExternalStrobe(struct
 	   | Input Parameters  : unsigned char_  b_BoardHandle    : Handle of board APCI-1710    |
 	   |                     unsigned char_  b_ModulNbr       : Module number to configure   |
 	   |                                               (0 to 3)                     |
-	   |                     UINT_ ui_CompareValue   : 32-Bit compare value         |
+	   |                     unsigned int_ ui_CompareValue   : 32-Bit compare value         |
 	   +----------------------------------------------------------------------------+
 	   | Output Parameters : -
 	   +----------------------------------------------------------------------------+
@@ -1392,7 +1392,7 @@ int i_APCI1710_InitExternalStrobe(struct
 	 */
 
 int i_APCI1710_InitCompareLogic(struct comedi_device * dev,
-	unsigned char b_ModulNbr, UINT ui_CompareValue)
+	unsigned char b_ModulNbr, unsigned int ui_CompareValue)
 {
 	int i_ReturnValue = 0;
 
@@ -2018,7 +2018,7 @@ struct comedi_insn *insn,unsigned int *d
 int i_APCI1710_InsnBitsINCCPT(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_BitsType;
+	unsigned int ui_BitsType;
 	int i_ReturnValue = 0;
 	ui_BitsType = CR_CHAN(insn->chanspec);
 	devpriv->tsk_Current = current;	// Save the current process task structure
@@ -2954,7 +2954,7 @@ struct comedi_insn *insn,unsigned int *d
 int i_APCI1710_InsnWriteINCCPT(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_WriteType;
+	unsigned int ui_WriteType;
 	int i_ReturnValue = 0;
 
 	ui_WriteType = CR_CHAN(insn->chanspec);
@@ -2974,7 +2974,7 @@ int i_APCI1710_InsnWriteINCCPT(struct co
 	case APCI1710_INCCPT_WRITE16BITCOUNTERVALUE:
 		i_ReturnValue = i_APCI1710_Write16BitCounterValue(dev,
 			(unsigned char) CR_AREF(insn->chanspec),
-			(unsigned char) data[0], (UINT) data[1]);
+			(unsigned char) data[0], (unsigned int) data[1]);
 		break;
 
 	case APCI1710_INCCPT_WRITE32BITCOUNTERVALUE:
@@ -3207,7 +3207,7 @@ int i_APCI1710_DisableLatchInterrupt(str
 |                                               (unsigned char_  b_BoardHandle        |
 |                                                unsigned char_  b_ModulNbr,          |
 |                                                unsigned char_  b_SelectedCounter,   |
-|                                                UINT_ ui_WriteValue)        |
+|                                                unsigned int_ ui_WriteValue)        |
 +----------------------------------------------------------------------------+
 | Task              : Write a 16-Bit value (ui_WriteValue) in to the selected|
 |                     16-Bit counter (b_SelectedCounter) from selected module|
@@ -3218,7 +3218,7 @@ int i_APCI1710_DisableLatchInterrupt(str
 |                                              (0 to 3)                      |
 |                     unsigned char_ b_SelectedCounter : Selected 16-Bit counter      |
 |                                               (0 or 1)                     |
-|                     UINT_ ui_WriteValue     : 16-Bit write value           |
+|                     unsigned int_ ui_WriteValue     : 16-Bit write value           |
 +----------------------------------------------------------------------------+
 | Output Parameters : -                                                      |
 +----------------------------------------------------------------------------+
@@ -3232,7 +3232,7 @@ int i_APCI1710_DisableLatchInterrupt(str
 */
 
 int i_APCI1710_Write16BitCounterValue(struct comedi_device * dev,
-	unsigned char b_ModulNbr, unsigned char b_SelectedCounter, UINT ui_WriteValue)
+	unsigned char b_ModulNbr, unsigned char b_SelectedCounter, unsigned int ui_WriteValue)
 {
 	int i_ReturnValue = 0;
 
@@ -4052,7 +4052,7 @@ struct comedi_insn *insn,unsigned int *d
 int i_APCI1710_InsnReadINCCPT(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_ReadType;
+	unsigned int ui_ReadType;
 	int i_ReturnValue = 0;
 
 	ui_ReadType = CR_CHAN(insn->chanspec);
@@ -4075,7 +4075,7 @@ int i_APCI1710_InsnReadINCCPT(struct com
 	case APCI1710_INCCPT_READ16BITCOUNTERVALUE:
 		i_ReturnValue = i_APCI1710_Read16BitCounterValue(dev,
 			(unsigned char) CR_AREF(insn->chanspec),
-			(unsigned char) CR_RANGE(insn->chanspec), (PUINT) & data[0]);
+			(unsigned char) CR_RANGE(insn->chanspec), (unsigned int *) & data[0]);
 		break;
 
 	case APCI1710_INCCPT_READ32BITCOUNTERVALUE:
@@ -4341,7 +4341,7 @@ int i_APCI1710_ReadLatchRegisterValue(st
 |                                       (unsigned char_     b_BoardHandle,            |
 |                                        unsigned char_     b_ModulNbr,               |
 |                                        unsigned char_     b_SelectedCounter,        |
-|                                        PUINT_   pui_CounterValue)          |
+|                                        unsigned int *_   pui_CounterValue)          |
 +----------------------------------------------------------------------------+
 | Task              : Latch the selected 16-Bit counter (b_SelectedCounter)  |
 |                     from selected module (b_ModulNbr) in to the first      |
@@ -4353,7 +4353,7 @@ int i_APCI1710_ReadLatchRegisterValue(st
 |                     unsigned char_ b_SelectedCounter : Selected 16-Bit counter      |
 |                                               (0 or 1)                     |
 +----------------------------------------------------------------------------+
-| Output Parameters : PUINT_ pui_CounterValue : 16-Bit counter value         |
+| Output Parameters : unsigned int *_ pui_CounterValue : 16-Bit counter value         |
 +----------------------------------------------------------------------------+
 | Return Value      :  0: No error                                           |
 |                     -1: The handle parameter of the board is wrong         |
@@ -4365,7 +4365,7 @@ int i_APCI1710_ReadLatchRegisterValue(st
 */
 
 int i_APCI1710_Read16BitCounterValue(struct comedi_device * dev,
-	unsigned char b_ModulNbr, unsigned char b_SelectedCounter, PUINT pui_CounterValue)
+	unsigned char b_ModulNbr, unsigned char b_SelectedCounter, unsigned int * pui_CounterValue)
 {
 	int i_ReturnValue = 0;
 	DWORD dw_LathchValue = 0;
@@ -4402,7 +4402,7 @@ int i_APCI1710_Read16BitCounterValue(str
 					ui_Address + 4 + (64 * b_ModulNbr));
 
 				*pui_CounterValue =
-					(UINT) ((dw_LathchValue >> (16 *
+					(unsigned int) ((dw_LathchValue >> (16 *
 							b_SelectedCounter)) &
 					0xFFFFU);
 			} else {
@@ -5150,7 +5150,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 	unsigned char * pb_Status, unsigned char * pb_UDStatus, PULONG pul_ReadValue)
 {
 	int i_ReturnValue = 0;
-	UINT ui_16BitValue;
+	unsigned int ui_16BitValue;
 	DWORD dw_StatusReg;
 
 	/**************************/
@@ -5224,7 +5224,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 								if ((*pul_ReadValue & 0xFFFFU) != 0) {
 									ui_16BitValue
 										=
-										(UINT)
+										(unsigned int)
 										*
 										pul_ReadValue
 										&
@@ -5247,7 +5247,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 								if ((*pul_ReadValue & 0xFFFF0000UL) != 0) {
 									ui_16BitValue
 										=
-										(UINT)
+										(unsigned int)
 										(
 										(*pul_ReadValue
 											>>
@@ -5281,7 +5281,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 								if ((*pul_ReadValue & 0xFFFF0000UL) != 0) {
 									ui_16BitValue
 										=
-										(UINT)
+										(unsigned int)
 										(
 										(*pul_ReadValue
 											>>
@@ -5307,7 +5307,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 									if ((*pul_ReadValue & 0xFFFFU) != 0) {
 										ui_16BitValue
 											=
-											(UINT)
+											(unsigned int)
 											*
 											pul_ReadValue
 											&
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.h
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.h
@@ -171,7 +171,7 @@ int i_APCI1710_InitExternalStrobe(struct
 				  unsigned char b_ExternalStrobeLevel);
 
 int i_APCI1710_InitCompareLogic(struct comedi_device *dev,
-				unsigned char b_ModulNbr, UINT ui_CompareValue);
+				unsigned char b_ModulNbr, unsigned int ui_CompareValue);
 
 int i_APCI1710_InitFrequencyMeasurement(struct comedi_device *dev,
 					unsigned char b_ModulNbr,
@@ -207,7 +207,7 @@ int i_APCI1710_DisableLatchInterrupt(str
 
 int i_APCI1710_Write16BitCounterValue(struct comedi_device *dev,
 				      unsigned char b_ModulNbr, unsigned char b_SelectedCounter,
-				      UINT ui_WriteValue);
+				      unsigned int ui_WriteValue);
 
 int i_APCI1710_Write32BitCounterValue(struct comedi_device *dev,
 				      unsigned char b_ModulNbr, ULONG ul_WriteValue);
@@ -238,7 +238,7 @@ int i_APCI1710_ReadLatchRegisterValue(st
 
 int i_APCI1710_Read16BitCounterValue(struct comedi_device *dev,
 				     unsigned char b_ModulNbr, unsigned char b_SelectedCounter,
-				     PUINT pui_CounterValue);
+				     unsigned int * pui_CounterValue);
 
 int i_APCI1710_Read32BitCounterValue(struct comedi_device *dev,
 				     unsigned char b_ModulNbr, PULONG pul_CounterValue);
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c
@@ -137,7 +137,7 @@ int i_APCI1710_InsnConfigInitSSI(struct 
 	struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	UINT ui_TimerValue;
+	unsigned int ui_TimerValue;
 	unsigned char b_ModulNbr, b_SSIProfile, b_PositionTurnLength, b_TurnCptLength,
 		b_PCIInputClock, b_SSICountingMode;
 	ULONG ul_SSIOutputClock;
@@ -250,7 +250,7 @@ int i_APCI1710_InsnConfigInitSSI(struct 
 
 										ui_TimerValue
 											=
-											(UINT)
+											(unsigned int)
 											(
 											((ULONG) (b_PCIInputClock) * 500000UL) / ul_SSIOutputClock);
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c
@@ -857,7 +857,7 @@ int i_APCI1710_InsnConfigInitTorCounter(
 		DPRINTK("Module number error\n");
 		i_ReturnValue = -2;
 	}
-	data[0] = (UINT) ul_RealTimingInterval;
+	data[0] = (unsigned int) ul_RealTimingInterval;
 	return (i_ReturnValue);
 }
 
@@ -1646,7 +1646,7 @@ int i_APCI1710_InsnReadGetTorCounterInit
 |                               (unsigned char_     b_BoardHandle,                    |
 |                                unsigned char_     b_ModulNbr,                       |
 |				 unsigned char_     b_TorCounter,                     |
-|                                UINT_    ui_TimeOut,                        |
+|                                unsigned int_    ui_TimeOut,                        |
 |                                unsigned char *_   pb_TorCounterStatus,               |
 |                                PULONG_ pul_TorCounterValue)                |
 +----------------------------------------------------------------------------+
@@ -1666,7 +1666,7 @@ int i_APCI1710_InsnReadGetTorCounterInit
 	b_ModulNbr    = CR_AREF(insn->chanspec);
 	b_ReadType    = (unsigned char) data[0];
 	b_TorCounter  =	(unsigned char) data[1];
-	ui_TimeOut	  = (UINT) data[2]; |
+	ui_TimeOut	  = (unsigned int) data[2]; |
 +----------------------------------------------------------------------------+
 | Output Parameters : unsigned char *_  pb_TorCounterStatus : Return the tor counter   |
 |                                                    status.                 |
@@ -1710,7 +1710,7 @@ int i_APCI1710_InsnBitsGetTorCounterProg
 	unsigned char b_ModulNbr;
 	unsigned char b_TorCounter;
 	unsigned char b_ReadType;
-	UINT ui_TimeOut;
+	unsigned int ui_TimeOut;
 	unsigned char * pb_TorCounterStatus;
 	PULONG pul_TorCounterValue;
 
@@ -1718,7 +1718,7 @@ int i_APCI1710_InsnBitsGetTorCounterProg
 	b_ModulNbr = CR_AREF(insn->chanspec);
 	b_ReadType = (unsigned char) data[0];
 	b_TorCounter = (unsigned char) data[1];
-	ui_TimeOut = (UINT) data[2];
+	ui_TimeOut = (unsigned int) data[2];
 	pb_TorCounterStatus = (unsigned char *) & data[0];
 	pul_TorCounterValue = (PULONG) & data[1];
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c
@@ -832,7 +832,7 @@ int i_APCI1710_InsnWriteSetTTLIOChlOnOff
 	DWORD dw_StatusReg = 0;
 	unsigned char b_ModulNbr;
 	unsigned char b_OutputChannel;
-	UINT ui_State;
+	unsigned int ui_State;
 
 	i_ReturnValue = insn->n;
 	b_ModulNbr = CR_AREF(insn->chanspec);
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.c
@@ -64,7 +64,7 @@ int i_Flag = 1;
 | Task              : Configures The Timer , Counter or Watchdog             |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Configure As Timer      |
@@ -112,9 +112,9 @@ int i_Flag = 1;
 int i_APCI035_ConfigTimerWatchdog(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Status = 0;
-	UINT ui_Command = 0;
-	UINT ui_Mode = 0;
+	unsigned int ui_Status = 0;
+	unsigned int ui_Command = 0;
+	unsigned int ui_Mode = 0;
 	i_Temp = 0;
 	devpriv->tsk_Current = current;
 	devpriv->b_TimerSelectMode = data[0];
@@ -260,7 +260,7 @@ int i_APCI035_ConfigTimerWatchdog(struct
 | Task              : Start / Stop The Selected Timer , or Watchdog  |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |					                                                 |
 |					  data[0] : 0 - Stop Selected Timer/Watchdog     |
@@ -281,7 +281,7 @@ int i_APCI035_ConfigTimerWatchdog(struct
 int i_APCI035_StartStopWriteTimerWatchdog(struct comedi_device * dev,
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Command = 0;
+	unsigned int ui_Command = 0;
 	int i_Count = 0;
 	if (data[0] == 1) {
 		ui_Command =
@@ -373,7 +373,7 @@ int i_APCI035_StartStopWriteTimerWatchdo
 | Task              : Read The Selected Timer , Counter or Watchdog          |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |     																	 |
@@ -394,7 +394,7 @@ int i_APCI035_StartStopWriteTimerWatchdo
 int i_APCI035_ReadTimerWatchdog(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Status = 0;	// Status register
+	unsigned int ui_Status = 0;	// Status register
 	i_WatchdogNbr = insn->unused[0];
 	      /******************/
 	/* Get the status */
@@ -472,8 +472,8 @@ int i_APCI035_ConfigAnalogInput(struct c
 | Task              : Read  value  of the selected channel			         |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 |			          data[0]  : Digital Value Of Input              |
@@ -487,7 +487,7 @@ int i_APCI035_ConfigAnalogInput(struct c
 int i_APCI035_ReadAnalogInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_CommandRegister = 0;
+	unsigned int ui_CommandRegister = 0;
 /******************/
 /*  Set the start */
 /******************/
@@ -551,11 +551,11 @@ int i_APCI035_Reset(struct comedi_device
 static void v_APCI035_Interrupt(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	UINT ui_StatusRegister1 = 0;
-	UINT ui_StatusRegister2 = 0;
-	UINT ui_ReadCommand = 0;
-	UINT ui_ChannelNumber = 0;
-	UINT ui_DigitalTemperature = 0;
+	unsigned int ui_StatusRegister1 = 0;
+	unsigned int ui_StatusRegister2 = 0;
+	unsigned int ui_ReadCommand = 0;
+	unsigned int ui_ChannelNumber = 0;
+	unsigned int ui_DigitalTemperature = 0;
 	if (i_Temp == 1) {
 		i_WatchdogNbr = i_Flag;
 		i_Flag = i_Flag + 1;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.h
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci035.h
@@ -27,8 +27,8 @@ struct {
 	int i_Coupling;
 	int i_SingleDiff;
 	int i_AutoCalibration;
-	UINT ui_ReloadValue;
-	UINT ui_TimeUnitReloadVal;
+	unsigned int ui_ReloadValue;
+	unsigned int ui_TimeUnitReloadVal;
 	int i_Interrupt;
 	int i_ModuleSelection;
 } Config_Parameters_Main;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1032.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1032.c
@@ -54,7 +54,7 @@ You shoud also find the complete GPL in 
 #include "hwdrv_apci1032.h"
 #include <linux/delay.h>
 //Global variables
-UINT ui_InterruptStatus = 0;
+unsigned int ui_InterruptStatus = 0;
 
 /*
 +----------------------------------------------------------------------------+
@@ -87,7 +87,7 @@ UINT ui_InterruptStatus = 0;
 int i_APCI1032_ConfigDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue;
+	unsigned int ui_TmpValue;
 
 	ULONG ul_Command1 = 0;
 	ULONG ul_Command2 = 0;
@@ -134,7 +134,7 @@ int i_APCI1032_ConfigDigitalInput(struct
 | Task              : Return the status of the digital input                 |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|		              UINT ui_Channel : Channel number to read       |
+|		              unsigned int ui_Channel : Channel number to read       |
 |                     unsigned int *data          : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
@@ -147,11 +147,11 @@ int i_APCI1032_ConfigDigitalInput(struct
 int i_APCI1032_Read1DigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue = 0;
-	UINT ui_Channel;
+	unsigned int ui_TmpValue = 0;
+	unsigned int ui_Channel;
 	ui_Channel = CR_CHAN(insn->chanspec);
 	if (ui_Channel >= 0 && ui_Channel <= 31) {
-		ui_TmpValue = (UINT) inl(devpriv->iobase + APCI1032_DIGITAL_IP);
+		ui_TmpValue = (unsigned int) inl(devpriv->iobase + APCI1032_DIGITAL_IP);
 		//  since only 1 channel reqd  to bring it to last bit it is rotated
 		//  8 +(chan - 1) times then ANDed with 1 for last bit.
 		*data = (ui_TmpValue >> ui_Channel) & 0x1;
@@ -172,8 +172,8 @@ int i_APCI1032_Read1DigitalInput(struct 
 | Task              : Return the status of the Requested digital inputs      |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To be Read    |
-|                      UINT *data             : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To be Read    |
+|                      unsigned int *data             : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -186,13 +186,13 @@ int i_APCI1032_Read1DigitalInput(struct 
 int i_APCI1032_ReadMoreDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_PortValue = data[0];
-	UINT ui_Mask = 0;
-	UINT ui_NoOfChannels;
+	unsigned int ui_PortValue = data[0];
+	unsigned int ui_Mask = 0;
+	unsigned int ui_NoOfChannels;
 
 	ui_NoOfChannels = CR_CHAN(insn->chanspec);
 	if (data[1] == 0) {
-		*data = (UINT) inl(devpriv->iobase + APCI1032_DIGITAL_IP);
+		*data = (unsigned int) inl(devpriv->iobase + APCI1032_DIGITAL_IP);
 		switch (ui_NoOfChannels) {
 		case 2:
 			ui_Mask = 3;
@@ -247,7 +247,7 @@ static void v_APCI1032_Interrupt(int irq
 {
 	struct comedi_device *dev = d;
 
-	UINT ui_Temp;
+	unsigned int ui_Temp;
 	//disable the interrupt
 	ui_Temp = inl(devpriv->iobase + APCI1032_DIGITAL_IP_IRQ);
 	outl(ui_Temp & APCI1032_DIGITAL_IP_INTERRUPT_DISABLE,
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1500.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1500.c
@@ -506,7 +506,7 @@ int i_APCI1500_ConfigDigitalInputEvent(s
 | Task              :  Allows or disallows a port event                      |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|		              UINT ui_Channel : Channel number to read       |
+|		              unsigned int ui_Channel : Channel number to read       |
 |                     unsigned int *data          : Data Pointer to read status  |
                       data[0]                 :0 Start input event
                                                1 Stop input event
@@ -774,7 +774,7 @@ int i_APCI1500_StartStopInputEvent(struc
 | Task              : Return the status of the digital input                 |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|		              UINT ui_Channel : Channel number to read       |
+|		              unsigned int ui_Channel : Channel number to read       |
 |                     unsigned int *data          : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
@@ -943,8 +943,8 @@ int i_APCI1500_Initialisation(struct com
 | Task              : Return the status of the Requested digital inputs      |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To be Read    |
-|                      UINT *data             : Data Pointer
+|                     unsigned int ui_NoOfChannels    : No Of Channels To be Read    |
+|                      unsigned int *data             : Data Pointer
                       data[0]                 : 0 Read a single channel
                                                 1 read a port value
                       data[1]                 : port value
@@ -960,17 +960,17 @@ int i_APCI1500_Initialisation(struct com
 int i_APCI1500_ReadMoreDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_PortValue = data[1];
-	UINT ui_Mask = 0;
-	UINT ui_Channel;
-	UINT ui_TmpValue = 0;
+	unsigned int ui_PortValue = data[1];
+	unsigned int ui_Mask = 0;
+	unsigned int ui_Channel;
+	unsigned int ui_TmpValue = 0;
 	ui_Channel = CR_CHAN(insn->chanspec);
 
 	switch (data[0]) {
 	case 0:
 		if (ui_Channel >= 0 && ui_Channel <= 15) {
 			ui_TmpValue =
-				(UINT) inw(devpriv->i_IobaseAddon +
+				(unsigned int) inw(devpriv->i_IobaseAddon +
 				APCI1500_DIGITAL_IP);
 			*data = (ui_TmpValue >> ui_Channel) & 0x1;
 		}		//if(ui_Channel >= 0 && ui_Channel <=15)
@@ -981,7 +981,7 @@ int i_APCI1500_ReadMoreDigitalInput(stru
 		break;
 	case 1:
 
-		*data = (UINT) inw(devpriv->i_IobaseAddon +
+		*data = (unsigned int) inw(devpriv->i_IobaseAddon +
 			APCI1500_DIGITAL_IP);
 		switch (ui_Channel) {
 		case 2:
@@ -1056,8 +1056,8 @@ int i_APCI1500_ConfigDigitalOutputErrorI
 | Task              : Writes port value  To the selected port                |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To Write      |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To Write      |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -1070,10 +1070,10 @@ int i_APCI1500_ConfigDigitalOutputErrorI
 int i_APCI1500_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	static UINT ui_Temp = 0;
-	UINT ui_Temp1;
+	static unsigned int ui_Temp = 0;
+	unsigned int ui_Temp1;
 
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 
 	if (!devpriv->b_OutputMemoryStatus) {
 		ui_Temp = 0;
@@ -2404,7 +2404,7 @@ int i_APCI1500_ReadInterruptMask(struct 
 int i_APCI1500_ConfigureInterrupt(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Status;
+	unsigned int ui_Status;
 	int i_RegValue;
 	int i_Constant;
 	devpriv->tsk_Current = current;
@@ -2580,7 +2580,7 @@ static void v_APCI1500_Interrupt(int irq
 {
 
 	struct comedi_device *dev = d;
-	UINT ui_InterruptStatus = 0;
+	unsigned int ui_InterruptStatus = 0;
 	int i_RegValue = 0;
 	i_InterruptMask = 0;
 
@@ -2679,7 +2679,7 @@ static void v_APCI1500_Interrupt(int irq
 			/* Reads port B */
 	     /****************/
 			i_RegValue =
-				inb((UINT) devpriv->iobase +
+				inb((unsigned int) devpriv->iobase +
 				APCI1500_Z8536_PORT_B);
 
 			i_RegValue = i_RegValue & 0xC0;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1516.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1516.c
@@ -76,11 +76,11 @@ You shoud also find the complete GPL in 
 int i_APCI1516_Read1DigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue = 0;
-	UINT ui_Channel;
+	unsigned int ui_TmpValue = 0;
+	unsigned int ui_Channel;
 	ui_Channel = CR_CHAN(insn->chanspec);
 	if (ui_Channel >= 0 && ui_Channel <= 7) {
-		ui_TmpValue = (UINT) inw(devpriv->iobase + APCI1516_DIGITAL_IP);
+		ui_TmpValue = (unsigned int) inw(devpriv->iobase + APCI1516_DIGITAL_IP);
 		//  since only 1 channel reqd  to bring it to last bit it is rotated
 		//  8 +(chan - 1) times then ANDed with 1 for last bit.
 		*data = (ui_TmpValue >> ui_Channel) & 0x1;
@@ -118,13 +118,13 @@ int i_APCI1516_ReadMoreDigitalInput(stru
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_PortValue = data[0];
-	UINT ui_Mask = 0;
-	UINT ui_NoOfChannels;
+	unsigned int ui_PortValue = data[0];
+	unsigned int ui_Mask = 0;
+	unsigned int ui_NoOfChannels;
 
 	ui_NoOfChannels = CR_CHAN(insn->chanspec);
 
-	*data = (UINT) inw(devpriv->iobase + APCI1516_DIGITAL_IP);
+	*data = (unsigned int) inw(devpriv->iobase + APCI1516_DIGITAL_IP);
 	switch (ui_NoOfChannels) {
 	case 2:
 		ui_Mask = 3;
@@ -202,8 +202,8 @@ int i_APCI1516_ConfigDigitalOutput(struc
 int i_APCI1516_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp, ui_Temp1;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 
 	printk("EL311003 : @=%x\n", devpriv->iobase + APCI1516_DIGITAL_OP);
 
@@ -363,8 +363,8 @@ int i_APCI1516_ReadDigitalOutput(struct 
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_Temp;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	ui_Temp = data[0];
 	*data = inw(devpriv->iobase + APCI1516_DIGITAL_OP_RW);
 	if (ui_Temp == 0) {
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1564.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci1564.c
@@ -56,8 +56,8 @@ You shoud also find the complete GPL in 
 #include "hwdrv_apci1564.h"
 
 //Global variables
-UINT ui_InterruptStatus_1564 = 0;
-UINT ui_InterruptData, ui_Type;
+unsigned int ui_InterruptStatus_1564 = 0;
+unsigned int ui_InterruptData, ui_Type;
 
 /*
 +----------------------------------------------------------------------------+
@@ -137,7 +137,7 @@ int i_APCI1564_ConfigDigitalInput(struct
 | Task              : Return the status of the digital input                 |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|		              UINT ui_Channel : Channel number to read       |
+|		              unsigned int ui_Channel : Channel number to read       |
 |                     unsigned int *data          : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
@@ -150,13 +150,13 @@ int i_APCI1564_ConfigDigitalInput(struct
 int i_APCI1564_Read1DigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue = 0;
-	UINT ui_Channel;
+	unsigned int ui_TmpValue = 0;
+	unsigned int ui_Channel;
 
 	ui_Channel = CR_CHAN(insn->chanspec);
 	if (ui_Channel >= 0 && ui_Channel <= 31) {
 		ui_TmpValue =
-			(UINT) inl(devpriv->i_IobaseAmcc + APCI1564_DIGITAL_IP);
+			(unsigned int) inl(devpriv->i_IobaseAmcc + APCI1564_DIGITAL_IP);
 		//  since only 1 channel reqd  to bring it to last bit it is rotated
 		//  8 +(chan - 1) times then ANDed with 1 for last bit.
 		*data = (ui_TmpValue >> ui_Channel) & 0x1;
@@ -177,8 +177,8 @@ int i_APCI1564_Read1DigitalInput(struct 
 | Task              : Return the status of the Requested digital inputs      |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To be Read    |
-|                      UINT *data             : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To be Read    |
+|                      unsigned int *data             : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -190,13 +190,13 @@ int i_APCI1564_Read1DigitalInput(struct 
 int i_APCI1564_ReadMoreDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_PortValue = data[0];
-	UINT ui_Mask = 0;
-	UINT ui_NoOfChannels;
+	unsigned int ui_PortValue = data[0];
+	unsigned int ui_Mask = 0;
+	unsigned int ui_NoOfChannels;
 
 	ui_NoOfChannels = CR_CHAN(insn->chanspec);
 	if (data[1] == 0) {
-		*data = (UINT) inl(devpriv->i_IobaseAmcc + APCI1564_DIGITAL_IP);
+		*data = (unsigned int) inl(devpriv->i_IobaseAmcc + APCI1564_DIGITAL_IP);
 		switch (ui_NoOfChannels) {
 		case 2:
 			ui_Mask = 3;
@@ -239,7 +239,7 @@ int i_APCI1564_ReadMoreDigitalInput(stru
 | Task              : Configures The Digital Output Subdevice.               |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[1]            : 1 Enable  VCC  Interrupt  |
@@ -302,8 +302,8 @@ int i_APCI1564_ConfigDigitalOutput(struc
 | Task              : Writes port value  To the selected port                |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To Write      |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To Write      |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -315,8 +315,8 @@ int i_APCI1564_ConfigDigitalOutput(struc
 int i_APCI1564_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp, ui_Temp1;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel;
 
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	if (devpriv->b_OutputMemoryStatus) {
@@ -476,8 +476,8 @@ int i_APCI1564_WriteDigitalOutput(struct
 | Task              : Read  value  of the selected channel or port           |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -489,8 +489,8 @@ int i_APCI1564_WriteDigitalOutput(struct
 int i_APCI1564_ReadDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
@@ -543,7 +543,7 @@ int i_APCI1564_ReadDigitalOutput(struct 
 | Task              : Configures The Timer , Counter or Watchdog             |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Configure As Timer      |
@@ -701,7 +701,7 @@ int i_APCI1564_ConfigTimerCounterWatchdo
 | Task              : Start / Stop The Selected Timer , Counter or Watchdog  |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Timer                   |
@@ -801,7 +801,7 @@ int i_APCI1564_StartStopWriteTimerCounte
 | Task              : Read The Selected Timer , Counter or Watchdog          |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 
@@ -919,9 +919,9 @@ int i_APCI1564_ReadInterruptStatus(struc
 static void v_APCI1564_Interrupt(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	UINT ui_DO, ui_DI;
-	UINT ui_Timer;
-	UINT ui_C1, ui_C2, ui_C3, ui_C4;
+	unsigned int ui_DO, ui_DI;
+	unsigned int ui_Timer;
+	unsigned int ui_C1, ui_C2, ui_C3, ui_C4;
 	ULONG ul_Command2 = 0;
 	ui_DI = inl(devpriv->i_IobaseAmcc + APCI1564_DIGITAL_IP +
 		APCI1564_DIGITAL_IP_IRQ) & 0x01;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c
@@ -255,7 +255,7 @@ void v_APCI1710_Interrupt(int irq, void 
 	unsigned char b_PWMCpt = 0;
 	unsigned char b_TorCounterCpt = 0;
 	unsigned char b_PulseIncoderCpt = 0;
-	UINT ui_16BitValue;
+	unsigned int ui_16BitValue;
 	ULONG ul_InterruptLatchReg = 0;
 	ULONG ul_LatchRegisterValue = 0;
 	ULONG ul_82X54InterruptStatus;
@@ -675,7 +675,7 @@ void v_APCI1710_Interrupt(int irq, void 
 						if ((ul_LatchRegisterValue &
 								0xFFFFU) != 0) {
 							ui_16BitValue =
-								(UINT)
+								(unsigned int)
 								ul_LatchRegisterValue
 								& 0xFFFFU;
 							ul_LatchRegisterValue =
@@ -693,7 +693,7 @@ void v_APCI1710_Interrupt(int irq, void 
 								0xFFFF0000UL) !=
 							0) {
 							ui_16BitValue =
-								(UINT) (
+								(unsigned int) (
 								(ul_LatchRegisterValue
 									>> 16) &
 								0xFFFFU);
@@ -721,7 +721,7 @@ void v_APCI1710_Interrupt(int irq, void 
 					if ((ul_LatchRegisterValue &
 							0xFFFF0000UL) != 0) {
 						ui_16BitValue =
-							(UINT) (
+							(unsigned int) (
 							(ul_LatchRegisterValue
 								>> 16) &
 							0xFFFFU);
@@ -741,7 +741,7 @@ void v_APCI1710_Interrupt(int irq, void 
 					if ((ul_LatchRegisterValue & 0xFFFFU) !=
 						0) {
 						ui_16BitValue =
-							(UINT)
+							(unsigned int)
 							ul_LatchRegisterValue &
 							0xFFFFU;
 						ul_LatchRegisterValue =
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2016.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2016.c
@@ -62,7 +62,7 @@ You shoud also find the complete GPL in 
 | Task              : Configures The Digital Output Subdevice.               |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |			  data[0]            : 1 Digital Memory On               |
@@ -101,8 +101,8 @@ int i_APCI2016_ConfigDigitalOutput(struc
 | Task              : Writes port value  To the selected port                |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To Write      |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To Write      |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -114,8 +114,8 @@ int i_APCI2016_ConfigDigitalOutput(struc
 int i_APCI2016_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_NoOfChannel;
-	UINT ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel;
+	unsigned int ui_Temp, ui_Temp1;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	if ((ui_NoOfChannel < 0) || (ui_NoOfChannel > 15)) {
 		comedi_error(dev,
@@ -256,8 +256,8 @@ int i_APCI2016_WriteDigitalOutput(struct
 | Task              : Read  value  of the selected channel or port           |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -269,8 +269,8 @@ int i_APCI2016_WriteDigitalOutput(struct
 int i_APCI2016_BitsDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	if ((ui_NoOfChannel < 0) || (ui_NoOfChannel > 15)) {
 		comedi_error(dev,
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2032.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2032.c
@@ -53,7 +53,7 @@ You shoud also find the complete GPL in 
 */
 
 #include "hwdrv_apci2032.h"
-UINT ui_InterruptData, ui_Type;
+unsigned int ui_InterruptData, ui_Type;
 /*
 +----------------------------------------------------------------------------+
 | Function   Name   : int i_APCI2032_ConfigDigitalOutput                     |
@@ -63,7 +63,7 @@ UINT ui_InterruptData, ui_Type;
 | Task              : Configures The Digital Output Subdevice.               |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[1]            : 1 Enable  VCC  Interrupt  |
@@ -123,8 +123,8 @@ int i_APCI2032_ConfigDigitalOutput(struc
 | Task              : Writes port value  To the selected port                |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To Write      |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To Write      |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -137,8 +137,8 @@ int i_APCI2032_ConfigDigitalOutput(struc
 int i_APCI2032_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp, ui_Temp1;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	if (devpriv->b_OutputMemoryStatus) {
 		ui_Temp = inl(devpriv->iobase + APCI2032_DIGITAL_OP);
 
@@ -302,8 +302,8 @@ int i_APCI2032_WriteDigitalOutput(struct
 | Task              : Read  value  of the selected channel or port           |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -316,8 +316,8 @@ int i_APCI2032_WriteDigitalOutput(struct
 int i_APCI2032_ReadDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
 	*data = inl(devpriv->iobase + APCI2032_DIGITAL_OP_RW);
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2200.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci2200.c
@@ -76,11 +76,11 @@ You shoud also find the complete GPL in 
 int i_APCI2200_Read1DigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue = 0;
-	UINT ui_Channel;
+	unsigned int ui_TmpValue = 0;
+	unsigned int ui_Channel;
 	ui_Channel = CR_CHAN(insn->chanspec);
 	if (ui_Channel >= 0 && ui_Channel <= 7) {
-		ui_TmpValue = (UINT) inw(devpriv->iobase + APCI2200_DIGITAL_IP);
+		ui_TmpValue = (unsigned int) inw(devpriv->iobase + APCI2200_DIGITAL_IP);
 		*data = (ui_TmpValue >> ui_Channel) & 0x1;
 	}			//if(ui_Channel >= 0 && ui_Channel <=7)
 	else {
@@ -116,13 +116,13 @@ int i_APCI2200_ReadMoreDigitalInput(stru
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_PortValue = data[0];
-	UINT ui_Mask = 0;
-	UINT ui_NoOfChannels;
+	unsigned int ui_PortValue = data[0];
+	unsigned int ui_Mask = 0;
+	unsigned int ui_NoOfChannels;
 
 	ui_NoOfChannels = CR_CHAN(insn->chanspec);
 
-	*data = (UINT) inw(devpriv->iobase + APCI2200_DIGITAL_IP);
+	*data = (unsigned int) inw(devpriv->iobase + APCI2200_DIGITAL_IP);
 	switch (ui_NoOfChannels) {
 	case 2:
 		ui_Mask = 3;
@@ -200,8 +200,8 @@ int i_APCI2200_ConfigDigitalOutput(struc
 int i_APCI2200_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp, ui_Temp1;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	if (devpriv->b_OutputMemoryStatus) {
 		ui_Temp = inw(devpriv->iobase + APCI2200_DIGITAL_OP);
 
@@ -358,8 +358,8 @@ int i_APCI2200_ReadDigitalOutput(struct 
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_Temp;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	ui_Temp = data[0];
 	*data = inw(devpriv->iobase + APCI2200_DIGITAL_OP);
 	if (ui_Temp == 0) {
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.c
@@ -45,7 +45,7 @@ You shoud also find the complete GPL in 
 */
 
 #include "hwdrv_apci3120.h"
-static UINT ui_Temp = 0;
+static unsigned int ui_Temp = 0;
 
 // FUNCTION DEFINITIONS
 
@@ -77,7 +77,7 @@ static UINT ui_Temp = 0;
 int i_APCI3120_InsnConfigAnalogInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT i;
+	unsigned int i;
 
 	if ((data[0] != APCI3120_EOC_MODE) && (data[0] != APCI3120_EOS_MODE))
 		return -1;
@@ -373,7 +373,7 @@ int i_APCI3120_InsnReadAnalogInput(struc
 					i++) {
 					//Read the result in FIFO and write them in shared memory
 					us_TmpValue = inw(devpriv->iobase);
-					data[i] = (UINT) us_TmpValue;
+					data[i] = (unsigned int) us_TmpValue;
 				}
 
 				devpriv->b_InterruptMode = APCI3120_EOC_MODE;	// Restore defaults.
@@ -711,7 +711,7 @@ int i_APCI3120_CyclicAnalogInput(int mod
 	struct comedi_subdevice * s)
 {
 	unsigned char b_Tmp;
-	UINT ui_Tmp, ui_DelayTiming = 0, ui_TimerValue1 = 0, dmalen0 =
+	unsigned int ui_Tmp, ui_DelayTiming = 0, ui_TimerValue1 = 0, dmalen0 =
 		0, dmalen1 = 0, ui_TimerValue2 =
 		0, ui_TimerValue0, ui_ConvertTiming;
 	unsigned short us_TmpValue;
@@ -800,21 +800,21 @@ int i_APCI3120_CyclicAnalogInput(int mod
 	 if((us_TmpValue & 0x00B0)==0x00B0)
 	 {
            f_ConvertValue=(((float)ui_ConvertTiming * 0.002) - 2);
-		ui_TimerValue0=(UINT)f_ConvertValue;
+		ui_TimerValue0=(unsigned int)f_ConvertValue;
 		if (mode==2)
 		{
 			f_DelayValue     = (((float)ui_DelayTiming * 0.00002) - 2);
-			ui_TimerValue1  =   (UINT) f_DelayValue;
+			ui_TimerValue1  =   (unsigned int) f_DelayValue;
 		}
 	 }
    	 else
 	 {
 		f_ConvertValue=(((float)ui_ConvertTiming * 0.0012926) - 1);
-		ui_TimerValue0=(UINT)f_ConvertValue;
+		ui_TimerValue0=(unsigned int)f_ConvertValue;
 		if (mode == 2)
 		{
 		     f_DelayValue     = (((float)ui_DelayTiming * 0.000012926) - 1);
-		     ui_TimerValue1  =   (UINT) f_DelayValue;
+		     ui_TimerValue1  =   (unsigned int) f_DelayValue;
 		}
 	}
 ***********************************************************************************************/
@@ -1464,7 +1464,7 @@ void v_APCI3120_Interrupt(int irq, void 
 			// Read the AI Value
 
 			devpriv->ui_AiReadData[0] =
-				(UINT) inw(devpriv->iobase + 0);
+				(unsigned int) inw(devpriv->iobase + 0);
 			devpriv->b_EocEosInterrupt = APCI3120_DISABLE;
 			send_sig(SIGIO, devpriv->tsk_Current, 0);	// send signal to the sample
 		} else {
@@ -1501,7 +1501,7 @@ void v_APCI3120_Interrupt(int irq, void 
 					i++) {
 					us_TmpValue = inw(devpriv->iobase + 0);
 					devpriv->ui_AiReadData[i] =
-						(UINT) us_TmpValue;
+						(unsigned int) us_TmpValue;
 				}
 				devpriv->b_EocEosInterrupt = APCI3120_DISABLE;
 				devpriv->b_InterruptMode = APCI3120_EOC_MODE;
@@ -1704,7 +1704,7 @@ void v_APCI3120_InterruptDma(int irq, vo
 	unsigned int next_dma_buf, samplesinbuf;
 	unsigned long low_word, high_word, var;
 
-	UINT ui_Tmp;
+	unsigned int ui_Tmp;
 	samplesinbuf =
 		devpriv->ui_DmaBufferUsesize[devpriv->ui_DmaActualBuffer] -
 		inl(devpriv->i_IobaseAmcc + AMCC_OP_REG_MWTC);
@@ -1972,7 +1972,7 @@ int i_APCI3120_InsnConfigTimer(struct co
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_Timervalue2;
+	unsigned int ui_Timervalue2;
 	unsigned short us_TmpValue;
 	unsigned char b_Tmp;
 
@@ -2123,7 +2123,7 @@ int i_APCI3120_InsnWriteTimer(struct com
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ui_Timervalue2 = 0;
+	unsigned int ui_Timervalue2 = 0;
 	unsigned short us_TmpValue;
 	unsigned char b_Tmp;
 
@@ -2336,7 +2336,7 @@ int i_APCI3120_InsnReadTimer(struct come
 		us_TmpValue_2 = inw(devpriv->iobase + APCI3120_TIMER_VALUE);
 
 		// combining both words
-		data[0] = (UINT) ((us_TmpValue) | ((us_TmpValue_2) << 16));
+		data[0] = (unsigned int) ((us_TmpValue) | ((us_TmpValue_2) << 16));
 
 	} else			// Read watch dog status
 	{
@@ -2384,13 +2384,13 @@ int i_APCI3120_InsnReadDigitalInput(stru
 				    struct comedi_insn *insn,
 				    unsigned int *data)
 {
-	UINT ui_Chan, ui_TmpValue;
+	unsigned int ui_Chan, ui_TmpValue;
 
 	ui_Chan = CR_CHAN(insn->chanspec);	// channel specified
 
 	//this_board->i_hwdrv_InsnReadDigitalInput(dev,ui_Chan,data);
 	if (ui_Chan >= 0 && ui_Chan <= 3) {
-		ui_TmpValue = (UINT) inw(devpriv->iobase + APCI3120_RD_STATUS);
+		ui_TmpValue = (unsigned int) inw(devpriv->iobase + APCI3120_RD_STATUS);
 
 		//      since only 1 channel reqd  to bring it to last bit it is rotated
 		//  8 +(chan - 1) times then ANDed with 1 for last bit.
@@ -2426,8 +2426,8 @@ int i_APCI3120_InsnReadDigitalInput(stru
 int i_APCI3120_InsnBitsDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_TmpValue;
-	ui_TmpValue = (UINT) inw(devpriv->iobase + APCI3120_RD_STATUS);
+	unsigned int ui_TmpValue;
+	ui_TmpValue = (unsigned int) inw(devpriv->iobase + APCI3120_RD_STATUS);
 	/*****	state of 4 channels  in the 11, 10, 9, 8   bits of status reg
 			rotated right 8 times to bring them to last four bits
 			ANDed with oxf for  value.
@@ -2567,9 +2567,9 @@ int i_APCI3120_InsnWriteDigitalOutput(st
 				      unsigned int *data)
 {
 
-	UINT ui_Temp1;
+	unsigned int ui_Temp1;
 
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 
 	if ((data[0] != 0) && (data[0] != 1)) {
 		comedi_error(dev,
@@ -2646,7 +2646,7 @@ int i_APCI3120_InsnWriteAnalogOutput(str
 				     struct comedi_insn *insn,
 				     unsigned int *data)
 {
-	UINT ui_Range, ui_Channel;
+	unsigned int ui_Range, ui_Channel;
 	unsigned short us_TmpValue;
 
 	ui_Range = CR_RANGE(insn->chanspec);
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.h
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3120.h
@@ -168,10 +168,10 @@ static const struct comedi_lrange range_
 typedef struct {
 	unsigned char b_Type;		/* EOC or EOS */
 	unsigned char b_InterruptFlag;	/* Interrupt use or not                    */
-	UINT ui_ConvertTiming;	/* Selection of the convertion time        */
+	unsigned int ui_ConvertTiming;	/* Selection of the convertion time        */
 	unsigned char b_NbrOfChannel;	/* Number of channel to read               */
-	UINT ui_ChannelList[MAX_ANALOGINPUT_CHANNELS];	/* Number of the channel to be read        */
-	UINT ui_RangeList[MAX_ANALOGINPUT_CHANNELS];	/* Gain of each channel                    */
+	unsigned int ui_ChannelList[MAX_ANALOGINPUT_CHANNELS];	/* Number of the channel to be read        */
+	unsigned int ui_RangeList[MAX_ANALOGINPUT_CHANNELS];	/* Gain of each channel                    */
 
 } str_AnalogReadInformation;
 
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c
@@ -82,10 +82,10 @@ You shoud also find the complete GPL in 
   int i_LastChannel;
   int i_Sum=0;
   int i_Offset;
-  UINT ui_Channel_num=0;
+  unsigned int ui_Channel_num=0;
   static int i_Count=0;
   int i_Initialised=0;
-  UINT ui_InterruptChannelValue[96]; //Buffer
+  unsigned int ui_InterruptChannelValue[96]; //Buffer
 */
 str_BoardInfos s_BoardInfos[100];	// 100 will be the max number of boards to be used
 //END JK 06.07.04: Management of sevrals boards
@@ -536,9 +536,9 @@ int i_APCI3200_GetChannelCalibrationValu
   | Task              : Read  value  of the selected channel or port           |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT ui_NoOfChannels    : No Of Channels To read  for Port
+  |                     unsigned int ui_NoOfChannels    : No Of Channels To read  for Port
   Channel Numberfor single channel
-  |                     UINT data[0]            : 0: Read single channel
+  |                     unsigned int data[0]            : 0: Read single channel
   1: Read port value
   data[1]              Port number
   +----------------------------------------------------------------------------+
@@ -553,8 +553,8 @@ int i_APCI3200_GetChannelCalibrationValu
 int i_APCI3200_ReadDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp = 0;
-	UINT ui_NoOfChannel = 0;
+	unsigned int ui_Temp = 0;
+	unsigned int ui_NoOfChannel = 0;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
 	*data = inl(devpriv->i_IobaseReserved);
@@ -656,8 +656,8 @@ int i_APCI3200_ConfigDigitalOutput(struc
 int i_APCI3200_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp = 0, ui_Temp1 = 0;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp = 0, ui_Temp1 = 0;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	if (devpriv->b_OutputMemoryStatus) {
 		ui_Temp = inl(devpriv->i_IobaseAddon);
 
@@ -752,8 +752,8 @@ int i_APCI3200_WriteDigitalOutput(struct
   | Task              : Read  value  of the selected channel or port           |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT ui_NoOfChannels    : No Of Channels To read       |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+  |                     unsigned int *data              : Data Pointer to read status  |
   data[0]                 :0 read single channel
   1 read port value
   data[1]                  port no
@@ -769,8 +769,8 @@ int i_APCI3200_WriteDigitalOutput(struct
 int i_APCI3200_ReadDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
 	*data = inl(devpriv->i_IobaseAddon);
@@ -878,9 +878,9 @@ int i_APCI3200_ConfigAnalogInput(struct 
 	struct comedi_insn * insn, unsigned int * data)
 {
 
-	UINT ul_Config = 0, ul_Temp = 0;
-	UINT ui_ChannelNo = 0;
-	UINT ui_Dummy = 0;
+	unsigned int ul_Config = 0, ul_Temp = 0;
+	unsigned int ui_ChannelNo = 0;
+	unsigned int ui_Dummy = 0;
 	int i_err = 0;
 
 	//Begin JK 21.10.2004: APCI-3200 / APCI-3300 Reading of EEPROM values
@@ -1340,8 +1340,8 @@ int i_APCI3200_ConfigAnalogInput(struct 
   | Task              : Read  value  of the selected channel			         |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT ui_NoOfChannels    : No Of Channels To read       |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |				data[0]  : Digital Value Of Input             |
@@ -1364,7 +1364,7 @@ int i_APCI3200_ConfigAnalogInput(struct 
 int i_APCI3200_ReadAnalogInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_DummyValue = 0;
+	unsigned int ui_DummyValue = 0;
 	int i_ConvertCJCCalibration;
 	int i = 0;
 
@@ -1639,8 +1639,8 @@ int i_APCI3200_ReadAnalogInput(struct co
   | Task              : Read  value  of the selected channel			         |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT ui_NoOfChannel    : Channel No to read            |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int ui_NoOfChannel    : Channel No to read            |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : Digital Value read                   |
@@ -1654,9 +1654,9 @@ int i_APCI3200_ReadAnalogInput(struct co
 int i_APCI3200_Read1AnalogInputChannel(struct comedi_device * dev,
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_EOC = 0;
-	UINT ui_ChannelNo = 0;
-	UINT ui_CommandRegister = 0;
+	unsigned int ui_EOC = 0;
+	unsigned int ui_ChannelNo = 0;
+	unsigned int ui_CommandRegister = 0;
 
 	//BEGIN JK 06.07.04: Management of sevrals boards
 	//ui_ChannelNo=i_ChannelNo;
@@ -1765,7 +1765,7 @@ int i_APCI3200_Read1AnalogInputChannel(s
   | Task              : Read calibration offset  value  of the selected channel|
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : Calibration offset Value   |
@@ -1776,10 +1776,10 @@ int i_APCI3200_Read1AnalogInputChannel(s
   |			                                                         |
   +----------------------------------------------------------------------------+
 */
-int i_APCI3200_ReadCalibrationOffsetValue(struct comedi_device * dev, UINT * data)
+int i_APCI3200_ReadCalibrationOffsetValue(struct comedi_device * dev, unsigned int * data)
 {
-	UINT ui_Temp = 0, ui_EOC = 0;
-	UINT ui_CommandRegister = 0;
+	unsigned int ui_Temp = 0, ui_EOC = 0;
+	unsigned int ui_CommandRegister = 0;
 
 	//BEGIN JK 06.07.04: Management of sevrals boards
 	//while (((inl(devpriv->iobase+i_Offset+12)>>19) & 1) != 1);
@@ -1901,7 +1901,7 @@ int i_APCI3200_ReadCalibrationOffsetValu
   | Task              : Read calibration gain  value  of the selected channel  |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : Calibration gain Value Of Input     |
@@ -1912,9 +1912,9 @@ int i_APCI3200_ReadCalibrationOffsetValu
   |			                                                         |
   +----------------------------------------------------------------------------+
 */
-int i_APCI3200_ReadCalibrationGainValue(struct comedi_device * dev, UINT * data)
+int i_APCI3200_ReadCalibrationGainValue(struct comedi_device * dev, unsigned int * data)
 {
-	UINT ui_EOC = 0;
+	unsigned int ui_EOC = 0;
 	int ui_CommandRegister = 0;
 
 	//while (((inl(devpriv->iobase+i_Offset+12)>>19) & 1) != 1);
@@ -2036,7 +2036,7 @@ int i_APCI3200_ReadCalibrationGainValue(
   | Task              : Read CJC  value  of the selected channel               |
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : CJC Value                           |
@@ -2050,7 +2050,7 @@ int i_APCI3200_ReadCalibrationGainValue(
 
 int i_APCI3200_ReadCJCValue(struct comedi_device * dev, unsigned int * data)
 {
-	UINT ui_EOC = 0;
+	unsigned int ui_EOC = 0;
 	int ui_CommandRegister = 0;
 
   /******************************/
@@ -2156,7 +2156,7 @@ int i_APCI3200_ReadCJCValue(struct comed
   | Task              : Read CJC calibration offset  value  of the selected channel
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : CJC calibration offset Value
@@ -2169,7 +2169,7 @@ int i_APCI3200_ReadCJCValue(struct comed
 */
 int i_APCI3200_ReadCJCCalOffset(struct comedi_device * dev, unsigned int * data)
 {
-	UINT ui_EOC = 0;
+	unsigned int ui_EOC = 0;
 	int ui_CommandRegister = 0;
   /*******************************************/
 	/*Read calibration offset value for the CJC */
@@ -2271,8 +2271,8 @@ int i_APCI3200_ReadCJCCalOffset(struct c
   | Task              : Read CJC calibration gain value
   +----------------------------------------------------------------------------+
   | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-  |                     UINT ui_NoOfChannels    : No Of Channels To read       |
-  |                     UINT *data              : Data Pointer to read status  |
+  |                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+  |                     unsigned int *data              : Data Pointer to read status  |
   +----------------------------------------------------------------------------+
   | Output Parameters :	--													 |
   |			          data[0]  : CJC calibration gain value
@@ -2285,7 +2285,7 @@ int i_APCI3200_ReadCJCCalOffset(struct c
 */
 int i_APCI3200_ReadCJCCalGain(struct comedi_device * dev, unsigned int * data)
 {
-	UINT ui_EOC = 0;
+	unsigned int ui_EOC = 0;
 	int ui_CommandRegister = 0;
   /*******************************/
 	/* Set the convert timing unit */
@@ -2407,7 +2407,7 @@ int i_APCI3200_ReadCJCCalGain(struct com
 int i_APCI3200_InsnBits_AnalogInput_Test(struct comedi_device * dev,
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Configuration = 0;
+	unsigned int ui_Configuration = 0;
 	int i_Temp;		//,i_TimeUnit;
 	//if(i_Initialised==0)
 
@@ -2566,10 +2566,10 @@ int i_APCI3200_CommandTestAnalogInput(st
 
 	int err = 0;
 	int tmp;		// divisor1,divisor2;
-	UINT ui_ConvertTime = 0;
-	UINT ui_ConvertTimeBase = 0;
-	UINT ui_DelayTime = 0;
-	UINT ui_DelayTimeBase = 0;
+	unsigned int ui_ConvertTime = 0;
+	unsigned int ui_ConvertTimeBase = 0;
+	unsigned int ui_DelayTime = 0;
+	unsigned int ui_DelayTimeBase = 0;
 	int i_Triggermode = 0;
 	int i_TriggerEdge = 0;
 	int i_NbrOfChannel = 0;
@@ -2766,7 +2766,7 @@ int i_APCI3200_CommandTestAnalogInput(st
 
 int i_APCI3200_StopCyclicAcquisition(struct comedi_device * dev, struct comedi_subdevice * s)
 {
-	UINT ui_Configuration = 0;
+	unsigned int ui_Configuration = 0;
 	//i_InterruptFlag=0;
 	//i_Initialised=0;
 	//i_Count=0;
@@ -2817,17 +2817,17 @@ int i_APCI3200_StopCyclicAcquisition(str
 int i_APCI3200_CommandAnalogInput(struct comedi_device * dev, struct comedi_subdevice * s)
 {
 	struct comedi_cmd *cmd = &s->async->cmd;
-	UINT ui_Configuration = 0;
+	unsigned int ui_Configuration = 0;
 	//INT  i_CurrentSource = 0;
-	UINT ui_Trigger = 0;
-	UINT ui_TriggerEdge = 0;
-	UINT ui_Triggermode = 0;
-	UINT ui_ScanMode = 0;
-	UINT ui_ConvertTime = 0;
-	UINT ui_ConvertTimeBase = 0;
-	UINT ui_DelayTime = 0;
-	UINT ui_DelayTimeBase = 0;
-	UINT ui_DelayMode = 0;
+	unsigned int ui_Trigger = 0;
+	unsigned int ui_TriggerEdge = 0;
+	unsigned int ui_Triggermode = 0;
+	unsigned int ui_ScanMode = 0;
+	unsigned int ui_ConvertTime = 0;
+	unsigned int ui_ConvertTimeBase = 0;
+	unsigned int ui_DelayTime = 0;
+	unsigned int ui_DelayTimeBase = 0;
+	unsigned int ui_DelayMode = 0;
 	//i_FirstChannel=cmd->chanlist[0];
 	//i_LastChannel=cmd->chanlist[1];
 	s_BoardInfos[dev->minor].i_FirstChannel = cmd->chanlist[0];
@@ -3060,13 +3060,13 @@ int i_APCI3200_Reset(struct comedi_devic
 void v_APCI3200_Interrupt(int irq, void *d)
 {
 	struct comedi_device *dev = d;
-	UINT ui_StatusRegister = 0;
-	UINT ui_ChannelNumber = 0;
+	unsigned int ui_StatusRegister = 0;
+	unsigned int ui_ChannelNumber = 0;
 	int i_CalibrationFlag = 0;
 	int i_CJCFlag = 0;
-	UINT ui_DummyValue = 0;
-	UINT ui_DigitalTemperature = 0;
-	UINT ui_DigitalInput = 0;
+	unsigned int ui_DummyValue = 0;
+	unsigned int ui_DigitalTemperature = 0;
+	unsigned int ui_DigitalInput = 0;
 	int i_ConvertCJCCalibration;
 
 	//BEGIN JK TEST
@@ -3501,7 +3501,7 @@ void v_APCI3200_Interrupt(int irq, void 
 */
 int i_APCI3200_InterruptHandleEos(struct comedi_device * dev)
 {
-	UINT ui_StatusRegister = 0;
+	unsigned int ui_StatusRegister = 0;
 	struct comedi_subdevice *s = dev->subdevices + 0;
 
 	//BEGIN JK 18.10.2004: APCI-3200 Driver update 0.7.57 -> 0.7.68
@@ -3588,13 +3588,13 @@ int i_APCI3200_InterruptHandleEos(struct
 
 			s_BoardInfos[dev->minor].i_Count = -1;
 
-			//async->buf_int_count+=(i_LastChannel-i_FirstChannel+4)*sizeof(UINT);
+			//async->buf_int_count+=(i_LastChannel-i_FirstChannel+4)*sizeof(unsigned int);
 			//Begin JK 18.10.2004: APCI-3200 Driver update 0.7.57 -> 0.7.68
-			//async->buf_int_count+=(s_BoardInfos [dev->minor].i_LastChannel-s_BoardInfos [dev->minor].i_FirstChannel+4)*sizeof(UINT);
+			//async->buf_int_count+=(s_BoardInfos [dev->minor].i_LastChannel-s_BoardInfos [dev->minor].i_FirstChannel+4)*sizeof(unsigned int);
 			//End JK 18.10.2004: APCI-3200 Driver update 0.7.57 -> 0.7.68
-			//async->buf_int_ptr+=(i_LastChannel-i_FirstChannel+4)*sizeof(UINT);
+			//async->buf_int_ptr+=(i_LastChannel-i_FirstChannel+4)*sizeof(unsigned int);
 			//Begin JK 18.10.2004: APCI-3200 Driver update 0.7.57 -> 0.7.68
-			//async->buf_int_ptr+=(s_BoardInfos [dev->minor].i_LastChannel-s_BoardInfos [dev->minor].i_FirstChannel+4)*sizeof(UINT);
+			//async->buf_int_ptr+=(s_BoardInfos [dev->minor].i_LastChannel-s_BoardInfos [dev->minor].i_FirstChannel+4)*sizeof(unsigned int);
 			//comedi_eos(dev,s);
 
 			// Set the event type (Comedi Buffer End Of Scan)
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.h
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.h
@@ -27,8 +27,8 @@ struct {
 	int i_Coupling;
 	int i_SingleDiff;
 	int i_AutoCalibration;
-	UINT ui_ReloadValue;
-	UINT ui_TimeUnitReloadVal;
+	unsigned int ui_ReloadValue;
+	unsigned int ui_TimeUnitReloadVal;
 	int i_Interrupt;
 	int i_ModuleSelection;
 } Config_Parameters_Module1, Config_Parameters_Module2,
@@ -132,11 +132,11 @@ typedef struct {
 	int i_LastChannel;
 	int i_Sum;
 	int i_Offset;
-	UINT ui_Channel_num;
+	unsigned int ui_Channel_num;
 	int i_Count;
 	int i_Initialised;
 	//UINT ui_InterruptChannelValue[96]; //Buffer
-	UINT ui_InterruptChannelValue[144];	//Buffer
+	unsigned int ui_InterruptChannelValue[144];	//Buffer
 	unsigned char b_StructInitialized;
 	//Begin JK 19.10.2004: APCI-3200 Driver update 0.7.57 -> 0.7.68
 	unsigned int ui_ScanValueArray[7 + 12];	// 7 is the maximal number of channels
@@ -179,8 +179,8 @@ int i_APCI3200_Reset(struct comedi_devic
 
 int i_APCI3200_ReadCJCCalOffset(struct comedi_device *dev, unsigned int *data);
 int i_APCI3200_ReadCJCValue(struct comedi_device *dev, unsigned int *data);
-int i_APCI3200_ReadCalibrationGainValue(struct comedi_device *dev, UINT *data);
-int i_APCI3200_ReadCalibrationOffsetValue(struct comedi_device *dev, UINT *data);
+int i_APCI3200_ReadCalibrationGainValue(struct comedi_device *dev, unsigned int *data);
+int i_APCI3200_ReadCalibrationOffsetValue(struct comedi_device *dev, unsigned int *data);
 int i_APCI3200_Read1AnalogInputChannel(struct comedi_device *dev,
 				       struct comedi_subdevice *s, struct comedi_insn *insn,
 				       unsigned int *data);
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3501.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3501.c
@@ -62,8 +62,8 @@ You shoud also find the complete GPL in 
 | Task              : Read  value  of the selected channel or port           |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -76,8 +76,8 @@ You shoud also find the complete GPL in 
 int i_APCI3501_ReadDigitalInput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
 	*data = inl(devpriv->iobase + APCI3501_DIGITAL_IP);
@@ -105,7 +105,7 @@ int i_APCI3501_ReadDigitalInput(struct c
 | Task              : Configures The Digital Output Subdevice.               |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[1]            : 1 Enable  VCC  Interrupt  |
@@ -164,8 +164,8 @@ int i_APCI3501_ConfigDigitalOutput(struc
 int i_APCI3501_WriteDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp, ui_Temp1;
-	UINT ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
+	unsigned int ui_Temp, ui_Temp1;
+	unsigned int ui_NoOfChannel = CR_CHAN(insn->chanspec);	// get the channel
 	if (devpriv->b_OutputMemoryStatus) {
 		ui_Temp = inl(devpriv->iobase + APCI3501_DIGITAL_OP);
 	}			//if(devpriv->b_OutputMemoryStatus )
@@ -238,8 +238,8 @@ int i_APCI3501_WriteDigitalOutput(struct
 | Task              : Read  value  of the selected channel or port           |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev      : Driver handle                |
-|                     UINT ui_NoOfChannels    : No Of Channels To read       |
-|                     UINT *data              : Data Pointer to read status  |
+|                     unsigned int ui_NoOfChannels    : No Of Channels To read       |
+|                     unsigned int *data              : Data Pointer to read status  |
 +----------------------------------------------------------------------------+
 | Output Parameters :	--													 |
 +----------------------------------------------------------------------------+
@@ -251,8 +251,8 @@ int i_APCI3501_WriteDigitalOutput(struct
 int i_APCI3501_ReadDigitalOutput(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	UINT ui_Temp;
-	UINT ui_NoOfChannel;
+	unsigned int ui_Temp;
+	unsigned int ui_NoOfChannel;
 
 	ui_NoOfChannel = CR_CHAN(insn->chanspec);
 	ui_Temp = data[0];
@@ -392,7 +392,7 @@ int i_APCI3501_WriteAnalogOutput(struct 
 | Task              : Configures The Timer , Counter or Watchdog             |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Configure As Timer      |
@@ -495,7 +495,7 @@ int i_APCI3501_ConfigTimerCounterWatchdo
 | Task              : Start / Stop The Selected Timer , Counter or Watchdog  |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Timer                   |
@@ -598,7 +598,7 @@ int i_APCI3501_StartStopWriteTimerCounte
 | Task              : Read The Selected Timer , Counter or Watchdog          |
 +----------------------------------------------------------------------------+
 | Input Parameters  : struct comedi_device *dev : Driver handle                     |
-|                     UINT *data         : Data Pointer contains             |
+|                     unsigned int *data         : Data Pointer contains             |
 |                                          configuration parameters as below |
 |                                                                            |
 |					  data[0]            : 0 Timer                   |
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c
@@ -186,7 +186,7 @@ int i_APCI3XXX_AnalogInputConfigOperatin
 								devpriv->
 									ui_EocEosConversionTime
 									=
-									(UINT)
+									(unsigned int)
 									dw_ReloadValue;
 								devpriv->
 									b_EocEosConversionTimeBase
@@ -635,7 +635,7 @@ void v_APCI3XXX_Interrupt(int irq, void 
 				b_CopyCpt < devpriv->ui_AiNbrofChannels;
 				b_CopyCpt++) {
 				devpriv->ui_AiReadData[b_CopyCpt] =
-					(UINT) readl((void *)(devpriv->
+					(unsigned int) readl((void *)(devpriv->
 						dw_AiBase + 28));
 			}
 
