From jrm8005@gmail.com  Tue Apr 21 15:14:54 2009
From: "J.R. Mauro" <jrm8005@gmail.com>
Date: Sat, 28 Mar 2009 00:10:35 -0400
Subject: Staging: rspiusb: make driver compile
To: Greg Kroah-Hartman <gregkh@suse.de>
Cc: judd@jpilot.org, jeff.frontz@gmail.com
Message-ID: <20090328041035.GB28916@tuxbookpro.rit.edu>
Content-Disposition: inline


Convert undefined info() function calls to dev_err, making rspiusb compile

Signed-off-by: J.R. Mauro <jrm8005@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/rspiusb/rspiusb.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

--- a/drivers/staging/rspiusb/rspiusb.c
+++ b/drivers/staging/rspiusb/rspiusb.c
@@ -217,7 +217,7 @@ static int piusb_ioctl(struct inode *ino
 	case PIUSB_GETVNDCMD:
 		if (copy_from_user
 		    (&ctrl, (void __user *)arg, sizeof(struct ioctl_struct)))
-			info("copy_from_user failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user failed\n");
 		dbg("%s %x\n", "Get Vendor Command = ", ctrl.cmd);
 		retval =
 		    usb_control_msg(pdx->udev, usb_rcvctrlpipe(pdx->udev, 0),
@@ -231,7 +231,7 @@ static int piusb_ioctl(struct inode *ino
 	case PIUSB_SETVNDCMD:
 		if (copy_from_user
 		    (&ctrl, (void __user *)arg, sizeof(struct ioctl_struct)))
-			info("copy_from_user failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user failed\n");
 //            dbg( "%s %x", "Set Vendor Command = ",ctrl.cmd );
 		controlData = ctrl.pData[0];
 		controlData |= (ctrl.pData[1] << 8);
@@ -247,7 +247,7 @@ static int piusb_ioctl(struct inode *ino
 		break;
 	case PIUSB_WRITEPIPE:
 		if (copy_from_user(&ctrl, (void __user *)arg, _IOC_SIZE(cmd)))
-			info("copy_from_user WRITE_DUMMY failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user WRITE_DUMMY failed\n");
 		if (!access_ok(VERIFY_READ, ctrl.pData, ctrl.numbytes)) {
 			dbg("can't access pData");
 			return 0;
@@ -258,7 +258,7 @@ static int piusb_ioctl(struct inode *ino
 	case PIUSB_USERBUFFER:
 		if (copy_from_user
 		    (&ctrl, (void __user *)arg, sizeof(struct ioctl_struct)))
-			info("copy_from_user failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user failed\n");
 		return MapUserBuffer((struct ioctl_struct *) & ctrl, pdx);
 		break;
 	case PIUSB_UNMAP_USERBUFFER:
@@ -268,7 +268,7 @@ static int piusb_ioctl(struct inode *ino
 	case PIUSB_READPIPE:
 		if (copy_from_user
 		    (&ctrl, (void __user *)arg, sizeof(struct ioctl_struct)))
-			info("copy_from_user failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user failed\n");
 		switch (ctrl.endpoint) {
 		case 0:	//ST133 Pixel Data or PIXIS IO
 			if (pdx->iama == PIXIS_PID) {
@@ -387,7 +387,7 @@ static int piusb_ioctl(struct inode *ino
 		dbg("PIUSB_SETFRAMESIZE");
 		if (copy_from_user
 		    (&ctrl, (void __user *)arg, sizeof(struct ioctl_struct)))
-			info("copy_from_user failed\n");
+			dev_err(&pdx->udev->dev, "copy_from_user failed\n");
 		pdx->frameSize = ctrl.numbytes;
 		pdx->num_frames = ctrl.numFrames;
 		if (!pdx->sgl)
@@ -449,7 +449,7 @@ int piusb_output(struct ioctl_struct * i
 		    usb_buffer_alloc(pdx->udev, len, GFP_KERNEL,
 				     &urb->transfer_dma);
 		if (!kbuf) {
-			info("buffer_alloc failed\n");
+			dev_err(&pdx->udev->dev, "buffer_alloc failed\n");
 			return -ENOMEM;
 		}
 		memcpy(kbuf, uBuf, len);
