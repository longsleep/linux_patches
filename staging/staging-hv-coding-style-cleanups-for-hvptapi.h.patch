From foo@baz Thu Aug 20 12:09:34 PDT 2009
Date: Thu, 20 Aug 2009 12:09:34 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: hv: coding style cleanups for HvPtApi.h

Fix up the typedefs in there as well.

Cc: Hank Janssen <hjanssen@microsoft.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/hv/Hv.c              |    4 -
 drivers/staging/hv/include/HvPtApi.h |  103 +++++++++++++++--------------------
 2 files changed, 49 insertions(+), 58 deletions(-)

--- a/drivers/staging/hv/Hv.c
+++ b/drivers/staging/hv/Hv.c
@@ -230,7 +230,7 @@ int HvInit (void)
 {
 	int ret=0;
     int maxLeaf;
-	HV_X64_MSR_HYPERCALL_CONTENTS hypercallMsr;
+	union hv_x64_msr_hypercall_contents hypercallMsr;
 	void *virtAddr = NULL;
 
 	DPRINT_ENTER(VMBUS);
@@ -347,7 +347,7 @@ Description:
 --*/
 void HvCleanup (void)
 {
-	HV_X64_MSR_HYPERCALL_CONTENTS hypercallMsr;
+	union hv_x64_msr_hypercall_contents hypercallMsr;
 
 	DPRINT_ENTER(VMBUS);
 
--- a/drivers/staging/hv/include/HvPtApi.h
+++ b/drivers/staging/hv/include/HvPtApi.h
@@ -21,66 +21,57 @@
  *
  */
 
+#ifndef __HVVPTPI_H
+#define __HVVPTPI_H
 
-#pragma once
+/*
+ * Versioning definitions used for guests reporting themselves to the
+ * hypervisor, and visa versa.
+ */
 
+/* Version info reported by guest OS's */
+enum hv_guest_os_vendor {
+	HvGuestOsVendorMicrosoft	= 0x0001
+};
+
+enum hv_guest_os_microsoft_ids {
+	HvGuestOsMicrosoftUndefined	= 0x00,
+	HvGuestOsMicrosoftMSDOS		= 0x01,
+	HvGuestOsMicrosoftWindows3x	= 0x02,
+	HvGuestOsMicrosoftWindows9x	= 0x03,
+	HvGuestOsMicrosoftWindowsNT	= 0x04,
+	HvGuestOsMicrosoftWindowsCE	= 0x05
+};
 
-/* Versioning definitions used for guests reporting themselves to the */
-/* hypervisor, and visa versa. */
-/* ================================================================== */
+/*
+ * Declare the MSR used to identify the guest OS.
+ */
+#define HV_X64_MSR_GUEST_OS_ID	0x40000000
 
+union hv_x64_msr_guest_os_id_contents {
+	u64 AsUINT64;
+	struct {
+		u64 BuildNumber:16;
+		u64 ServiceVersion:8; /* Service Pack, etc. */
+		u64 MinorVersion:8;
+		u64 MajorVersion:8;
+		u64 OsId:8; /* enum hv_guest_os_microsoft_ids (if Vendor=MS) */
+		u64 VendorId:16; /* enum hv_guest_os_vendor */
+	};
+};
 
+/*
+ * Declare the MSR used to setup pages used to communicate with the hypervisor.
+ */
+#define HV_X64_MSR_HYPERCALL	0x40000001
 
-/* Version info reported by guest OS's */
+union hv_x64_msr_hypercall_contents {
+	u64 AsUINT64;
+	struct {
+		u64 Enable:1;
+		u64 Reserved:11;
+		u64 GuestPhysicalAddress:52;
+	};
+};
 
-typedef enum _HV_GUEST_OS_VENDOR
-{
-    HvGuestOsVendorMicrosoft        = 0x0001
-
-} HV_GUEST_OS_VENDOR, *PHV_GUEST_OS_VENDOR;
-
-typedef enum _HV_GUEST_OS_MICROSOFT_IDS
-{
-    HvGuestOsMicrosoftUndefined     = 0x00,
-    HvGuestOsMicrosoftMSDOS         = 0x01,
-    HvGuestOsMicrosoftWindows3x     = 0x02,
-    HvGuestOsMicrosoftWindows9x     = 0x03,
-    HvGuestOsMicrosoftWindowsNT     = 0x04,
-    HvGuestOsMicrosoftWindowsCE     = 0x05
-
-} HV_GUEST_OS_MICROSOFT_IDS, *PHV_GUEST_OS_MICROSOFT_IDS;
-
-
-/* Declare the MSR used to identify the guest OS. */
-
-#define HV_X64_MSR_GUEST_OS_ID 0x40000000
-
-typedef union _HV_X64_MSR_GUEST_OS_ID_CONTENTS
-{
-    u64 AsUINT64;
-    struct
-    {
-        u64 BuildNumber    : 16;
-        u64 ServiceVersion : 8; /* Service Pack, etc. */
-        u64 MinorVersion   : 8;
-        u64 MajorVersion   : 8;
-        u64 OsId           : 8; /* HV_GUEST_OS_MICROSOFT_IDS (If Vendor=MS) */
-        u64 VendorId       : 16; /* HV_GUEST_OS_VENDOR */
-    };
-} HV_X64_MSR_GUEST_OS_ID_CONTENTS, *PHV_X64_MSR_GUEST_OS_ID_CONTENTS;
-
-
-/* Declare the MSR used to setup pages used to communicate with the hypervisor. */
-
-#define HV_X64_MSR_HYPERCALL 0x40000001
-
-typedef union _HV_X64_MSR_HYPERCALL_CONTENTS
-{
-    u64 AsUINT64;
-    struct
-    {
-        u64 Enable               : 1;
-        u64 Reserved             : 11;
-        u64 GuestPhysicalAddress : 52;
-    };
-} HV_X64_MSR_HYPERCALL_CONTENTS, *PHV_X64_MSR_HYPERCALL_CONTENTS;
+#endif
