From 6a7187c4ff898beb2ad46c7e240a21a379e8555a Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@suse.de>
Date: Mon, 23 Mar 2009 12:43:05 -0700
Subject: [PATCH] Staging: epl: remove QWORD

It's u64 in kernelspace, not QWORD.

Cc: Daniel Krueger <daniel.krueger@systec-electronic.com>
Cc: Ronald Sieber <Ronald.Sieber@systec-electronic.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/epl/Epl.h      |    2 -
 drivers/staging/epl/EplAmi.h   |   38 +++++++++++++++----------------
 drivers/staging/epl/EplDll.h   |    2 -
 drivers/staging/epl/EplFrame.h |    6 ++--
 drivers/staging/epl/EplObd.c   |   38 +++++++++++++++----------------
 drivers/staging/epl/EplObd.h   |   22 +++++++++---------
 drivers/staging/epl/EplPdok.c  |    6 ++--
 drivers/staging/epl/EplPdou.c  |   14 +++++------
 drivers/staging/epl/amix86.c   |   50 ++++++++++++++++++++---------------------
 drivers/staging/epl/global.h   |    4 ---
 10 files changed, 89 insertions(+), 93 deletions(-)

--- a/drivers/staging/epl/amix86.c
+++ b/drivers/staging/epl/amix86.c
@@ -89,7 +89,7 @@ typedef struct {
 } tdwStruct;
 
 typedef struct {
-	QWORD m_qwQword;
+	u64 m_qwQword;
 
 } tqwStruct;
 
@@ -415,7 +415,7 @@ DWORD AmiGetDword24FromLe(void *pAddr_p)
 // State:       not tested
 //
 //---------------------------------------------------------------------------
-void AmiSetQword64ToBe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword64ToBe(void *pAddr_p, u64 qwQwordVal_p)
 {
 	((u8 *) pAddr_p)[0] = ((u8 *) & qwQwordVal_p)[7];
 	((u8 *) pAddr_p)[1] = ((u8 *) & qwQwordVal_p)[6];
@@ -441,11 +441,11 @@ void AmiSetQword64ToBe(void *pAddr_p, QW
 // State:       not tested
 //
 //---------------------------------------------------------------------------
-void AmiSetQword64ToLe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword64ToLe(void *pAddr_p, u64 qwQwordVal_p)
 {
-	QWORD *pqwDst;
+	u64 *pqwDst;
 
-	pqwDst = (QWORD *) pAddr_p;
+	pqwDst = (u64 *) pAddr_p;
 	*pqwDst = qwQwordVal_p;
 }
 
@@ -462,7 +462,7 @@ void AmiSetQword64ToLe(void *pAddr_p, QW
 // State:       not tested
 //
 //---------------------------------------------------------------------------
-QWORD AmiGetQword64FromBe(void *pAddr_p)
+u64 AmiGetQword64FromBe(void *pAddr_p)
 {
 	tqwStruct qwStruct;
 
@@ -491,7 +491,7 @@ QWORD AmiGetQword64FromBe(void *pAddr_p)
 // State:       not tested
 //
 //---------------------------------------------------------------------------
-QWORD AmiGetQword64FromLe(void *pAddr_p)
+u64 AmiGetQword64FromLe(void *pAddr_p)
 {
 	tqwStruct *pqwStruct;
 	tqwStruct qwStruct;
@@ -517,7 +517,7 @@ QWORD AmiGetQword64FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword40ToBe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword40ToBe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((u8 *) pAddr_p)[0] = ((u8 *) & qwQwordVal_p)[4];
@@ -543,7 +543,7 @@ void AmiSetQword40ToBe(void *pAddr_p, QW
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword40ToLe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword40ToLe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((DWORD *) pAddr_p)[0] = ((DWORD *) & qwQwordVal_p)[0];
@@ -559,13 +559,13 @@ void AmiSetQword40ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword40FromBe(void *pAddr_p)
+u64 AmiGetQword40FromBe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
@@ -585,13 +585,13 @@ QWORD AmiGetQword40FromBe(void *pAddr_p)
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword40FromLe(void *pAddr_p)
+u64 AmiGetQword40FromLe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
@@ -618,7 +618,7 @@ QWORD AmiGetQword40FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword48ToBe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword48ToBe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((u8 *) pAddr_p)[0] = ((u8 *) & qwQwordVal_p)[5];
@@ -645,7 +645,7 @@ void AmiSetQword48ToBe(void *pAddr_p, QW
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword48ToLe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword48ToLe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((DWORD *) pAddr_p)[0] = ((DWORD *) & qwQwordVal_p)[0];
@@ -661,13 +661,13 @@ void AmiSetQword48ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword48FromBe(void *pAddr_p)
+u64 AmiGetQword48FromBe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
@@ -687,13 +687,13 @@ QWORD AmiGetQword48FromBe(void *pAddr_p)
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword48FromLe(void *pAddr_p)
+u64 AmiGetQword48FromLe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
@@ -720,7 +720,7 @@ QWORD AmiGetQword48FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword56ToBe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword56ToBe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((u8 *) pAddr_p)[0] = ((u8 *) & qwQwordVal_p)[6];
@@ -748,7 +748,7 @@ void AmiSetQword56ToBe(void *pAddr_p, QW
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword56ToLe(void *pAddr_p, QWORD qwQwordVal_p)
+void AmiSetQword56ToLe(void *pAddr_p, u64 qwQwordVal_p)
 {
 
 	((DWORD *) pAddr_p)[0] = ((DWORD *) & qwQwordVal_p)[0];
@@ -765,13 +765,13 @@ void AmiSetQword56ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword56FromBe(void *pAddr_p)
+u64 AmiGetQword56FromBe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
@@ -791,13 +791,13 @@ QWORD AmiGetQword56FromBe(void *pAddr_p)
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 // State:       not tested
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword56FromLe(void *pAddr_p)
+u64 AmiGetQword56FromLe(void *pAddr_p)
 {
 
 	tqwStruct qwStruct;
--- a/drivers/staging/epl/EplAmi.h
+++ b/drivers/staging/epl/EplAmi.h
@@ -177,8 +177,8 @@ DWORD AmiGetDword24FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword40ToBe(void *pAddr_p, QWORD qwQwordVal_p);
-void AmiSetQword40ToLe(void *pAddr_p, QWORD qwQwordVal_p);
+void AmiSetQword40ToBe(void *pAddr_p, u64 qwQwordVal_p);
+void AmiSetQword40ToLe(void *pAddr_p, u64 qwQwordVal_p);
 
 //---------------------------------------------------------------------------
 //
@@ -188,12 +188,12 @@ void AmiSetQword40ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword40FromBe(void *pAddr_p);
-QWORD AmiGetQword40FromLe(void *pAddr_p);
+u64 AmiGetQword40FromBe(void *pAddr_p);
+u64 AmiGetQword40FromLe(void *pAddr_p);
 
 //---------------------------------------------------------------------------
 //
@@ -208,8 +208,8 @@ QWORD AmiGetQword40FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword48ToBe(void *pAddr_p, QWORD qwQwordVal_p);
-void AmiSetQword48ToLe(void *pAddr_p, QWORD qwQwordVal_p);
+void AmiSetQword48ToBe(void *pAddr_p, u64 qwQwordVal_p);
+void AmiSetQword48ToLe(void *pAddr_p, u64 qwQwordVal_p);
 
 //---------------------------------------------------------------------------
 //
@@ -219,12 +219,12 @@ void AmiSetQword48ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword48FromBe(void *pAddr_p);
-QWORD AmiGetQword48FromLe(void *pAddr_p);
+u64 AmiGetQword48FromBe(void *pAddr_p);
+u64 AmiGetQword48FromLe(void *pAddr_p);
 
 //---------------------------------------------------------------------------
 //
@@ -239,8 +239,8 @@ QWORD AmiGetQword48FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword56ToBe(void *pAddr_p, QWORD qwQwordVal_p);
-void AmiSetQword56ToLe(void *pAddr_p, QWORD qwQwordVal_p);
+void AmiSetQword56ToBe(void *pAddr_p, u64 qwQwordVal_p);
+void AmiSetQword56ToLe(void *pAddr_p, u64 qwQwordVal_p);
 
 //---------------------------------------------------------------------------
 //
@@ -250,12 +250,12 @@ void AmiSetQword56ToLe(void *pAddr_p, QW
 //
 // Parameters:  pAddr_p         = pointer to source buffer
 //
-// Return:      QWORD
+// Return:      u64
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword56FromBe(void *pAddr_p);
-QWORD AmiGetQword56FromLe(void *pAddr_p);
+u64 AmiGetQword56FromBe(void *pAddr_p);
+u64 AmiGetQword56FromLe(void *pAddr_p);
 
 //---------------------------------------------------------------------------
 //
@@ -270,8 +270,8 @@ QWORD AmiGetQword56FromLe(void *pAddr_p)
 //
 //---------------------------------------------------------------------------
 
-void AmiSetQword64ToBe(void *pAddr_p, QWORD qwQwordVal_p);
-void AmiSetQword64ToLe(void *pAddr_p, QWORD qwQwordVal_p);
+void AmiSetQword64ToBe(void *pAddr_p, u64 qwQwordVal_p);
+void AmiSetQword64ToLe(void *pAddr_p, u64 qwQwordVal_p);
 
 //---------------------------------------------------------------------------
 //
@@ -285,8 +285,8 @@ void AmiSetQword64ToLe(void *pAddr_p, QW
 //
 //---------------------------------------------------------------------------
 
-QWORD AmiGetQword64FromBe(void *pAddr_p);
-QWORD AmiGetQword64FromLe(void *pAddr_p);
+u64 AmiGetQword64FromBe(void *pAddr_p);
+u64 AmiGetQword64FromLe(void *pAddr_p);
 
 //---------------------------------------------------------------------------
 //
--- a/drivers/staging/epl/EplDll.h
+++ b/drivers/staging/epl/EplDll.h
@@ -177,7 +177,7 @@ typedef struct {
 	DWORD m_dwProductCode;	// NMT_IdentityObject_REC.ProductCode_U32
 	DWORD m_dwRevisionNumber;	// NMT_IdentityObject_REC.RevisionNo_U32
 	DWORD m_dwSerialNumber;	// NMT_IdentityObject_REC.SerialNo_U32
-	QWORD m_qwVendorSpecificExt1;
+	u64 m_qwVendorSpecificExt1;
 	DWORD m_dwVerifyConfigurationDate;	// CFM_VerifyConfiguration_REC.ConfDate_U32
 	DWORD m_dwVerifyConfigurationTime;	// CFM_VerifyConfiguration_REC.ConfTime_U32
 	DWORD m_dwApplicationSwDate;	// PDL_LocVerApplSw_REC.ApplSwDate_U32 on programmable device or date portion of NMT_ManufactSwVers_VS on non-programmable device
--- a/drivers/staging/epl/EplFrame.h
+++ b/drivers/staging/epl/EplFrame.h
@@ -130,7 +130,7 @@ typedef struct {
 	// Offset 20
 	tEplNetTime m_le_NetTime;	// supported if D_NMT_NetTimeIsRealTime_BOOL is set
 	// Offset 28
-	QWORD m_le_RelativeTime;	// in us (supported if D_NMT_RelativeTime_BOOL is set)
+	u64 m_le_RelativeTime;	// in us (supported if D_NMT_RelativeTime_BOOL is set)
 
 } PACK_STRUCT tEplSocFrame;
 
@@ -201,7 +201,7 @@ typedef struct {
 	u8 m_le_bFlag2;	// Flags: PR, RS
 	u8 m_le_bNmtStatus;	// NMT state
 	u8 m_le_bRes1[3];
-	QWORD m_le_qwStaticError;	// static error bit field
+	u64 m_le_qwStaticError;	// static error bit field
 	tEplErrHistoryEntry m_le_aErrHistoryEntry[14];
 
 } PACK_STRUCT tEplStatusResponse;
@@ -225,7 +225,7 @@ typedef struct {
 	DWORD m_le_dwProductCode;	// NMT_IdentityObject_REC.ProductCode_U32
 	DWORD m_le_dwRevisionNumber;	// NMT_IdentityObject_REC.RevisionNo_U32
 	DWORD m_le_dwSerialNumber;	// NMT_IdentityObject_REC.SerialNo_U32
-	QWORD m_le_qwVendorSpecificExt1;
+	u64 m_le_qwVendorSpecificExt1;
 	DWORD m_le_dwVerifyConfigurationDate;	// CFM_VerifyConfiguration_REC.ConfDate_U32
 	DWORD m_le_dwVerifyConfigurationTime;	// CFM_VerifyConfiguration_REC.ConfTime_U32
 	DWORD m_le_dwApplicationSwDate;	// PDL_LocVerApplSw_REC.ApplSwDate_U32 on programmable device or date portion of NMT_ManufactSwVers_VS on non-programmable device
--- a/drivers/staging/epl/Epl.h
+++ b/drivers/staging/epl/Epl.h
@@ -181,7 +181,7 @@ typedef struct {
 	DWORD m_dwProductCode;	// NMT_IdentityObject_REC.ProductCode_U32
 	DWORD m_dwRevisionNumber;	// NMT_IdentityObject_REC.RevisionNo_U32
 	DWORD m_dwSerialNumber;	// NMT_IdentityObject_REC.SerialNo_U32
-	QWORD m_qwVendorSpecificExt1;
+	u64 m_qwVendorSpecificExt1;
 	DWORD m_dwVerifyConfigurationDate;	// CFM_VerifyConfiguration_REC.ConfDate_U32
 	DWORD m_dwVerifyConfigurationTime;	// CFM_VerifyConfiguration_REC.ConfTime_U32
 	DWORD m_dwApplicationSwDate;	// PDL_LocVerApplSw_REC.ApplSwDate_U32 on programmable device or date portion of NMT_ManufactSwVers_VS on non-programmable device
--- a/drivers/staging/epl/EplObd.c
+++ b/drivers/staging/epl/EplObd.c
@@ -1105,7 +1105,7 @@ EPLDLLEXPORT tEplKernel EplObdReadEntryT
 	case kEplObdTypInt40:
 	case kEplObdTypUInt40:
 		{
-			AmiSetQword40ToLe(pDstData_p, *((QWORD *) pSrcData));
+			AmiSetQword40ToLe(pDstData_p, *((u64 *) pSrcData));
 			break;
 		}
 
@@ -1113,7 +1113,7 @@ EPLDLLEXPORT tEplKernel EplObdReadEntryT
 	case kEplObdTypInt48:
 	case kEplObdTypUInt48:
 		{
-			AmiSetQword48ToLe(pDstData_p, *((QWORD *) pSrcData));
+			AmiSetQword48ToLe(pDstData_p, *((u64 *) pSrcData));
 			break;
 		}
 
@@ -1121,7 +1121,7 @@ EPLDLLEXPORT tEplKernel EplObdReadEntryT
 	case kEplObdTypInt56:
 	case kEplObdTypUInt56:
 		{
-			AmiSetQword56ToLe(pDstData_p, *((QWORD *) pSrcData));
+			AmiSetQword56ToLe(pDstData_p, *((u64 *) pSrcData));
 			break;
 		}
 
@@ -1130,7 +1130,7 @@ EPLDLLEXPORT tEplKernel EplObdReadEntryT
 	case kEplObdTypUInt64:
 	case kEplObdTypReal64:
 		{
-			AmiSetQword64ToLe(pDstData_p, *((QWORD *) pSrcData));
+			AmiSetQword64ToLe(pDstData_p, *((u64 *) pSrcData));
 			break;
 		}
 
@@ -1191,7 +1191,7 @@ EPLDLLEXPORT tEplKernel EplObdWriteEntry
 	tEplObdCbParam CbParam;
 	void *pDstData;
 	tEplObdSize ObdSize;
-	QWORD qwBuffer;
+	u64 qwBuffer;
 	void *pBuffer = &qwBuffer;
 
 	Ret = EplObdWriteEntryPre(EPL_MCO_INSTANCE_PTR_
@@ -1255,7 +1255,7 @@ EPLDLLEXPORT tEplKernel EplObdWriteEntry
 	case kEplObdTypInt40:
 	case kEplObdTypUInt40:
 		{
-			*((QWORD *) pBuffer) = AmiGetQword40FromLe(pSrcData_p);
+			*((u64 *) pBuffer) = AmiGetQword40FromLe(pSrcData_p);
 			break;
 		}
 
@@ -1263,7 +1263,7 @@ EPLDLLEXPORT tEplKernel EplObdWriteEntry
 	case kEplObdTypInt48:
 	case kEplObdTypUInt48:
 		{
-			*((QWORD *) pBuffer) = AmiGetQword48FromLe(pSrcData_p);
+			*((u64 *) pBuffer) = AmiGetQword48FromLe(pSrcData_p);
 			break;
 		}
 
@@ -1271,7 +1271,7 @@ EPLDLLEXPORT tEplKernel EplObdWriteEntry
 	case kEplObdTypInt56:
 	case kEplObdTypUInt56:
 		{
-			*((QWORD *) pBuffer) = AmiGetQword56FromLe(pSrcData_p);
+			*((u64 *) pBuffer) = AmiGetQword56FromLe(pSrcData_p);
 			break;
 		}
 
@@ -1280,7 +1280,7 @@ EPLDLLEXPORT tEplKernel EplObdWriteEntry
 	case kEplObdTypUInt64:
 	case kEplObdTypReal64:
 		{
-			*((QWORD *) pBuffer) = AmiGetQword64FromLe(pSrcData_p);
+			*((u64 *) pBuffer) = AmiGetQword64FromLe(pSrcData_p);
 			break;
 		}
 
@@ -1740,18 +1740,18 @@ static tEplKernel EplObdCheckObjectRange
 	case kEplObdTypInt64:
 
 		// switch to lower limit
-		pRangeData = ((signed QWORD *)pRangeData) + 1;
+		pRangeData = ((signed u64 *)pRangeData) + 1;
 
 		// check if value is to low
-		if (*((signed QWORD *)pData_p) < *((signed QWORD *)pRangeData)) {
+		if (*((signed u64 *)pData_p) < *((signed u64 *)pRangeData)) {
 			Ret = kEplObdValueTooLow;
 			break;
 		}
 		// switch to higher limit
-		pRangeData = ((signed QWORD *)pRangeData) + 1;
+		pRangeData = ((signed u64 *)pRangeData) + 1;
 
 		// check if value is to high
-		if (*((signed QWORD *)pData_p) > *((signed QWORD *)pRangeData)) {
+		if (*((signed u64 *)pData_p) > *((signed u64 *)pRangeData)) {
 			Ret = kEplObdValueTooHigh;
 		}
 
@@ -1764,20 +1764,20 @@ static tEplKernel EplObdCheckObjectRange
 	case kEplObdTypUInt64:
 
 		// switch to lower limit
-		pRangeData = ((unsigned QWORD *)pRangeData) + 1;
+		pRangeData = ((unsigned u64 *)pRangeData) + 1;
 
 		// check if value is to low
-		if (*((unsigned QWORD *)pData_p) <
-		    *((unsigned QWORD *)pRangeData)) {
+		if (*((unsigned u64 *)pData_p) <
+		    *((unsigned u64 *)pRangeData)) {
 			Ret = kEplObdValueTooLow;
 			break;
 		}
 		// switch to higher limit
-		pRangeData = ((unsigned QWORD *)pRangeData) + 1;
+		pRangeData = ((unsigned u64 *)pRangeData) + 1;
 
 		// check if value is to high
-		if (*((unsigned QWORD *)pData_p) >
-		    *((unsigned QWORD *)pRangeData)) {
+		if (*((unsigned u64 *)pData_p) >
+		    *((unsigned u64 *)pRangeData)) {
 			Ret = kEplObdValueTooHigh;
 		}
 
--- a/drivers/staging/epl/EplObd.h
+++ b/drivers/staging/epl/EplObd.h
@@ -68,11 +68,11 @@
 
 ****************************************************************************/
 
-#include "EplInc.h"
-
 #ifndef _EPLOBD_H_
 #define _EPLOBD_H_
 
+#include "EplInc.h"
+
 // ============================================================================
 // defines
 // ============================================================================
@@ -255,15 +255,15 @@ typedef unsigned char tEplObdDomain;	// 
 typedef signed long tEplObdInteger24;	// 0010
 typedef unsigned long tEplObdUnsigned24;	// 0016
 
-typedef signed QWORD tEplObdInteger40;	// 0012
-typedef signed QWORD tEplObdInteger48;	// 0013
-typedef signed QWORD tEplObdInteger56;	// 0014
-typedef signed QWORD tEplObdInteger64;	// 0015
-
-typedef unsigned QWORD tEplObdUnsigned40;	// 0018
-typedef unsigned QWORD tEplObdUnsigned48;	// 0019
-typedef unsigned QWORD tEplObdUnsigned56;	// 001A
-typedef unsigned QWORD tEplObdUnsigned64;	// 001B
+typedef s64 tEplObdInteger40;	// 0012
+typedef s64 tEplObdInteger48;	// 0013
+typedef s64 tEplObdInteger56;	// 0014
+typedef s64 tEplObdInteger64;	// 0015
+
+typedef u64 tEplObdUnsigned40;	// 0018
+typedef u64 tEplObdUnsigned48;	// 0019
+typedef u64 tEplObdUnsigned56;	// 001A
+typedef u64 tEplObdUnsigned64;	// 001B
 
 typedef double tEplObdReal64;	// 0011
 
--- a/drivers/staging/epl/EplPdok.c
+++ b/drivers/staging/epl/EplPdok.c
@@ -318,7 +318,7 @@ tEplKernel EplPdokProcess(tEplEvent * pE
 	WORD wBitOffset;
 	WORD wBitSize;
 	WORD wVarSize;
-	QWORD qwObjectMapping;
+	u64 qwObjectMapping;
 	u8 bMappSubindex;
 	u8 bObdSubindex;
 	WORD wObdMappIndex;
@@ -423,7 +423,7 @@ tEplKernel EplPdokProcess(tEplEvent * pE
 			// process mapping
 			for (bMappSubindex = 1; bMappSubindex <= bObjectCount;
 			     bMappSubindex++) {
-				ObdSize = 8;	// QWORD
+				ObdSize = 8;	// u64
 				// read object mapping from OD
 				Ret =
 				    EplObdReadEntry(wObdMappIndex,
@@ -553,7 +553,7 @@ tEplKernel EplPdokProcess(tEplEvent * pE
 			// process mapping
 			for (bMappSubindex = 1; bMappSubindex <= bObjectCount;
 			     bMappSubindex++) {
-				ObdSize = 8;	// QWORD
+				ObdSize = 8;	// u64
 				// read object mapping from OD
 				Ret =
 				    EplObdReadEntry(wObdMappIndex,
--- a/drivers/staging/epl/EplPdou.c
+++ b/drivers/staging/epl/EplPdou.c
@@ -152,13 +152,13 @@
 static tEplKernel EplPdouCheckPdoValidity(tEplObdCbParam *pParam_p,
 					  unsigned int uiIndex_p);
 
-static void EplPdouDecodeObjectMapping(QWORD qwObjectMapping_p,
+static void EplPdouDecodeObjectMapping(u64 qwObjectMapping_p,
 				       unsigned int *puiIndex_p,
 				       unsigned int *puiSubIndex_p,
 				       unsigned int *puiBitOffset_p,
 				       unsigned int *puiBitSize_p);
 
-static tEplKernel EplPdouCheckObjectMapping(QWORD qwObjectMapping_p,
+static tEplKernel EplPdouCheckObjectMapping(u64 qwObjectMapping_p,
 					    tEplObdAccess AccessType_p,
 					    DWORD * pdwAbortCode_p,
 					    unsigned int *puiPdoSize_p);
@@ -233,7 +233,7 @@ tEplKernel EplPdouCbObdAccess(tEplObdCbP
 	unsigned int uiIndexType;
 	tEplObdSize ObdSize;
 	u8 bObjectCount;
-	QWORD qwObjectMapping;
+	u64 qwObjectMapping;
 	tEplObdAccess AccessType;
 	u8 bMappSubindex;
 	unsigned int uiCurPdoSize;
@@ -326,7 +326,7 @@ tEplKernel EplPdouCbObdAccess(tEplObdCbP
 		for (bMappSubindex = 1; bMappSubindex <= bObjectCount;
 		     bMappSubindex++) {
 			// read object mapping from OD
-			ObdSize = sizeof(qwObjectMapping);	// QWORD
+			ObdSize = sizeof(qwObjectMapping);	// u64
 			Ret = EplObduReadEntry(pParam_p->m_uiIndex,
 					       bMappSubindex, &qwObjectMapping,
 					       &ObdSize);
@@ -360,7 +360,7 @@ tEplKernel EplPdouCbObdAccess(tEplObdCbP
 		}
 		// check existence of object and validity of object length
 
-		qwObjectMapping = *((QWORD *) pParam_p->m_pArg);
+		qwObjectMapping = *((u64 *) pParam_p->m_pArg);
 
 		Ret = EplPdouCheckObjectMapping(qwObjectMapping,
 						AccessType,
@@ -439,7 +439,7 @@ static tEplKernel EplPdouCheckPdoValidit
 //
 //---------------------------------------------------------------------------
 
-static void EplPdouDecodeObjectMapping(QWORD qwObjectMapping_p,
+static void EplPdouDecodeObjectMapping(u64 qwObjectMapping_p,
 				       unsigned int *puiIndex_p,
 				       unsigned int *puiSubIndex_p,
 				       unsigned int *puiBitOffset_p,
@@ -480,7 +480,7 @@ static void EplPdouDecodeObjectMapping(Q
 //
 //---------------------------------------------------------------------------
 
-static tEplKernel EplPdouCheckObjectMapping(QWORD qwObjectMapping_p,
+static tEplKernel EplPdouCheckObjectMapping(u64 qwObjectMapping_p,
 					    tEplObdAccess AccessType_p,
 					    DWORD * pdwAbortCode_p,
 					    unsigned int *puiPdoSize_p)
--- a/drivers/staging/epl/global.h
+++ b/drivers/staging/epl/global.h
@@ -23,10 +23,6 @@
 #define _GLOBAL_H_
 
 
-#ifndef QWORD
-#define QWORD long long int
-#endif
-
 #define TRACE  printk
 
 // --- logic types ---
