From jmm@debian.org  Thu Feb 12 11:41:51 2009
From: Moritz Muehlenhoff <jmm@debian.org>
Date: Mon,  9 Feb 2009 19:33:41 +0100
Subject: Staging: wlan-ng: Remove more dead code from hfa384x_usb.c
To: greg@kroah.com
Cc: Moritz Muehlenhoff <jmm@debian.org>
Message-ID: <1234204424-4207-2-git-send-email-jmm@debian.org>


Signed-off-by: Moritz Muehlenhoff <jmm@debian.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/wlan-ng/hfa384x.h     |    7 --
 drivers/staging/wlan-ng/hfa384x_usb.c |   87 ----------------------------------
 2 files changed, 94 deletions(-)

--- a/drivers/staging/wlan-ng/hfa384x.h
+++ b/drivers/staging/wlan-ng/hfa384x.h
@@ -1132,7 +1132,6 @@ int hfa384x_drvr_flashdl_enable(hfa384x_
 int hfa384x_drvr_flashdl_disable(hfa384x_t *hw);
 int hfa384x_drvr_flashdl_write(hfa384x_t *hw, u32 daddr, void *buf, u32 len);
 int hfa384x_drvr_getconfig(hfa384x_t *hw, u16 rid, void *buf, u16 len);
-int hfa384x_drvr_handover(hfa384x_t *hw, u8 *addr);
 int hfa384x_drvr_ramdl_enable(hfa384x_t *hw, u32 exeaddr);
 int hfa384x_drvr_ramdl_disable(hfa384x_t *hw);
 int hfa384x_drvr_ramdl_write(hfa384x_t *hw, u32 daddr, void *buf, u32 len);
@@ -1187,12 +1186,6 @@ int hfa384x_cmd_monitor(hfa384x_t *hw, u
 int
 hfa384x_cmd_download(hfa384x_t *hw,
 		     u16 mode, u16 lowaddr, u16 highaddr, u16 codelen);
-void
-hfa384x_copy_from_aux(hfa384x_t *hw,
-		      u32 cardaddr, u32 auxctl, void *buf, unsigned int len);
-void
-hfa384x_copy_to_aux(hfa384x_t *hw,
-		    u32 cardaddr, u32 auxctl, void *buf, unsigned int len);
 
 #endif /* __KERNEL__ */
 
--- a/drivers/staging/wlan-ng/hfa384x_usb.c
+++ b/drivers/staging/wlan-ng/hfa384x_usb.c
@@ -1194,68 +1194,6 @@ int hfa384x_cmd_download(hfa384x_t *hw, 
 }
 
 /*----------------------------------------------------------------
-* hfa384x_copy_from_aux
-*
-* Copies a collection of bytes from the controller memory.  The
-* Auxiliary port MUST be enabled prior to calling this function.
-* We _might_ be in a download state.
-*
-* Arguments:
-*	hw		device structure
-*	cardaddr	address in hfa384x data space to read
-*	auxctl		address space select
-*	buf		ptr to destination host buffer
-*	len		length of data to transfer (in bytes)
-*
-* Returns:
-*	nothing
-*
-* Side effects:
-*	buf contains the data copied
-*
-* Call context:
-*	process
-*	interrupt
-----------------------------------------------------------------*/
-void
-hfa384x_copy_from_aux(hfa384x_t *hw, u32 cardaddr, u32 auxctl, void *buf,
-		      unsigned int len)
-{
-	printk(KERN_ERR "not used in USB.\n");
-}
-
-/*----------------------------------------------------------------
-* hfa384x_copy_to_aux
-*
-* Copies a collection of bytes to the controller memory.  The
-* Auxiliary port MUST be enabled prior to calling this function.
-* We _might_ be in a download state.
-*
-* Arguments:
-*	hw		device structure
-*	cardaddr	address in hfa384x data space to read
-*	auxctl		address space select
-*	buf		ptr to destination host buffer
-*	len		length of data to transfer (in bytes)
-*
-* Returns:
-*	nothing
-*
-* Side effects:
-*	Controller memory now contains a copy of buf
-*
-* Call context:
-*	process
-*	interrupt
-----------------------------------------------------------------*/
-void
-hfa384x_copy_to_aux(hfa384x_t *hw, u32 cardaddr, u32 auxctl, void *buf,
-		    unsigned int len)
-{
-	printk(KERN_ERR "not used in USB.\n");
-}
-
-/*----------------------------------------------------------------
 * hfa384x_corereset
 *
 * Perform a reset of the hfa38xx MAC core.  We assume that the hw
@@ -2296,31 +2234,6 @@ hfa384x_drvr_setconfig_async(hfa384x_t *
 }
 
 /*----------------------------------------------------------------
-* hfa384x_drvr_handover
-*
-* Sends a handover notification to the MAC.
-*
-* Arguments:
-*	hw		device structure
-*	addr		address of station that's left
-*
-* Returns:
-*	zero		success.
-*	-ERESTARTSYS	received signal while waiting for semaphore.
-*	-EIO		failed to write to bap, or failed in cmd.
-*
-* Side effects:
-*
-* Call context:
-*	process
-----------------------------------------------------------------*/
-int hfa384x_drvr_handover(hfa384x_t *hw, u8 *addr)
-{
-	printk(KERN_ERR "Not currently supported in USB!\n");
-	return -EIO;
-}
-
-/*----------------------------------------------------------------
 * hfa384x_drvr_ramdl_disable
 *
 * Ends the ram download state.
