From 9db75e9dcdda43817a40b45ae1cb7c02fe6c1395 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@suse.de>
Date: Fri, 27 Feb 2009 20:32:10 -0800
Subject: Staging: line6: remove KERNEL_VERSION checks

As the code is in the kernel tree, it's no longer needed.

Cc: Markus Grabner <grabner@icg.tugraz.at>
Cc: Mariusz Kozlowski <m.kozlowski@tuxland.pl>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/line6/capture.c  |    3 ---
 drivers/staging/line6/config.h   |    6 ------
 drivers/staging/line6/driver.c   |    3 ---
 drivers/staging/line6/driver.h   |    6 ------
 drivers/staging/line6/pcm.c      |    8 --------
 drivers/staging/line6/playback.c |    3 ---
 drivers/staging/line6/pod.c      |   10 ----------
 drivers/staging/line6/usbdefs.h  |   10 ----------
 8 files changed, 49 deletions(-)

--- a/drivers/staging/line6/capture.c
+++ b/drivers/staging/line6/capture.c
@@ -88,9 +88,6 @@ static void unlink_audio_in_urbs(struct 
 		if(test_bit(i, &line6pcm->active_urb_in)) {
 			if(!test_and_set_bit(i, &line6pcm->unlink_urb_in)) {
 				struct urb *u = line6pcm->urb_audio_in[i];
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 14)
-				u->transfer_flags |= URB_ASYNC_UNLINK;
-#endif
 				usb_unlink_urb(u);
 			}
 		}
--- a/drivers/staging/line6/config.h
+++ b/drivers/staging/line6/config.h
@@ -13,12 +13,6 @@
 #define CONFIG_H
 
 
-#include <linux/version.h>
-
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 19)
-#include <linux/config.h>
-#endif
-
 #ifdef CONFIG_USB_DEBUG
 #define DEBUG 1
 #endif
--- a/drivers/staging/line6/driver.c
+++ b/drivers/staging/line6/driver.c
@@ -1000,9 +1000,6 @@ static void line6_disconnect(struct usb_
 }
 
 static struct usb_driver line6_driver = {
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 16)
-	.owner = THIS_MODULE,
-#endif
 	.name = DRIVER_NAME,
 	.probe = line6_probe,
 	.disconnect = line6_disconnect,
--- a/drivers/staging/line6/driver.h
+++ b/drivers/staging/line6/driver.h
@@ -18,16 +18,10 @@
 #include <linux/spinlock.h>
 #include <linux/usb.h>
 #include <linux/wait.h>
-
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 25)
-#include <sound/driver.h>
-#endif
-
 #include <sound/core.h>
 
 #include "midi.h"
 
-
 #define DRIVER_NAME "line6usb"
 
 #define LINE6_TIMEOUT 1
--- a/drivers/staging/line6/pcm.c
+++ b/drivers/staging/line6/pcm.c
@@ -26,9 +26,6 @@
 int snd_line6_trigger(struct snd_pcm_substream *substream, int cmd)
 {
 	struct snd_line6_pcm *line6pcm = snd_pcm_substream_chip(substream);
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 22)
-	struct list_head *pos;
-#endif
 	struct snd_pcm_substream *s;
 	int err;
 	unsigned long flags;
@@ -36,12 +33,7 @@ int snd_line6_trigger(struct snd_pcm_sub
 	spin_lock_irqsave(&line6pcm->lock_trigger, flags);
 	clear_bit(BIT_PREPARED, &line6pcm->flags);
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 22)
-	snd_pcm_group_for_each(pos, substream) {
-		s = snd_pcm_group_substream_entry(pos);
-#else
 	snd_pcm_group_for_each_entry(s, substream) {
-#endif
 		switch(s->stream) {
 		case SNDRV_PCM_STREAM_PLAYBACK:
 			err = snd_line6_playback_trigger(s, cmd);
--- a/drivers/staging/line6/playback.c
+++ b/drivers/staging/line6/playback.c
@@ -173,9 +173,6 @@ static void unlink_audio_out_urbs(struct
 		if(test_bit(i, &line6pcm->active_urb_out)) {
 			if(!test_and_set_bit(i, &line6pcm->unlink_urb_out)) {
 				struct urb *u = line6pcm->urb_audio_out[i];
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 14)
-				u->transfer_flags |= URB_ASYNC_UNLINK;
-#endif
 				usb_unlink_urb(u);
 			}
 		}
--- a/drivers/staging/line6/pod.c
+++ b/drivers/staging/line6/pod.c
@@ -135,15 +135,9 @@ static int pod_version_request_async(str
 	return line6_send_raw_message_async(&pod->line6, pod->buffer_versionreq, sizeof(pod_request_version));
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 20)
 static void pod_create_files_work(struct work_struct *work)
 {
 	struct usb_line6_pod *pod = container_of(work, struct usb_line6_pod, create_files_work);
-#else
-static void pod_create_files_work(void *work)
-{
-	struct usb_line6_pod *pod = (struct usb_line6_pod *)work;
-#endif
 
 	pod_create_files(pod->firmware_version, pod->line6.properties->device_bit, pod->line6.ifcdev);
 }
@@ -351,11 +345,7 @@ void pod_process_message(struct usb_line
 
 				/* Now we know the firmware version, so we schedule a bottom half
 					 handler to create the special files: */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 20)
 				INIT_WORK(&pod->create_files_work, pod_create_files_work);
-#else
-				INIT_WORK(&pod->create_files_work, pod_create_files_work, pod);
-#endif
 				queue_work(line6_workqueue, &pod->create_files_work);
 			}
 			else
--- a/drivers/staging/line6/usbdefs.h
+++ b/drivers/staging/line6/usbdefs.h
@@ -13,9 +13,6 @@
 #define USBDEFS_H
 
 
-#include <linux/version.h>
-
-
 #define LINE6_VENDOR_ID  0x0e41
 
 #define USB_INTERVALS_PER_SECOND 1000
@@ -65,11 +62,4 @@
 #define LINE6_FALLBACK_INTERVAL 10
 #define LINE6_FALLBACK_MAXPACKETSIZE 16
 
-
-#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 18)
-#define usb_interrupt_msg(usb_dev, pipe, data, len, actual_length, timeout) \
-usb_bulk_msg(usb_dev, pipe, data, len, actual_length, timeout)
-#endif
-
-
 #endif
