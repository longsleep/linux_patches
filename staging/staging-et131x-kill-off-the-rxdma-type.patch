From alan@linux.intel.com  Wed Jan 27 15:39:05 2010
From: Alan Cox <alan@linux.intel.com>
Date: Mon, 18 Jan 2010 15:33:01 +0000
Subject: Staging: et131x: Kill off the rxdma type
To: greg@kroah.com
Message-ID: <20100118153301.6884.26272.stgit@localhost.localdomain>


We have a clean struct of this now so turn the top level typedefs into a
struct

Signed-off-by: Alan Cox <alan@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/et131x/et1310_address_map.h |    8 ++++----
 drivers/staging/et131x/et1310_rx.c          |    4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

--- a/drivers/staging/et131x/et1310_address_map.h
+++ b/drivers/staging/et131x/et1310_address_map.h
@@ -500,7 +500,7 @@ typedef struct _TXDMA_t {		/* Location: 
  * Rx DMA Module of JAGCore Address Mapping
  * Located at address 0x2000
  */
-typedef struct _RXDMA_t {				/* Location: */
+struct rxdma_regs {					/* Location: */
 	u32 csr;					/*  0x2000 */
 	u32 dma_wb_base_lo;				/*  0x2004 */
 	u32 dma_wb_base_hi;				/*  0x2008 */
@@ -530,7 +530,7 @@ typedef struct _RXDMA_t {				/* Location
 	u32 fbr1_full_offset;				/*  0x2068 */
 	u32 fbr1_rd_index;				/*  0x206C */
 	u32 fbr1_min_des;				/*  0x2070 */
-} RXDMA_t, *PRXDMA_t;
+};
 
 /* END OF RXDMA REGISTER ADDRESS MAP */
 
@@ -1688,9 +1688,9 @@ typedef struct _ADDRESS_MAP_t {
 	TXDMA_t txdma;
 	/* unused section of txdma address map */
 	u8 unused_txdma[4096 - sizeof(TXDMA_t)];
-	RXDMA_t rxdma;
+	struct rxdma_regs rxdma;
 	/* unused section of rxdma address map */
-	u8 unused_rxdma[4096 - sizeof(RXDMA_t)];
+	u8 unused_rxdma[4096 - sizeof(struct rxdma_regs)];
 	TXMAC_t txmac;
 	/* unused section of txmac address map */
 	u8 unused_txmac[4096 - sizeof(TXMAC_t)];
--- a/drivers/staging/et131x/et1310_rx.c
+++ b/drivers/staging/et131x/et1310_rx.c
@@ -593,7 +593,7 @@ int et131x_init_recv(struct et131x_adapt
  */
 void ConfigRxDmaRegs(struct et131x_adapter *etdev)
 {
-	struct _RXDMA_t __iomem *rx_dma = &etdev->regs->rxdma;
+	struct rxdma_regs __iomem *rx_dma = &etdev->regs->rxdma;
 	struct _rx_ring_t *rx_local = &etdev->RxRing;
 	struct fbr_desc *fbr_entry;
 	u32 entry;
@@ -1097,7 +1097,7 @@ static inline u32 bump_fbr(u32 *fbr, u32
 void nic_return_rfd(struct et131x_adapter *etdev, PMP_RFD rfd)
 {
 	struct _rx_ring_t *rx_local = &etdev->RxRing;
-	struct _RXDMA_t __iomem *rx_dma = &etdev->regs->rxdma;
+	struct rxdma_regs __iomem *rx_dma = &etdev->regs->rxdma;
 	uint16_t bi = rfd->bufferindex;
 	uint8_t ri = rfd->ringindex;
 	unsigned long flags;
