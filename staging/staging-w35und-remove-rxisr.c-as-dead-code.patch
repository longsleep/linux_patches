From penberg@cs.helsinki.fi  Wed Nov 12 13:57:06 2008
From: Pekka Enberg <penberg@cs.helsinki.fi>
Date: Thu, 30 Oct 2008 19:04:56 +0200
Subject: Staging: w35und: remove rxisr.c as dead code
To: greg@kroah.com
Cc: Pekka Enberg <penberg@cs.helsinki.fi>, Pavel Machek <pavel@suse.cz>
Message-ID: <1225386296-19632-7-git-send-email-penberg@cs.helsinki.fi>


The vRxTimerStart() function is never called nor does the timer do anything
useful so remove the code.

Acked-by: Pavel Machek <pavel@suse.cz>
Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/winbond/Makefile |    1 -
 drivers/staging/winbond/mds.c    |    3 ---
 drivers/staging/winbond/mds_f.h  |    5 -----
 drivers/staging/winbond/mds_s.h  |    2 --
 drivers/staging/winbond/rxisr.c  |   28 ----------------------------
 drivers/staging/winbond/sysdef.h |    3 ---
 6 files changed, 42 deletions(-)

--- a/drivers/staging/winbond/Makefile
+++ b/drivers/staging/winbond/Makefile
@@ -4,7 +4,6 @@ w35und-objs :=			\
 	mto.o			\
 	phy_calibration.o	\
 	reg.o			\
-	rxisr.o			\
 	wb35reg.o		\
 	wb35rx.o		\
 	wb35tx.o		\
--- a/drivers/staging/winbond/mds.c
+++ b/drivers/staging/winbond/mds.c
@@ -16,15 +16,12 @@ Mds_initial(struct wbsoft_priv * adapter
 	pMds->TxRTSThreshold = DEFAULT_RTSThreshold;
 	pMds->TxFragmentThreshold = DEFAULT_FRAGMENT_THRESHOLD;
 
-	vRxTimerInit(adapter);//for WPA countermeasure
-
 	return hal_get_tx_buffer( &adapter->sHwData, &pMds->pTxBuffer );
 }
 
 void
 Mds_Destroy(struct wbsoft_priv * adapter)
 {
-	vRxTimerStop(adapter);
 }
 
 static void Mds_DurationSet(struct wbsoft_priv *adapter,  PDESCRIPTOR pDes,  u8 *buffer)
--- a/drivers/staging/winbond/mds_f.h
+++ b/drivers/staging/winbond/mds_f.h
@@ -11,11 +11,6 @@ void Mds_SendComplete(  struct wbsoft_pr
 void Mds_MpduProcess(  struct wbsoft_priv *adapter,  PDESCRIPTOR pRxDes );
 extern void DataDmp(u8 *pdata, u32 len, u32 offset);
 
-
-void vRxTimerInit(struct wbsoft_priv *adapter);
-void vRxTimerStart(struct wbsoft_priv *adapter, int timeout_value);
-void vRxTimerStop(struct wbsoft_priv *adapter);
-
 // For Asynchronous indicating. The routine collocates with USB.
 void Mds_MsduProcess(  struct wbsoft_priv *adapter,  PRXLAYER1 pRxLayer1,  u8 SlotIndex);
 
--- a/drivers/staging/winbond/mds_s.h
+++ b/drivers/staging/winbond/mds_s.h
@@ -142,8 +142,6 @@ typedef struct _MDS
 	u8		boCounterMeasureBlock;
 	u8		reserved_4[2];
 
-	struct timer_list timer;
-
 	u32	TxTsc; // 20060214
 	u32	TxTsc_2; // 20060214
 
--- a/drivers/staging/winbond/rxisr.c
+++ /dev/null
@@ -1,28 +0,0 @@
-#include "os_common.h"
-#include "core.h"
-
-static void RxTimerHandler(unsigned long data)
-{
-	WARN_ON(1);
-}
-
-void vRxTimerInit(struct wbsoft_priv *adapter)
-{
-	init_timer(&adapter->Mds.timer);
-	adapter->Mds.timer.function = RxTimerHandler;
-	adapter->Mds.timer.data = (unsigned long) adapter;
-}
-
-void vRxTimerStart(struct wbsoft_priv *adapter, int timeout_value)
-{
-	if (timeout_value < MIN_TIMEOUT_VAL)
-		timeout_value = MIN_TIMEOUT_VAL;
-
-	adapter->Mds.timer.expires = jiffies + msecs_to_jiffies(timeout_value);
-	add_timer(&adapter->Mds.timer);
-}
-
-void vRxTimerStop(struct wbsoft_priv *adapter)
-{
-	del_timer_sync(&adapter->Mds.timer);
-}
--- a/drivers/staging/winbond/sysdef.h
+++ b/drivers/staging/winbond/sysdef.h
@@ -37,7 +37,4 @@
 #define _PE_USB_INI_DUMP_
 #endif
 
-// Kernel Timer resolution, NDIS is 10ms, 10000us
-#define MIN_TIMEOUT_VAL	(10) //ms
-
 #endif
