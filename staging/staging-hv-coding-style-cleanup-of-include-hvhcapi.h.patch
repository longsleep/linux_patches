From foo@baz Wed Aug 19 16:21:28 PDT 2009
Date: Wed, 19 Aug 2009 16:21:28 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: hv: coding style cleanup of include/HvHcApi.h

Coding style fixes for include/HvHcApi.h

Cc: Hank Janssen <hjanssen@microsoft.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/hv/Hv.c              |    8 ++---
 drivers/staging/hv/Hv.h              |    4 +-
 drivers/staging/hv/include/HvHcApi.h |   49 +++++++++++++----------------------
 3 files changed, 25 insertions(+), 36 deletions(-)

--- a/drivers/staging/hv/Hv.c
+++ b/drivers/staging/hv/Hv.c
@@ -306,7 +306,7 @@ int HvInit (void)
 		goto Cleanup;
 	}
 
-	gHvContext.SignalEventParam = (PHV_INPUT_SIGNAL_EVENT)(ALIGN_UP((unsigned long)gHvContext.SignalEventBuffer, HV_HYPERCALL_PARAM_ALIGN));
+	gHvContext.SignalEventParam = (struct hv_input_signal_event *)(ALIGN_UP((unsigned long)gHvContext.SignalEventBuffer, HV_HYPERCALL_PARAM_ALIGN));
 	gHvContext.SignalEventParam->ConnectionId.Asu32 = 0;
 	gHvContext.SignalEventParam->ConnectionId.u.Id = VMBUS_EVENT_CONNECTION_ID;
 	gHvContext.SignalEventParam->FlagNumber = 0;
@@ -393,10 +393,10 @@ HV_STATUS HvPostMessage(
 {
 	struct alignedInput {
 		u64					alignment8;
-		HV_INPUT_POST_MESSAGE	msg;
+		struct hv_input_post_message msg;
 	};
 
-	PHV_INPUT_POST_MESSAGE alignedMsg;
+	struct hv_input_post_message *alignedMsg;
 	HV_STATUS status;
 	unsigned long addr;
 
@@ -412,7 +412,7 @@ HV_STATUS HvPostMessage(
 		return -1;
 	}
 
-	alignedMsg = (PHV_INPUT_POST_MESSAGE)(ALIGN_UP(addr, HV_HYPERCALL_PARAM_ALIGN));
+	alignedMsg = (struct hv_input_post_message *)(ALIGN_UP(addr, HV_HYPERCALL_PARAM_ALIGN));
 
 	alignedMsg->ConnectionId = connectionId;
 	alignedMsg->MessageType = messageType;
--- a/drivers/staging/hv/Hv.h
+++ b/drivers/staging/hv/Hv.h
@@ -102,7 +102,7 @@ static const struct hv_guid VMBUS_SERVIC
 
 struct hv_input_signal_event_buffer {
 	u64 Align8;
-	HV_INPUT_SIGNAL_EVENT Event;
+	struct hv_input_signal_event Event;
 };
 
 struct hv_context {
@@ -120,7 +120,7 @@ struct hv_context {
 	 * stack or global). */
 	struct hv_input_signal_event_buffer *SignalEventBuffer;
 	/* 8-bytes aligned of the buffer above */
-	HV_INPUT_SIGNAL_EVENT *SignalEventParam;
+	struct hv_input_signal_event *SignalEventParam;
 
 	void *synICMessagePage[MAX_NUM_CPUS];
 	void *synICEventPage[MAX_NUM_CPUS];
--- a/drivers/staging/hv/include/HvHcApi.h
+++ b/drivers/staging/hv/include/HvHcApi.h
@@ -21,40 +21,29 @@
  *
  */
 
-
-#pragma once
-
+#ifndef __HVHCAPI_H
+#define __HVHCAPI_H
 
 /* Declare the various hypercall operations. */
-
-typedef enum _HV_CALL_CODE
-{
-
-    HvCallPostMessage                   = 0x005c,
-    HvCallSignalEvent                   = 0x005d,
-
-} HV_CALL_CODE, *PHV_CALL_CODE;
+enum hv_call_code {
+	HvCallPostMessage	= 0x005c,
+	HvCallSignalEvent	= 0x005d,
+};
 
 /* Definition of the HvPostMessage hypercall input structure. */
-
-
-typedef struct _HV_INPUT_POST_MESSAGE
-{
-    HV_CONNECTION_ID    ConnectionId;
-    u32              Reserved;
-    HV_MESSAGE_TYPE     MessageType;
-    u32              PayloadSize;
-    u64              Payload[HV_MESSAGE_PAYLOAD_QWORD_COUNT];
-} HV_INPUT_POST_MESSAGE, *PHV_INPUT_POST_MESSAGE;
-
-
+struct hv_input_post_message {
+	HV_CONNECTION_ID ConnectionId;
+	u32 Reserved;
+	HV_MESSAGE_TYPE MessageType;
+	u32 PayloadSize;
+	u64 Payload[HV_MESSAGE_PAYLOAD_QWORD_COUNT];
+};
 
 /* Definition of the HvSignalEvent hypercall input structure. */
+struct hv_input_signal_event {
+	HV_CONNECTION_ID ConnectionId;
+	u16 FlagNumber;
+	u16 RsvdZ;
+};
 
-
-typedef struct _HV_INPUT_SIGNAL_EVENT
-{
-    HV_CONNECTION_ID ConnectionId;
-    u16           FlagNumber;
-    u16           RsvdZ;
-} HV_INPUT_SIGNAL_EVENT, *PHV_INPUT_SIGNAL_EVENT;
+#endif
