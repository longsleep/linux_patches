From wfp5p@virginia.edu  Wed Mar 18 21:47:51 2009
From: Bill Pemberton <wfp5p@virginia.edu>
Date: Mon, 16 Mar 2009 22:19:53 -0400
Subject: Staging: comedi: quatech_daqp_cs: Remove local_info_t typedef
To: greg@kroah.com
Message-ID: <20090317021952.14467.3158.stgit@viridian.itc.Virginia.EDU>


Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/comedi/drivers/quatech_daqp_cs.c |   36 +++++++++++------------
 1 file changed, 18 insertions(+), 18 deletions(-)

--- a/drivers/staging/comedi/drivers/quatech_daqp_cs.c
+++ b/drivers/staging/comedi/drivers/quatech_daqp_cs.c
@@ -75,7 +75,7 @@ static char *version = "quatech_daqp_cs.
 /* Maximum number of separate DAQP devices we'll allow */
 #define MAX_DEV         4
 
-typedef struct local_info_t {
+struct local_info_t {
 	struct pcmcia_device *link;
 	dev_node_t node;
 	int stop;
@@ -89,11 +89,11 @@ typedef struct local_info_t {
 	struct comedi_device *dev;
 	struct comedi_subdevice *s;
 	int count;
-} local_info_t;
+};
 
 /* A list of "instances" of the device. */
 
-static local_info_t *dev_table[MAX_DEV] = { NULL, /* ... */  };
+static struct local_info_t *dev_table[MAX_DEV] = { NULL, /* ... */  };
 
 /* The DAQP communicates with the system through a 16 byte I/O window. */
 
@@ -236,7 +236,7 @@ static void hex_dump(char *str, void *pt
 
 static int daqp_ai_cancel(struct comedi_device * dev, struct comedi_subdevice * s)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 
 	if (local->stop) {
 		return -EIO;
@@ -264,7 +264,7 @@ static int daqp_ai_cancel(struct comedi_
 
 static void daqp_interrupt(int irq, void *dev_id PT_REGS_ARG)
 {
-	local_info_t *local = (local_info_t *) dev_id;
+	struct local_info_t *local = (struct local_info_t *) dev_id;
 	struct comedi_device *dev;
 	struct comedi_subdevice *s;
 	int loop_limit = 10000;
@@ -295,7 +295,7 @@ static void daqp_interrupt(int irq, void
 		return;
 	}
 
-	if ((local_info_t *) s->private != local) {
+	if ((struct local_info_t *) s->private != local) {
 		printk(KERN_WARNING
 			"daqp_interrupt(): invalid comedi_subdevice.\n");
 		return;
@@ -364,7 +364,7 @@ static void daqp_interrupt(int irq, void
 static int daqp_ai_insn_read(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 	int i;
 	int v;
 	int counter = 10000;
@@ -595,7 +595,7 @@ static int daqp_ai_cmdtest(struct comedi
 
 static int daqp_ai_cmd(struct comedi_device * dev, struct comedi_subdevice * s)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 	struct comedi_cmd *cmd = &s->async->cmd;
 	int counter = 100;
 	int scanlist_start_on_every_entry;
@@ -796,7 +796,7 @@ static int daqp_ai_cmd(struct comedi_dev
 static int daqp_ao_insn_write(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 	int d;
 	unsigned int chan;
 
@@ -823,7 +823,7 @@ static int daqp_ao_insn_write(struct com
 static int daqp_di_insn_read(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 
 	if (local->stop) {
 		return -EIO;
@@ -839,7 +839,7 @@ static int daqp_di_insn_read(struct come
 static int daqp_do_insn_write(struct comedi_device * dev, struct comedi_subdevice * s,
 	struct comedi_insn * insn, unsigned int * data)
 {
-	local_info_t *local = (local_info_t *) s->private;
+	struct local_info_t *local = (struct local_info_t *) s->private;
 
 	if (local->stop) {
 		return -EIO;
@@ -859,7 +859,7 @@ static int daqp_do_insn_write(struct com
 static int daqp_attach(struct comedi_device * dev, struct comedi_devconfig * it)
 {
 	int ret;
-	local_info_t *local = dev_table[it->options[0]];
+	struct local_info_t *local = dev_table[it->options[0]];
 	tuple_t tuple;
 	int i;
 	struct comedi_subdevice *s;
@@ -1051,7 +1051,7 @@ static const dev_info_t dev_info = "quat
 
 static int daqp_cs_attach(struct pcmcia_device *link)
 {
-	local_info_t *local;
+	struct local_info_t *local;
 	int i;
 
 	DEBUG(0, "daqp_cs_attach()\n");
@@ -1065,7 +1065,7 @@ static int daqp_cs_attach(struct pcmcia_
 	}
 
 	/* Allocate space for private device-specific data */
-	local = kzalloc(sizeof(local_info_t), GFP_KERNEL);
+	local = kzalloc(sizeof(struct local_info_t), GFP_KERNEL);
 	if (!local)
 		return -ENOMEM;
 
@@ -1106,7 +1106,7 @@ static int daqp_cs_attach(struct pcmcia_
 
 static void daqp_cs_detach(struct pcmcia_device *link)
 {
-	local_info_t *dev = link->priv;
+	struct local_info_t *dev = link->priv;
 
 	DEBUG(0, "daqp_cs_detach(0x%p)\n", link);
 
@@ -1132,7 +1132,7 @@ static void daqp_cs_detach(struct pcmcia
 
 static void daqp_cs_config(struct pcmcia_device *link)
 {
-	local_info_t *dev = link->priv;
+	struct local_info_t *dev = link->priv;
 	tuple_t tuple;
 	cisparse_t parse;
 	int last_ret;
@@ -1306,7 +1306,7 @@ static void daqp_cs_release(struct pcmci
 
 static int daqp_cs_suspend(struct pcmcia_device *link)
 {
-	local_info_t *local = link->priv;
+	struct local_info_t *local = link->priv;
 
 	/* Mark the device as stopped, to block IO until later */
 	local->stop = 1;
@@ -1315,7 +1315,7 @@ static int daqp_cs_suspend(struct pcmcia
 
 static int daqp_cs_resume(struct pcmcia_device *link)
 {
-	local_info_t *local = link->priv;
+	struct local_info_t *local = link->priv;
 
 	local->stop = 0;
 
