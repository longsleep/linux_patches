From andrew@lunn.ch  Thu Feb 25 15:38:45 2010
From: Marek Lindner <lindner_marek@yahoo.de>
Date: Fri, 19 Feb 2010 16:18:10 +0100
Subject: Staging: batman-adv: avoid crash on memory allocation error
To: gregkh@suse.de
Cc: devel@linuxdriverproject.org, b.a.t.m.a.n@lists.open-mesh.net, Marek Lindner <lindner_marek@yahoo.de>, Andrew Lunn <andrew@lunn.ch>
Message-ID: <1266592691-13090-7-git-send-email-andrew@lunn.ch>


From: Marek Lindner <lindner_marek@yahoo.de>

skb_share_check() returns NULL if it can't allocate more memory but
it still frees the skbuff.

Signed-off-by: Marek Lindner <lindner_marek@yahoo.de>
Signed-off-by: Andrew Lunn <andrew@lunn.ch>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/batman-adv/hard-interface.c |   16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

--- a/drivers/staging/batman-adv/hard-interface.c
+++ b/drivers/staging/batman-adv/hard-interface.c
@@ -426,10 +426,11 @@ int batman_skb_recv(struct sk_buff *skb,
 	struct net_device_stats *stats;
 	int ret;
 
-    skb = skb_share_check(skb, GFP_ATOMIC);
+	skb = skb_share_check(skb, GFP_ATOMIC);
 
-    if (skb == NULL)
-		goto err_free;
+	/* skb was released by skb_share_check() */
+	if (!skb)
+		goto err_out;
 
 	/* packet should hold at least type and version */
 	if (unlikely(skb_headlen(skb) < 2))
@@ -444,7 +445,7 @@ int batman_skb_recv(struct sk_buff *skb,
 	if (!batman_if)
 		goto err_free;
 
-    stats = (struct net_device_stats *) dev_get_stats(skb->dev);
+	stats = (struct net_device_stats *)dev_get_stats(skb->dev);
 	if (stats) {
 		stats->rx_packets++;
 		stats->rx_bytes += skb->len;
@@ -490,6 +491,7 @@ int batman_skb_recv(struct sk_buff *skb,
 	default:
 		ret = NET_RX_DROP;
 	}
+
 	if (ret == NET_RX_DROP)
 		kfree_skb(skb);
 
@@ -500,9 +502,9 @@ int batman_skb_recv(struct sk_buff *skb,
 	return NET_RX_SUCCESS;
 
 err_free:
-    kfree_skb(skb);
-    return NET_RX_DROP;
-
+	kfree_skb(skb);
+err_out:
+	return NET_RX_DROP;
 }
 
 
