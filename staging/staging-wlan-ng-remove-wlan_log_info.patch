From jmm@debian.org  Mon Jan 26 09:46:43 2009
From: Moritz Muehlenhoff <jmm@debian.org>
Date: Sun, 25 Jan 2009 21:54:57 +0100
Subject: Staging: wlan-ng: Remove WLAN_LOG_INFO
To: greg@kroah.com
Cc: Moritz Muehlenhoff <jmm@debian.org>
Message-ID: <1232916910-5075-3-git-send-email-jmm@debian.org>


Replace WLAN_LOG_INFO with printk() and remove it.

Signed-off-by: Moritz Muehlenhoff <jmm@debian.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/wlan-ng/hfa384x_usb.c |   10 +++----
 drivers/staging/wlan-ng/p80211wext.c  |    2 -
 drivers/staging/wlan-ng/prism2mgmt.c  |    4 +--
 drivers/staging/wlan-ng/prism2sta.c   |   44 +++++++++++++++++-----------------
 drivers/staging/wlan-ng/wlan_compat.h |    2 -
 5 files changed, 30 insertions(+), 32 deletions(-)

--- a/drivers/staging/wlan-ng/hfa384x_usb.c
+++ b/drivers/staging/wlan-ng/hfa384x_usb.c
@@ -2244,7 +2244,7 @@ hfa384x_drvr_flashdl_write(
 		return -EINVAL;
 	}
 
-	WLAN_LOG_INFO("Download %d bytes to flash @0x%06x\n", len, daddr);
+	printk(KERN_INFO "Download %d bytes to flash @0x%06x\n", len, daddr);
 
 	/* Convert to flat address for arithmetic */
 	/* NOTE: dlbuffer RID stores the address in AUX format */
@@ -2282,7 +2282,7 @@ WLAN_LOG_WARNING("dlbuf@0x%06lx len=%d t
 		burnlo = HFA384x_ADDR_CMD_MKOFF(burndaddr);
 		burnhi = HFA384x_ADDR_CMD_MKPAGE(burndaddr);
 
-		WLAN_LOG_INFO("Writing %d bytes to flash @0x%06x\n",
+		printk(KERN_INFO "Writing %d bytes to flash @0x%06x\n",
 			burnlen, burndaddr);
 
 		/* Set the download mode */
@@ -2665,7 +2665,7 @@ hfa384x_drvr_ramdl_write(hfa384x_t *hw, 
 		return -EINVAL;
 	}
 
-	WLAN_LOG_INFO("Writing %d bytes to ram @0x%06x\n", len, daddr);
+	printk(KERN_INFO "Writing %d bytes to ram @0x%06x\n", len, daddr);
 
 	/* How many dowmem calls?  */
 	nwrites = len / HFA384x_USB_RWMEM_MAXLEN;
@@ -2802,7 +2802,7 @@ int hfa384x_drvr_readpda(hfa384x_t *hw, 
 			}
 		}
 		if ( pdaok ) {
-			WLAN_LOG_INFO(
+			printk(KERN_INFO
 				"PDA Read from 0x%08x in %s space.\n",
 				pdaloc[i].cardaddr,
 				pdaloc[i].auxctl == 0 ? "EXTDS" :
@@ -4087,7 +4087,7 @@ static void hfa384x_usbout_callback(stru
 			break;
 
 		default:
-			WLAN_LOG_INFO("unknown urb->status=%d\n", urb->status);
+			printk(KERN_INFO "unknown urb->status=%d\n", urb->status);
 			++(wlandev->linux_stats.tx_errors);
 			break;
 		} /* switch */
--- a/drivers/staging/wlan-ng/p80211wext.c
+++ b/drivers/staging/wlan-ng/p80211wext.c
@@ -407,7 +407,7 @@ static int p80211wext_siwmode(netdevice_
 		break;
 	default:
 		/* Not set yet. */
-		WLAN_LOG_INFO("Operation mode: %d not support\n", *mode);
+		printk(KERN_INFO "Operation mode: %d not support\n", *mode);
 		return -EOPNOTSUPP;
 	}
 
--- a/drivers/staging/wlan-ng/prism2mgmt.c
+++ b/drivers/staging/wlan-ng/prism2mgmt.c
@@ -1179,7 +1179,7 @@ int prism2mgmt_wlansniff(wlandevice_t *w
 
 		}
 
-		WLAN_LOG_INFO("monitor mode disabled\n");
+		printk(KERN_INFO "monitor mode disabled\n");
 		msg->resultcode.data = P80211ENUM_resultcode_success;
 		result = 0;
 		goto exit;
@@ -1301,7 +1301,7 @@ int prism2mgmt_wlansniff(wlandevice_t *w
 		}
 
 		if (wlandev->netdev->type == ARPHRD_ETHER) {
-			WLAN_LOG_INFO("monitor mode enabled\n");
+			printk(KERN_INFO "monitor mode enabled\n");
 		}
 
 		/* Set the driver state */
--- a/drivers/staging/wlan-ng/prism2sta.c
+++ b/drivers/staging/wlan-ng/prism2sta.c
@@ -671,7 +671,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->ident_nic.major = hfa384x2host_16(hw->ident_nic.major);
 	hw->ident_nic.minor = hfa384x2host_16(hw->ident_nic.minor);
 
-	WLAN_LOG_INFO( "ident: nic h/w: id=0x%02x %d.%d.%d\n",
+	printk(KERN_INFO  "ident: nic h/w: id=0x%02x %d.%d.%d\n",
 			hw->ident_nic.id, hw->ident_nic.major,
 			hw->ident_nic.minor, hw->ident_nic.variant);
 
@@ -689,7 +689,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->ident_pri_fw.major = hfa384x2host_16(hw->ident_pri_fw.major);
 	hw->ident_pri_fw.minor = hfa384x2host_16(hw->ident_pri_fw.minor);
 
-	WLAN_LOG_INFO( "ident: pri f/w: id=0x%02x %d.%d.%d\n",
+	printk(KERN_INFO  "ident: pri f/w: id=0x%02x %d.%d.%d\n",
 			hw->ident_pri_fw.id, hw->ident_pri_fw.major,
 			hw->ident_pri_fw.minor, hw->ident_pri_fw.variant);
 
@@ -718,12 +718,12 @@ static int prism2sta_getcardinfo(wlandev
 	hw->ident_sta_fw.variant &= ~((u16)(BIT(14) | BIT(15)));
 
 	if  ( hw->ident_sta_fw.id == 0x1f ) {
-		WLAN_LOG_INFO(
+		printk(KERN_INFO
 			"ident: sta f/w: id=0x%02x %d.%d.%d\n",
 			hw->ident_sta_fw.id, hw->ident_sta_fw.major,
 			hw->ident_sta_fw.minor, hw->ident_sta_fw.variant);
 	} else {
-		WLAN_LOG_INFO(
+		printk(KERN_INFO
 			"ident:  ap f/w: id=0x%02x %d.%d.%d\n",
 			hw->ident_sta_fw.id, hw->ident_sta_fw.major,
 			hw->ident_sta_fw.minor, hw->ident_sta_fw.variant);
@@ -747,7 +747,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_sup_mfi.bottom = hfa384x2host_16(hw->cap_sup_mfi.bottom);
 	hw->cap_sup_mfi.top = hfa384x2host_16(hw->cap_sup_mfi.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"MFI:SUP:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_sup_mfi.role, hw->cap_sup_mfi.id,
 		hw->cap_sup_mfi.variant, hw->cap_sup_mfi.bottom,
@@ -769,7 +769,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_sup_cfi.bottom = hfa384x2host_16(hw->cap_sup_cfi.bottom);
 	hw->cap_sup_cfi.top = hfa384x2host_16(hw->cap_sup_cfi.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"CFI:SUP:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_sup_cfi.role, hw->cap_sup_cfi.id,
 		hw->cap_sup_cfi.variant, hw->cap_sup_cfi.bottom,
@@ -791,7 +791,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_sup_pri.bottom = hfa384x2host_16(hw->cap_sup_pri.bottom);
 	hw->cap_sup_pri.top = hfa384x2host_16(hw->cap_sup_pri.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"PRI:SUP:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_sup_pri.role, hw->cap_sup_pri.id,
 		hw->cap_sup_pri.variant, hw->cap_sup_pri.bottom,
@@ -814,13 +814,13 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_sup_sta.top = hfa384x2host_16(hw->cap_sup_sta.top);
 
 	if ( hw->cap_sup_sta.id == 0x04 ) {
-		WLAN_LOG_INFO(
+		printk(KERN_INFO
 		"STA:SUP:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_sup_sta.role, hw->cap_sup_sta.id,
 		hw->cap_sup_sta.variant, hw->cap_sup_sta.bottom,
 		hw->cap_sup_sta.top);
 	} else {
-		WLAN_LOG_INFO(
+		printk(KERN_INFO
 		"AP:SUP:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_sup_sta.role, hw->cap_sup_sta.id,
 		hw->cap_sup_sta.variant, hw->cap_sup_sta.bottom,
@@ -843,7 +843,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_act_pri_cfi.bottom = hfa384x2host_16(hw->cap_act_pri_cfi.bottom);
 	hw->cap_act_pri_cfi.top = hfa384x2host_16(hw->cap_act_pri_cfi.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"PRI-CFI:ACT:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_act_pri_cfi.role, hw->cap_act_pri_cfi.id,
 		hw->cap_act_pri_cfi.variant, hw->cap_act_pri_cfi.bottom,
@@ -865,7 +865,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_act_sta_cfi.bottom = hfa384x2host_16(hw->cap_act_sta_cfi.bottom);
 	hw->cap_act_sta_cfi.top = hfa384x2host_16(hw->cap_act_sta_cfi.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"STA-CFI:ACT:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_act_sta_cfi.role, hw->cap_act_sta_cfi.id,
 		hw->cap_act_sta_cfi.variant, hw->cap_act_sta_cfi.bottom,
@@ -887,7 +887,7 @@ static int prism2sta_getcardinfo(wlandev
 	hw->cap_act_sta_mfi.bottom = hfa384x2host_16(hw->cap_act_sta_mfi.bottom);
 	hw->cap_act_sta_mfi.top = hfa384x2host_16(hw->cap_act_sta_mfi.top);
 
-	WLAN_LOG_INFO(
+	printk(KERN_INFO
 		"STA-MFI:ACT:role=0x%02x:id=0x%02x:var=0x%02x:b/t=%d/%d\n",
 		hw->cap_act_sta_mfi.role, hw->cap_act_sta_mfi.id,
 		hw->cap_act_sta_mfi.variant, hw->cap_act_sta_mfi.bottom,
@@ -899,7 +899,7 @@ static int prism2sta_getcardinfo(wlandev
 	if ( !result ) {
 		wlan_mkprintstr(snum, HFA384x_RID_NICSERIALNUMBER_LEN,
 				pstr, sizeof(pstr));
-		WLAN_LOG_INFO("Prism2 card SN: %s\n", pstr);
+		printk(KERN_INFO "Prism2 card SN: %s\n", pstr);
 	} else {
 		WLAN_LOG_ERROR("Failed to retrieve Prism2 Card SN\n");
 		goto failed;
@@ -1263,7 +1263,7 @@ void prism2sta_processing_defer(struct w
 		 */
 		netif_carrier_off(wlandev->netdev);
 
-		WLAN_LOG_INFO("linkstatus=NOTCONNECTED (unhandled)\n");
+		printk(KERN_INFO "linkstatus=NOTCONNECTED (unhandled)\n");
 		break;
 
 	case HFA384x_LINK_CONNECTED:
@@ -1288,7 +1288,7 @@ void prism2sta_processing_defer(struct w
 		if ( wlandev->netdev->type == ARPHRD_ETHER ) {
 			u16			portstatus;
 
-			WLAN_LOG_INFO("linkstatus=CONNECTED\n");
+			printk(KERN_INFO "linkstatus=CONNECTED\n");
 
 			/* For non-usb devices, we can use the sync versions */
 			/* Collect the BSSID, and set state to allow tx */
@@ -1351,10 +1351,10 @@ void prism2sta_processing_defer(struct w
 			hfa384x_drvr_setconfig( hw,
 				HFA384x_RID_JOINREQUEST,
 				&joinreq, HFA384x_RID_JOINREQUEST_LEN);
-			WLAN_LOG_INFO("linkstatus=DISCONNECTED (re-submitting join)\n");
+			printk(KERN_INFO "linkstatus=DISCONNECTED (re-submitting join)\n");
 		} else {
 			if (wlandev->netdev->type == ARPHRD_ETHER)
-				WLAN_LOG_INFO("linkstatus=DISCONNECTED (unhandled)\n");
+				printk(KERN_INFO "linkstatus=DISCONNECTED (unhandled)\n");
 		}
 		wlandev->macmode = WLAN_MACMODE_NONE;
 
@@ -1377,7 +1377,7 @@ void prism2sta_processing_defer(struct w
 		 * Indicate Reassociation
 		 * Enable Transmits, Receives and pass up data frames
 		 */
-		WLAN_LOG_INFO("linkstatus=AP_CHANGE\n");
+		printk(KERN_INFO "linkstatus=AP_CHANGE\n");
 
 		result = hfa384x_drvr_getconfig(hw,
 						HFA384x_RID_CURRENTBSSID,
@@ -1419,7 +1419,7 @@ void prism2sta_processing_defer(struct w
 		 * Response:
 		 * Block Transmits, Ignore receives of data frames
 		 */
-		WLAN_LOG_INFO("linkstatus=AP_OUTOFRANGE (unhandled)\n");
+		printk(KERN_INFO "linkstatus=AP_OUTOFRANGE (unhandled)\n");
 
 		netif_carrier_off(wlandev->netdev);
 
@@ -1432,7 +1432,7 @@ void prism2sta_processing_defer(struct w
 		 * Response:
 		 * Enable Transmits, Receives and pass up data frames
 		 */
-		WLAN_LOG_INFO("linkstatus=AP_INRANGE\n");
+		printk(KERN_INFO "linkstatus=AP_INRANGE\n");
 
 		hw->link_status = HFA384x_LINK_CONNECTED;
 		netif_carrier_on(wlandev->netdev);
@@ -1456,9 +1456,9 @@ void prism2sta_processing_defer(struct w
 			hfa384x_drvr_setconfig( hw,
 				HFA384x_RID_JOINREQUEST,
 				&joinreq, HFA384x_RID_JOINREQUEST_LEN);
-			WLAN_LOG_INFO("linkstatus=ASSOCFAIL (re-submitting join)\n");
+			printk(KERN_INFO "linkstatus=ASSOCFAIL (re-submitting join)\n");
 		} else {
-			WLAN_LOG_INFO("linkstatus=ASSOCFAIL (unhandled)\n");
+			printk(KERN_INFO "linkstatus=ASSOCFAIL (unhandled)\n");
 		}
 
 		netif_carrier_off(wlandev->netdev);
--- a/drivers/staging/wlan-ng/wlan_compat.h
+++ b/drivers/staging/wlan-ng/wlan_compat.h
@@ -64,8 +64,6 @@
 
 #define WLAN_LOG_NOTICE(x,args...) printk(KERN_NOTICE "%s: " x , __func__ , ##args);
 
-#define WLAN_LOG_INFO(args... ) printk(KERN_INFO args)
-
 #if defined(WLAN_INCLUDE_DEBUG)
 	#define WLAN_HEX_DUMP( l, x, p, n)	if( WLAN_DBVAR >= (l) ){ \
 		int __i__; \
