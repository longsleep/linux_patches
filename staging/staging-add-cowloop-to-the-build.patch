From foo@baz Tue Aug 25 16:00:48 PDT 2009
Date: Tue, 25 Aug 2009 16:00:48 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: add cowloop to the build

Now that the code can build, let's add it to the build system.

Cc: "H.J. Thomassen" <hjt@ATComputing.nl>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/Kconfig          |    2 ++
 drivers/staging/Makefile         |    1 +
 drivers/staging/cowloop/Kconfig  |   16 ++++++++++++++++
 drivers/staging/cowloop/Makefile |    1 +
 4 files changed, 20 insertions(+)

--- /dev/null
+++ b/drivers/staging/cowloop/Kconfig
@@ -0,0 +1,16 @@
+config COWLOOP
+	tristate "copy-on-write pseudo Block Driver"
+	depends on BLOCK
+	default n
+	---help---
+	  Cowloop is a "copy-on-write" pseudo block driver. It can be
+	  stacked on top of a "real" block driver, and catches all write
+	  operations on their way from the file systems layer above to
+	  the real driver below, effectively shielding the lower driver
+	  from those write accesses. The requests are then diverted to
+	  an ordinary file, located somewhere else (configurable). Later
+	  read requests are checked to see whether they can be serviced
+	  by the "real" block driver below, or must be pulled in from
+	  the diverted location. More information and userspace tools to
+	  use the driver are on the project's website
+	  http://www.ATComputing.nl/cowloop/
--- /dev/null
+++ b/drivers/staging/cowloop/Makefile
@@ -0,0 +1 @@
+obj-$(CONFIG_COWLOOP)	+= cowloop.o
--- a/drivers/staging/Kconfig
+++ b/drivers/staging/Kconfig
@@ -143,5 +143,7 @@ source "drivers/staging/sep/Kconfig"
 
 source "drivers/staging/iio/Kconfig"
 
+source "drivers/staging/cowloop/Kconfig"
+
 endif # !STAGING_EXCLUDE_BUILD
 endif # STAGING
--- a/drivers/staging/Makefile
+++ b/drivers/staging/Makefile
@@ -53,3 +53,4 @@ obj-$(CONFIG_VME)		+= vme/
 obj-$(CONFIG_RAR_REGISTER)	+= rar/
 obj-$(CONFIG_DX_SEP)		+= sep/
 obj-$(CONFIG_IIO)		+= iio/
+obj-$(CONFIG_COWLOOP)		+= cowloop/
