From martyn.welch@gefanuc.com  Fri Dec 18 10:24:44 2009
From: Martyn Welch <martyn.welch@gefanuc.com>
Date: Tue, 15 Dec 2009 08:43:15 +0000
Subject: Staging: vme: Allow drivers to co-exist
To: greg@kroah.com
Cc: devel@linuxdriverproject.org
Message-ID: <20091215084315.3930.34642.stgit@ES-J7S4D2J.amer.consind.ge.com>


Unable to build both drivers at the same time due to classing variables that should be declared static but aren't.

Signed-off-by: Martyn Welch <martyn.welch@gefanuc.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---

 drivers/staging/vme/bridges/vme_ca91cx42.c |   32 +++++++++++++++--------------
 drivers/staging/vme/bridges/vme_tsi148.c   |   20 +++++++++---------
 2 files changed, 27 insertions(+), 25 deletions(-)

--- a/drivers/staging/vme/bridges/vme_ca91cx42.c
+++ b/drivers/staging/vme/bridges/vme_ca91cx42.c
@@ -41,21 +41,23 @@ static void __exit ca91cx42_exit(void);
 /* Module parameters */
 static int geoid;
 
-struct vme_bridge *ca91cx42_bridge;
-wait_queue_head_t dma_queue;
-wait_queue_head_t iack_queue;
-wait_queue_head_t lm_queue;
-wait_queue_head_t mbox_queue;
-
-void (*lm_callback[4])(int);    /* Called in interrupt handler, be careful! */
-void *crcsr_kernel;
-dma_addr_t crcsr_bus;
-
-struct mutex vme_rmw;   /* Only one RMW cycle at a time */
-struct mutex vme_int;   /*
-			 * Only one VME interrupt can be
-			 * generated at a time, provide locking
-			 */
+static struct vme_bridge *ca91cx42_bridge;
+static wait_queue_head_t dma_queue;
+static wait_queue_head_t iack_queue;
+#if 0
+static wait_queue_head_t lm_queue;
+#endif
+static wait_queue_head_t mbox_queue;
+
+static void (*lm_callback[4])(int);	/* Called in interrupt handler */
+static void *crcsr_kernel;
+static dma_addr_t crcsr_bus;
+
+static struct mutex vme_rmw;	/* Only one RMW cycle at a time */
+static struct mutex vme_int;	/*
+				 * Only one VME interrupt can be
+				 * generated at a time, provide locking
+				 */
 
 static char driver_name[] = "vme_ca91cx42";
 
--- a/drivers/staging/vme/bridges/vme_tsi148.c
+++ b/drivers/staging/vme/bridges/vme_tsi148.c
@@ -62,19 +62,19 @@ int tsi148_generate_irq(int, int);
 int tsi148_slot_get(void);
 
 /* Modue parameter */
-int err_chk = 0;
+static int err_chk;
 static int geoid;
 
 /* XXX These should all be in a per device structure */
-struct vme_bridge *tsi148_bridge;
-wait_queue_head_t dma_queue[2];
-wait_queue_head_t iack_queue;
-void (*lm_callback[4])(int);	/* Called in interrupt handler, be careful! */
-void *crcsr_kernel;
-dma_addr_t crcsr_bus;
-struct vme_master_resource *flush_image;
-struct mutex vme_rmw;	/* Only one RMW cycle at a time */
-struct mutex vme_int;	/*
+static struct vme_bridge *tsi148_bridge;
+static wait_queue_head_t dma_queue[2];
+static wait_queue_head_t iack_queue;
+static void (*lm_callback[4])(int);	/* Called in interrupt handler */
+static void *crcsr_kernel;
+static dma_addr_t crcsr_bus;
+static struct vme_master_resource *flush_image;
+static struct mutex vme_rmw;	/* Only one RMW cycle at a time */
+static struct mutex vme_int;	/*
 				 * Only one VME interrupt can be
 				 * generated at a time, provide locking
 				 */
