From alan@linux.intel.com  Mon Oct 26 14:48:32 2009
From: Alan Cox <alan@linux.intel.com>
Date: Tue, 06 Oct 2009 15:47:48 +0100
Subject: Staging: et131x: kill NMI hacks
To: greg@kroah.com
Message-ID: <20091006144746.8604.38272.stgit@localhost.localdomain>


The NMI code is in the shipped driver for "validation". We won't be doing
chip validation and we have proper core nmi handling so this can go.

Signed-off-by: Alan Cox <alan@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/et131x/et131x_adapter.h |    1 -
 drivers/staging/et131x/et131x_defs.h    |    1 -
 drivers/staging/et131x/et131x_initpci.c |   28 ----------------------------
 3 files changed, 30 deletions(-)

--- a/drivers/staging/et131x/et131x_adapter.h
+++ b/drivers/staging/et131x/et131x_adapter.h
@@ -235,7 +235,6 @@ struct et131x_adapter {
 	u32 RegistryJumboPacket;	/* Max supported ethernet packet size */
 
 	/* Validation helpers */
-	u8 RegistryNMIDisable;
 	u8 RegistryPhyLoopbk;	/* Enable Phy loopback */
 
 	/* Derived from the registry: */
--- a/drivers/staging/et131x/et131x_defs.h
+++ b/drivers/staging/et131x/et131x_defs.h
@@ -102,7 +102,6 @@
 
 /* Some offsets in PCI config space that are actually used. */
 #define ET1310_PCI_MAX_PYLD		0x4C
-#define ET1310_NMI_DISABLE		0x61
 #define ET1310_PCI_MAC_ADDRESS		0xA4
 #define ET1310_PCI_EEPROM_STATUS	0xB2
 #define ET1310_PCI_ACK_NACK		0xC0
--- a/drivers/staging/et131x/et131x_initpci.c
+++ b/drivers/staging/et131x/et131x_initpci.c
@@ -106,17 +106,6 @@
 #define PARM_SPEED_DUPLEX_MIN   0
 #define PARM_SPEED_DUPLEX_MAX   5
 
-/* Module parameter for disabling NMI
- * et131x_nmi_disable :
- * Disable NMI (0-2) [0]
- *  0 :
- *  1 :
- *  2 :
- */
-static u32 et131x_nmi_disable;	/* 0-2 */
-module_param(et131x_nmi_disable, uint, 0);
-MODULE_PARM_DESC(et131x_nmi_disable, "Disable NMI (0-2) [0]");
-
 /* Module parameter for manual speed setting
  * Set Link speed and dublex manually (0-5)  [0]
  *  1 : 10Mb   Half-Duplex
@@ -187,21 +176,6 @@ static int et131x_pci_init(struct et131x
 	u8 max_payload;
 	u8 read_size_reg;
 
-	/* Allow disabling of Non-Maskable Interrupts in I/O space, to
-	 * support validation.
-	 */
-	if (adapter->RegistryNMIDisable) {
-		uint8_t RegisterVal;
-
-		RegisterVal = inb(ET1310_NMI_DISABLE);
-		RegisterVal &= 0xf3;
-
-		if (adapter->RegistryNMIDisable == 2)
-			RegisterVal |= 0xc;
-
-		outb(ET1310_NMI_DISABLE, RegisterVal);
-	}
-
 	if (et131x_init_eeprom(adapter) < 0)
 		return -EIO;
 
@@ -613,8 +587,6 @@ static struct et131x_adapter *et131x_ada
 	etdev->SpeedDuplex = et131x_speed_set;
 	etdev->RegistryJumboPacket = 1514;	/* 1514-9216 */
 
-	etdev->RegistryNMIDisable = et131x_nmi_disable;
-
 	/* Set the MAC address to a default */
 	memcpy(etdev->CurrentAddress, default_mac, ETH_ALEN);
 
