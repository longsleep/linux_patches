From wfp5p@virginia.edu  Wed Apr 22 09:45:01 2009
From: Bill Pemberton <wfp5p@virginia.edu>
Date: Wed, 22 Apr 2009 08:59:15 -0400
Subject: Staging: pohmelfs: Remove braces around single statements
To: Greg KH <greg@kroah.com>
Cc: zbr@ioremap.net, Bill Pemberton <wfp5p@virginia.edu>
Message-ID: <1240405155-18317-4-git-send-email-wfp5p@virginia.edu>


Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
Cc: Evgeniy Polyakov <zbr@ioremap.net>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/pohmelfs/dir.c   |    7 +++----
 drivers/staging/pohmelfs/inode.c |    7 +++----
 drivers/staging/pohmelfs/net.c   |    4 ++--
 drivers/staging/pohmelfs/trans.c |    4 ++--
 4 files changed, 10 insertions(+), 12 deletions(-)

--- a/drivers/staging/pohmelfs/dir.c
+++ b/drivers/staging/pohmelfs/dir.c
@@ -692,9 +692,9 @@ static int pohmelfs_remove_entry(struct 
 	n = pohmelfs_search_hash(parent, str.hash);
 	if (n) {
 		pohmelfs_fix_offset(parent, n);
-		if (test_bit(NETFS_INODE_REMOTE_SYNCED, &pi->state)) {
+		if (test_bit(NETFS_INODE_REMOTE_SYNCED, &pi->state))
 			pohmelfs_remove_child(pi, n);
-		}
+
 		pohmelfs_name_free(parent, n);
 		err = 0;
 	}
@@ -1006,9 +1006,8 @@ static int pohmelfs_rename(struct inode 
 	pi = POHMELFS_I(inode);
 	old_parent = POHMELFS_I(old_dir);
 
-	if (new_dir) {
+	if (new_dir)
 		new_dir->i_sb->s_op->write_inode(new_dir, 0);
-	}
 
 	old_hash = jhash(old_dentry->d_name.name, old_dentry->d_name.len, 0);
 	str.hash = jhash(new_dentry->d_name.name, new_dentry->d_name.len, 0);
--- a/drivers/staging/pohmelfs/inode.c
+++ b/drivers/staging/pohmelfs/inode.c
@@ -1529,9 +1529,9 @@ static void pohmelfs_drop_scan(struct wo
 	struct pohmelfs_inode *pi;
 	unsigned int count = 0;
 
-	while ((pi = pohmelfs_get_inode_from_list(psb, &psb->drop_list, &count))) {
+	while ((pi = pohmelfs_get_inode_from_list(psb, &psb->drop_list, &count)))
 		pohmelfs_put_inode_count(pi, count);
-	}
+
 	pohmelfs_check_states(psb);
 
 	if (psb->drop_scan_timeout)
@@ -1568,9 +1568,8 @@ static void pohmelfs_trans_scan_state(st
 		rb_node = rb_next(rb_node);
 
 		err = -ETIMEDOUT;
-		if (timeout && (++dst->retries < psb->trans_retries)) {
+		if (timeout && (++dst->retries < psb->trans_retries))
 			err = netfs_trans_resend(t, psb);
-		}
 
 		if (err || (t->flags & NETFS_TRANS_SINGLE_DST)) {
 			if (netfs_trans_remove_nolock(dst, st))
--- a/drivers/staging/pohmelfs/net.c
+++ b/drivers/staging/pohmelfs/net.c
@@ -914,9 +914,9 @@ static int pohmelfs_recv(void *data)
 				unsigned char *hash = e->data;
 
 				dprintk("%s: received hash: ", __func__);
-				for (i=0; i<cmd->csize; ++i) {
+				for (i=0; i<cmd->csize; ++i)
 					printk("%02x ", hash[i]);
-				}
+
 				printk("\n");
 			}
 #endif
--- a/drivers/staging/pohmelfs/trans.c
+++ b/drivers/staging/pohmelfs/trans.c
@@ -178,9 +178,9 @@ int netfs_trans_send(struct netfs_trans 
 
 err_out_unlock_return:
 
-	if (st->need_reset) {
+	if (st->need_reset)
 		netfs_state_exit(st);
-	}
+
 	netfs_state_unlock_send(st);
 
 	dprintk("%s: t: %p, gen: %u, err: %d.\n",
