From wfp5p@virginia.edu Wed Mar 25 08:05:28 2009
From: Bill Pemberton <wfp5p@virginia.edu>
Date: Wed, 25 Mar 2009 11:05:25 -0400
Subject: Staging: comedi: Remove DWORD and *PDWORD typedefs in addi-data
To: greg@kroah.com
Cc: abbotti@mev.co.uk, "fmhess@users.sourceforge.netds"@schleef.org
Message-ID: <20090325150525.13323.56556.stgit@viridian.itc.Virginia.EDU>


Signed-off-by: Bill Pemberton <wfp5p@virginia.edu>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---

 drivers/staging/comedi/drivers/addi-data/APCI1710_82x54.c   |   14 +--
 drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c  |   10 +-
 drivers/staging/comedi/drivers/addi-data/APCI1710_Dig_io.c  |   12 +-
 drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c  |   26 +++---
 drivers/staging/comedi/drivers/addi-data/APCI1710_Inp_cpt.c |    4 
 drivers/staging/comedi/drivers/addi-data/APCI1710_Pwm.c     |   18 ++--
 drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c     |   12 +-
 drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c     |   14 +--
 drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c     |    6 -
 drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.c  |    8 -
 drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.h  |    2 
 drivers/staging/comedi/drivers/addi-data/addi_common.c      |    2 
 drivers/staging/comedi/drivers/addi-data/addi_common.h      |   19 ++--
 drivers/staging/comedi/drivers/addi-data/addi_eeprom.c      |   46 ++++-------
 drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c   |    2 
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci16xx.c   |    4 
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c   |   12 +-
 drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c   |   50 ++++++------
 18 files changed, 127 insertions(+), 134 deletions(-)

--- a/drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.c
+++ b/drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.c
@@ -51,14 +51,14 @@ You shoud also find the complete GPL in 
 /*+----------------------------------------------------------------------------+*/
 /*| Function   Name   : int i_AddiHeaderRW_ReadEeprom                          |*/
 /*|                               (int    i_NbOfWordsToRead,                   |*/
-/*|                                DWORD dw_PCIBoardEepromAddress,             |*/
+/*|                                unsigned int dw_PCIBoardEepromAddress,             |*/
 /*|                                unsigned short   w_EepromStartAddress,                |*/
 /*|                                unsigned short * pw_DataRead)                          |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Task              : Read word from the 5920 eeprom.                        |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Input Parameters  : int    i_NbOfWordsToRead : Nbr. of word to read        |*/
-/*|                     DWORD dw_PCIBoardEepromAddress : Address of the eeprom |*/
+/*|                     unsigned int dw_PCIBoardEepromAddress : Address of the eeprom |*/
 /*|                     unsigned short   w_EepromStartAddress : Eeprom strat address     |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Output Parameters : unsigned short * pw_DataRead : Read data                          |*/
@@ -67,10 +67,10 @@ You shoud also find the complete GPL in 
 /*+----------------------------------------------------------------------------+*/
 
 int i_AddiHeaderRW_ReadEeprom(int i_NbOfWordsToRead,
-	DWORD dw_PCIBoardEepromAddress,
+	unsigned int dw_PCIBoardEepromAddress,
 	unsigned short w_EepromStartAddress, unsigned short * pw_DataRead)
 {
-	DWORD dw_eeprom_busy = 0;
+	unsigned int dw_eeprom_busy = 0;
 	int i_Counter = 0;
 	int i_WordCounter;
 	int i;
--- a/drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.h
+++ b/drivers/staging/comedi/drivers/addi-data/addi_amcc_S5920.h
@@ -23,5 +23,5 @@
 #define NVCMD_BEGIN_WRITE	(0x6 << 5)	/* EEPROM begin write command */
 
 int i_AddiHeaderRW_ReadEeprom(int i_NbOfWordsToRead,
-			      DWORD dw_PCIBoardEepromAddress,
+			      unsigned int dw_PCIBoardEepromAddress,
 			      unsigned short w_EepromStartAddress, unsigned short * pw_DataRead);
--- a/drivers/staging/comedi/drivers/addi-data/addi_common.c
+++ b/drivers/staging/comedi/drivers/addi-data/addi_common.c
@@ -2563,7 +2563,7 @@ static int i_ADDI_Attach(struct comedi_d
 {
 	struct comedi_subdevice *s;
 	int ret, pages, i, n_subdevices;
-	DWORD dw_Dummy;
+	unsigned int dw_Dummy;
 	resource_size_t io_addr[5];
 	unsigned int irq;
 	resource_size_t iobase_a, iobase_main, iobase_addon, iobase_reserved;
--- a/drivers/staging/comedi/drivers/addi-data/addi_common.h
+++ b/drivers/staging/comedi/drivers/addi-data/addi_common.h
@@ -37,7 +37,6 @@
 #define SUCCESS	1
 
 /* variable type definition */
-typedef unsigned int DWORD, *PDWORD;	/* 32-bit */
 typedef unsigned long ULONG_PTR;
 
 typedef const struct comedi_lrange *PCRANGE;
@@ -219,7 +218,7 @@ typedef union {
 				unsigned char b_ModeRegister3;
 				unsigned char b_ModeRegister4;
 			} s_ByteModeRegister;
-			DWORD dw_ModeRegister1_2_3_4;
+			unsigned int dw_ModeRegister1_2_3_4;
 		} s_ModeRegister;
 
 		struct {
@@ -254,7 +253,7 @@ typedef union {
 		unsigned char b_ChannelAMode;
 		unsigned char b_ChannelBMode;
 		unsigned char b_OutputMemoryEnabled;
-		DWORD dw_OutputMemory;
+		unsigned int dw_OutputMemory;
 	} s_DigitalIOInfo;
 
       /*********************/
@@ -268,7 +267,7 @@ typedef union {
 			unsigned char b_InputClockLevel;
 			unsigned char b_OutputLevel;
 			unsigned char b_HardwareGateLevel;
-			DWORD dw_ConfigurationWord;
+			unsigned int dw_ConfigurationWord;
 		} s_82X54TimerInfo[3];
 		unsigned char b_InterruptMask;
 	} s_82X54ModuleInfo;
@@ -284,7 +283,7 @@ typedef union {
 		unsigned char b_TimingUnit;
 		unsigned char b_CycleMode;
 		double d_TimingInterval;
-		DWORD dw_ConfigReg;
+		unsigned int dw_ConfigReg;
 	} s_ChronoModuleInfo;
 
       /***********************/
@@ -295,9 +294,9 @@ typedef union {
 		struct {
 			unsigned char b_PulseEncoderInit;
 		} s_PulseEncoderInfo[4];
-		DWORD dw_SetRegister;
-		DWORD dw_ControlRegister;
-		DWORD dw_StatusRegister;
+		unsigned int dw_SetRegister;
+		unsigned int dw_ControlRegister;
+		unsigned int dw_StatusRegister;
 	} s_PulseEncoderModuleInfo;
 
 	/* Tor conter infos */
@@ -372,7 +371,7 @@ typedef struct {
 	unsigned int ui_AiChannelList[32];	// actual chanlist
 	unsigned char b_AiChannelConfiguration[32];	// actual chanlist
 	unsigned int ui_AiReadData[32];
-	DWORD dw_AiInitialised;
+	unsigned int dw_AiInitialised;
 	unsigned int ui_AiTimer0;	//Timer Constant for Timer0
 	unsigned int ui_AiTimer1;	//Timer constant for Timer1
 	unsigned int ui_AiFlags;
@@ -421,7 +420,7 @@ typedef struct {
 		unsigned char b_InterruptNbr;	/* Board interrupt number */
 		unsigned char b_SlotNumber;	/* PCI slot number */
 		unsigned char b_BoardVersion;
-		DWORD dw_MolduleConfiguration[4];	/* Module config */
+		unsigned int dw_MolduleConfiguration[4];	/* Module config */
 	} s_BoardInfos;
 
 	/* Interrupt infos */
--- a/drivers/staging/comedi/drivers/addi-data/addi_eeprom.c
+++ b/drivers/staging/comedi/drivers/addi-data/addi_eeprom.c
@@ -51,12 +51,6 @@ You shoud also find the complete GPL in 
 #define EE76_CMD_LEN    	13	// bits in instructions
 #define EE_READ         	0x0180	// 01 1000 0000 read instruction
 
-#define PDWORD				unsigned int  *
-
-#ifndef DWORD
-#define	DWORD				unsigned int
-#endif
-
 #define EEPROM_DIGITALINPUT 			0
 #define EEPROM_DIGITALOUTPUT			1
 #define EEPROM_ANALOGINPUT				2
@@ -147,11 +141,11 @@ int i_EepromReadAnlogInputHeader(unsigne
 unsigned short w_EepromReadWord(unsigned short w_PCIBoardEepromAddress, char *pc_PCIChipInformation,
 	unsigned short w_EepromStartAddress);
 void v_EepromWaitBusy(unsigned short w_PCIBoardEepromAddress);
-void v_EepromClock76(DWORD dw_Address, DWORD dw_RegisterValue);
+void v_EepromClock76(unsigned int dw_Address, unsigned int dw_RegisterValue);
 void v_EepromWaitBusy(unsigned short w_PCIBoardEepromAddress);
-void v_EepromSendCommand76(DWORD dw_Address, DWORD dw_EepromCommand,
+void v_EepromSendCommand76(unsigned int dw_Address, unsigned int dw_EepromCommand,
 	unsigned char b_DataLengthInBits);
-void v_EepromCs76Read(DWORD dw_Address, unsigned short w_offset, unsigned short * pw_Value);
+void v_EepromCs76Read(unsigned int dw_Address, unsigned short w_offset, unsigned short * pw_Value);
 
 /*
 +----------------------------------------------------------------------------+
@@ -403,7 +397,7 @@ void v_EepromWaitBusy(unsigned short w_P
 
 		/*      unsigned short read  EEPROM=0x8000 andAMCC_OP_REG_MCSR+2                  */
 
-		/*      DWORD read  EEPROM=0x80000000 and AMCC_OP_REG_MCSR */
+		/*      unsigned int read  EEPROM=0x80000000 and AMCC_OP_REG_MCSR */
 
 	   /************************************************************************/
 
@@ -419,9 +413,9 @@ void v_EepromWaitBusy(unsigned short w_P
 
 +---------------------------------------------------------------------------------+
 
-| Function   Name   : void v_EepromClock76(DWORD dw_Address,                      |
+| Function   Name   : void v_EepromClock76(unsigned int dw_Address,                      |
 
-|					   DWORD dw_RegisterValue)                 			  |
+|					   unsigned int dw_RegisterValue)                 			  |
 
 +---------------------------------------------------------------------------------+
 
@@ -429,9 +423,9 @@ void v_EepromWaitBusy(unsigned short w_P
 
 +---------------------------------------------------------------------------------+
 
-| Input Parameters  : DWORD dw_Address : PCI eeprom base address                  |
+| Input Parameters  : unsigned int dw_Address : PCI eeprom base address                  |
 
-|		      DWORD dw_RegisterValue : PCI eeprom register value to write.|
+|		      unsigned int dw_RegisterValue : PCI eeprom register value to write.|
 
 +---------------------------------------------------------------------------------+
 
@@ -445,7 +439,7 @@ void v_EepromWaitBusy(unsigned short w_P
 
 */
 
-void v_EepromClock76(DWORD dw_Address, DWORD dw_RegisterValue)
+void v_EepromClock76(unsigned int dw_Address, unsigned int dw_RegisterValue)
 {
 
    /************************/
@@ -486,9 +480,9 @@ void v_EepromClock76(DWORD dw_Address, D
 
 +---------------------------------------------------------------------------------+
 
-| Function   Name   : void v_EepromSendCommand76(DWORD dw_Address,                |
+| Function   Name   : void v_EepromSendCommand76(unsigned int dw_Address,                |
 
-|					   DWORD   dw_EepromCommand,                		  |
+|					   unsigned int   dw_EepromCommand,                		  |
 
 |					   unsigned char    b_DataLengthInBits)                        |
 
@@ -498,9 +492,9 @@ void v_EepromClock76(DWORD dw_Address, D
 
 +---------------------------------------------------------------------------------+
 
-| Input Parameters  : DWORD dw_Address : PCI eeprom base address                  |
+| Input Parameters  : unsigned int dw_Address : PCI eeprom base address                  |
 
-|		      DWORD dw_EepromCommand : PCI eeprom command to write.       |
+|		      unsigned int dw_EepromCommand : PCI eeprom command to write.       |
 
 |		      unsigned char  b_DataLengthInBits : PCI eeprom command data length.  |
 
@@ -516,13 +510,13 @@ void v_EepromClock76(DWORD dw_Address, D
 
 */
 
-void v_EepromSendCommand76(DWORD dw_Address, DWORD dw_EepromCommand,
+void v_EepromSendCommand76(unsigned int dw_Address, unsigned int dw_EepromCommand,
 	unsigned char b_DataLengthInBits)
 {
 
 	char c_BitPos = 0;
 
-	DWORD dw_RegisterValue = 0;
+	unsigned int dw_RegisterValue = 0;
 
    /*****************************/
 
@@ -621,7 +615,7 @@ void v_EepromSendCommand76(DWORD dw_Addr
 
 +---------------------------------------------------------------------------------+
 
-| Function   Name   : void v_EepromCs76Read(DWORD dw_Address,                     |
+| Function   Name   : void v_EepromCs76Read(unsigned int dw_Address,                     |
 
 |					   unsigned short    w_offset,                      			  |
 
@@ -633,7 +627,7 @@ void v_EepromSendCommand76(DWORD dw_Addr
 
 +---------------------------------------------------------------------------------+
 
-| Input Parameters  : DWORD dw_Address : PCI eeprom base address                  |
+| Input Parameters  : unsigned int dw_Address : PCI eeprom base address                  |
 
 |		      unsigned short    w_offset : Offset of the adress to read             |
 
@@ -651,14 +645,14 @@ void v_EepromSendCommand76(DWORD dw_Addr
 
 */
 
-void v_EepromCs76Read(DWORD dw_Address, unsigned short w_offset, unsigned short * pw_Value)
+void v_EepromCs76Read(unsigned int dw_Address, unsigned short w_offset, unsigned short * pw_Value)
 {
 
         char c_BitPos = 0;
 
-	DWORD dw_RegisterValue = 0;
+	unsigned int dw_RegisterValue = 0;
 
-	DWORD dw_RegisterValueRead = 0;
+	unsigned int dw_RegisterValueRead = 0;
 
    /*************************************************/
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_82x54.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_82x54.c
@@ -234,7 +234,7 @@ int i_APCI1710_InsnConfigInitTimer(struc
 	unsigned char b_HardwareGateLevel;
 
 	//BEGIN JK 27.10.2003 : Add the possibility to use a 40 Mhz quartz
-	DWORD dw_Test = 0;
+	unsigned int dw_Test = 0;
 	//END JK 27.10.2003 : Add the possibility to use a 40 Mhz quartz
 
 	i_ReturnValue = insn->n;
@@ -319,7 +319,7 @@ int i_APCI1710_InsnConfigInitTimer(struc
 											   devpriv->s_ModuleInfo [b_ModulNbr].
 											   s_82X54ModuleInfo.
 											   s_82X54TimerInfo  [b_TimerNbr].
-											   dw_ConfigurationWord = (DWORD) (((b_HardwareGateLevel         << 0) & 0x1) |
+											   dw_ConfigurationWord = (unsigned int) (((b_HardwareGateLevel         << 0) & 0x1) |
 											   ((b_InputClockLevel           << 1) & 0x2) |
 											   (((~b_OutputLevel       & 1)  << 2) & 0x4) |
 											   ((b_InputClockSelection       << 4) & 0x10));
@@ -329,12 +329,12 @@ int i_APCI1710_InsnConfigInitTimer(struc
 												b_InputClockSelection = 2;
 											}
 
-											devpriv->s_ModuleInfo[b_ModulNbr].s_82X54ModuleInfo.s_82X54TimerInfo[b_TimerNbr].dw_ConfigurationWord = (DWORD)(((b_HardwareGateLevel << 0) & 0x1) | ((b_InputClockLevel << 1) & 0x2) | (((~b_OutputLevel & 1) << 2) & 0x4) | ((b_InputClockSelection << 4) & 0x30));
+											devpriv->s_ModuleInfo[b_ModulNbr].s_82X54ModuleInfo.s_82X54TimerInfo[b_TimerNbr].dw_ConfigurationWord = (unsigned int)(((b_HardwareGateLevel << 0) & 0x1) | ((b_InputClockLevel << 1) & 0x2) | (((~b_OutputLevel & 1) << 2) & 0x4) | ((b_InputClockSelection << 4) & 0x30));
 											//END JK 27.10.03 : Add the possibility to use a 40 Mhz quartz
 											outl(devpriv->s_ModuleInfo[b_ModulNbr].s_82X54ModuleInfo.s_82X54TimerInfo[b_TimerNbr].dw_ConfigurationWord, devpriv->s_BoardInfos.ui_Address + 32 + (b_TimerNbr * 4) + (64 * b_ModulNbr));
 
 											/* Initialise the 82X54 Timer */
-											outl((DWORD) b_TimerMode, devpriv->s_BoardInfos.ui_Address + 16 + (b_TimerNbr * 4) + (64 * b_ModulNbr));
+											outl((unsigned int) b_TimerMode, devpriv->s_BoardInfos.ui_Address + 16 + (b_TimerNbr * 4) + (64 * b_ModulNbr));
 
 											/* Write the reload value */
 											outl(ul_ReloadValue, devpriv->s_BoardInfos.ui_Address + 0 + (b_TimerNbr * 4) + (64 * b_ModulNbr));
@@ -453,7 +453,7 @@ int i_APCI1710_InsnWriteEnableDisableTim
 					   struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_DummyRead;
+	unsigned int dw_DummyRead;
 	unsigned char b_ModulNbr;
 	unsigned char b_TimerNbr;
 	unsigned char b_ActionType;
@@ -853,7 +853,7 @@ int i_APCI1710_GetTimerOutputLevel(struc
 				   unsigned char * pb_OutputLevel)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_TimerStatus;
+	unsigned int dw_TimerStatus;
 
 	/* Test the module number */
 	if (b_ModulNbr < 4) {
@@ -932,7 +932,7 @@ int i_APCI1710_GetTimerProgressStatus(st
 				      unsigned char * pb_TimerStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_TimerStatus;
+	unsigned int dw_TimerStatus;
 
 	/* Test the module number */
 	if (b_ModulNbr < 4) {
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Chrono.c
@@ -139,7 +139,7 @@ int i_APCI1710_InsnConfigInitChrono(stru
 	unsigned int ul_TimingInterval = 0;
 	unsigned int ul_RealTimingInterval = 0;
 	double d_RealTimingInterval = 0;
-	DWORD dw_ModeArray[8] =
+	unsigned int dw_ModeArray[8] =
 		{ 0x01, 0x05, 0x00, 0x04, 0x02, 0x0E, 0x0A, 0x06 };
 	unsigned char b_ModulNbr, b_ChronoMode, b_PCIInputClock, b_TimingUnit;
 
@@ -1198,7 +1198,7 @@ int i_APCI1710_GetChronoProgressStatus(s
 	unsigned char b_ModulNbr, unsigned char * pb_ChronoStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 
 	/**************************/
 	/* Test the module number */
@@ -1360,8 +1360,8 @@ int i_APCI1710_ReadChronoValue(struct co
 	unsigned int ui_TimeOut, unsigned char * pb_ChronoStatus, unsigned int * pul_ChronoValue)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
-	DWORD dw_TimeOut = 0;
+	unsigned int dw_Status;
+	unsigned int dw_TimeOut = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -1881,7 +1881,7 @@ int i_APCI1710_InsnBitsChronoDigitalIO(s
 {
 	int i_ReturnValue = 0;
 	unsigned char b_ModulNbr, b_OutputChannel, b_InputChannel, b_IOType;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 	unsigned char * pb_ChannelStatus;
 	unsigned char * pb_PortValue;
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Dig_io.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Dig_io.c
@@ -105,7 +105,7 @@ int i_APCI1710_InsnConfigDigitalIO(struc
 	unsigned char b_ModulNbr, b_ChannelAMode, b_ChannelBMode;
 	unsigned char b_MemoryOnOff, b_ConfigType;
 	int i_ReturnValue = 0;
-	DWORD dw_WriteConfig = 0;
+	unsigned int dw_WriteConfig = 0;
 
 	b_ModulNbr = (unsigned char) CR_AREF(insn->chanspec);
 	b_ConfigType = (unsigned char) data[0];	// Memory or  Init
@@ -197,7 +197,7 @@ int i_APCI1710_InsnConfigDigitalIO(struc
 	/*****************************************/
 
 					dw_WriteConfig =
-						(DWORD) (b_ChannelAMode |
+						(unsigned int) (b_ChannelAMode |
 						(b_ChannelBMode * 2));
 
 	/***************************/
@@ -297,7 +297,7 @@ int i_APCI1710_InsnReadDigitalIOChlValue
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg;
+	unsigned int dw_StatusReg;
 	unsigned char b_ModulNbr, b_InputChannel;
 	unsigned char * pb_ChannelStatus;
 	b_ModulNbr = (unsigned char) CR_AREF(insn->chanspec);
@@ -485,7 +485,7 @@ int i_APCI1710_InsnWriteDigitalIOChlOnOf
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_WriteValue = 0;
+	unsigned int dw_WriteValue = 0;
 	unsigned char b_ModulNbr, b_OutputChannel;
 	i_ReturnValue = insn->n;
 	b_ModulNbr = CR_AREF(insn->chanspec);
@@ -732,8 +732,8 @@ int i_APCI1710_InsnBitsDigitalIOPortOnOf
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_WriteValue = 0;
-	DWORD dw_StatusReg;
+	unsigned int dw_WriteValue = 0;
+	unsigned int dw_StatusReg;
 	unsigned char b_ModulNbr, b_PortValue;
 	unsigned char b_PortOperation, b_PortOnOFF;
 
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_INCCPT.c
@@ -549,7 +549,7 @@ int i_APCI1710_CounterAutoTest(struct co
 {
 	unsigned char b_ModulCpt = 0;
 	int i_ReturnValue = 0;
-	DWORD dw_LathchValue;
+	unsigned int dw_LathchValue;
 
 	*pb_TestStatus = 0;
 
@@ -1496,7 +1496,7 @@ int i_APCI1710_InitFrequencyMeasurement(
 	int i_ReturnValue = 0;
 	unsigned int ul_TimerValue = 0;
 	double d_RealTimingInterval;
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -2301,7 +2301,7 @@ int i_APCI1710_SetInputFilter(struct com
 	unsigned char b_ModulNbr, unsigned char b_PCIInputClock, unsigned char b_Filter)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4197,7 +4197,7 @@ int i_APCI1710_ReadLatchRegisterStatus(s
 	unsigned char b_ModulNbr, unsigned char b_LatchReg, unsigned char * pb_LatchStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_LatchReg;
+	unsigned int dw_LatchReg;
 
 	/**************************/
 	/* Test the module number */
@@ -4368,7 +4368,7 @@ int i_APCI1710_Read16BitCounterValue(str
 	unsigned char b_ModulNbr, unsigned char b_SelectedCounter, unsigned int * pui_CounterValue)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_LathchValue = 0;
+	unsigned int dw_LathchValue = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4539,7 +4539,7 @@ int i_APCI1710_GetIndexStatus(struct com
 	unsigned char b_ModulNbr, unsigned char * pb_IndexStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4623,7 +4623,7 @@ int i_APCI1710_GetReferenceStatus(struct
 	unsigned char b_ModulNbr, unsigned char * pb_ReferenceStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4707,7 +4707,7 @@ int i_APCI1710_GetUASStatus(struct comed
 	unsigned char b_ModulNbr, unsigned char * pb_UASStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4775,7 +4775,7 @@ int i_APCI1710_GetCBStatus(struct comedi
 	unsigned char b_ModulNbr, unsigned char * pb_CBStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4857,7 +4857,7 @@ int i_APCI1710_Get16BitCBStatus(struct c
 	unsigned char b_ModulNbr, unsigned char * pb_CBStatusCounter0, unsigned char * pb_CBStatusCounter1)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -4970,7 +4970,7 @@ int i_APCI1710_GetUDStatus(struct comedi
 	unsigned char b_ModulNbr, unsigned char * pb_UDStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -5044,7 +5044,7 @@ int i_APCI1710_GetInterruptUDLatchedStat
 	unsigned char b_ModulNbr, unsigned char * pb_UDStatus)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 
 	/**************************/
 	/* Test the module number */
@@ -5151,7 +5151,7 @@ int i_APCI1710_ReadFrequencyMeasurement(
 {
 	int i_ReturnValue = 0;
 	unsigned int ui_16BitValue;
-	DWORD dw_StatusReg;
+	unsigned int dw_StatusReg;
 
 	/**************************/
 	/* Test the module number */
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Inp_cpt.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Inp_cpt.c
@@ -127,7 +127,7 @@ int i_APCI1710_InsnConfigInitPulseEncode
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_IntRegister;
+	unsigned int dw_IntRegister;
 
 	unsigned char b_ModulNbr;
 	unsigned char b_PulseEncoderNbr;
@@ -712,7 +712,7 @@ int i_APCI1710_InsnBitsReadWritePulseEnc
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusRegister;
+	unsigned int dw_StatusRegister;
 	unsigned char b_ModulNbr;
 	unsigned char b_PulseEncoderNbr;
 	unsigned char * pb_Status;
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Pwm.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Pwm.c
@@ -191,7 +191,7 @@ int i_APCI1710_InitPWM(struct comedi_dev
 	int i_ReturnValue = 0;
 	unsigned int ul_LowTimerValue = 0;
 	unsigned int ul_HighTimerValue = 0;
-	DWORD dw_Command;
+	unsigned int dw_Command;
 	double d_RealLowTiming = 0;
 	double d_RealHighTiming = 0;
 
@@ -1546,8 +1546,8 @@ int i_APCI1710_GetPWMInitialisation(stru
 	unsigned char * pb_ExternGate, unsigned char * pb_InterruptEnable, unsigned char * pb_Enable)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
-	DWORD dw_Command;
+	unsigned int dw_Status;
+	unsigned int dw_Command;
 
 	/**************************/
 	/* Test the module number */
@@ -1814,8 +1814,8 @@ int i_APCI1710_EnablePWM(struct comedi_d
 	unsigned char b_StopLevel, unsigned char b_ExternGate, unsigned char b_InterruptEnable)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
-	DWORD dw_Command;
+	unsigned int dw_Status;
+	unsigned int dw_Command;
 
 	devpriv->tsk_Current = current;	// Save the current process task structure
 	/**************************/
@@ -2065,7 +2065,7 @@ int i_APCI1710_EnablePWM(struct comedi_d
 int i_APCI1710_DisablePWM(struct comedi_device * dev, unsigned char b_ModulNbr, unsigned char b_PWM)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 
 	/**************************/
 	/* Test the module number */
@@ -2199,8 +2199,8 @@ int i_APCI1710_SetNewPWMTiming(struct co
 	unsigned int ul_HighTimerValue = 0;
 	unsigned int ul_RealLowTiming = 0;
 	unsigned int ul_RealHighTiming = 0;
-	DWORD dw_Status;
-	DWORD dw_Command;
+	unsigned int dw_Status;
+	unsigned int dw_Command;
 	double d_RealLowTiming = 0;
 	double d_RealHighTiming = 0;
 
@@ -3464,7 +3464,7 @@ int i_APCI1710_InsnReadGetPWMStatus(stru
 	struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 
 	unsigned char b_ModulNbr;
 	unsigned char b_PWM;
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Ssi.c
@@ -408,11 +408,11 @@ int i_APCI1710_InsnReadSSIValue(struct c
 	unsigned char b_Length;
 	unsigned char b_Schift;
 	unsigned char b_SSICpt;
-	DWORD dw_And;
-	DWORD dw_And1;
-	DWORD dw_And2;
-	DWORD dw_StatusReg;
-	DWORD dw_CounterValue;
+	unsigned int dw_And;
+	unsigned int dw_And1;
+	unsigned int dw_And2;
+	unsigned int dw_StatusReg;
+	unsigned int dw_CounterValue;
 	unsigned char b_ModulNbr;
 	unsigned char b_SelectedSSI;
 	unsigned char b_ReadType;
@@ -739,7 +739,7 @@ int i_APCI1710_InsnBitsSSIDigitalIO(stru
 	struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg;
+	unsigned int dw_StatusReg;
 	unsigned char b_ModulNbr;
 	unsigned char b_InputChannel;
 	unsigned char * pb_ChannelStatus;
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Tor.c
@@ -135,7 +135,7 @@ int i_APCI1710_InsnConfigInitTorCounter(
 {
 	int i_ReturnValue = 0;
 	unsigned int ul_TimerValue = 0;
-	DWORD dw_Command;
+	unsigned int dw_Command;
 	double d_RealTimingInterval = 0;
 	unsigned char b_ModulNbr;
 	unsigned char b_TorCounter;
@@ -991,9 +991,9 @@ int i_APCI1710_InsnWriteEnableDisableTor
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
-	DWORD dw_DummyRead;
-	DWORD dw_ConfigReg;
+	unsigned int dw_Status;
+	unsigned int dw_DummyRead;
+	unsigned int dw_ConfigReg;
 	unsigned char b_ModulNbr, b_Action;
 	unsigned char b_TorCounter;
 	unsigned char b_InputMode;
@@ -1464,7 +1464,7 @@ int i_APCI1710_InsnReadGetTorCounterInit
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 	unsigned char b_ModulNbr;
 	unsigned char b_TorCounter;
 	unsigned char * pb_TimingUnit;
@@ -1704,8 +1704,8 @@ int i_APCI1710_InsnBitsGetTorCounterProg
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_Status;
-	DWORD dw_TimeOut = 0;
+	unsigned int dw_Status;
+	unsigned int dw_TimeOut = 0;
 
 	unsigned char b_ModulNbr;
 	unsigned char b_TorCounter;
--- a/drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c
+++ b/drivers/staging/comedi/drivers/addi-data/APCI1710_Ttl.c
@@ -410,7 +410,7 @@ int i_APCI1710_InsnBitsReadTTLIO(struct 
 	struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg;
+	unsigned int dw_StatusReg;
 	unsigned char b_ModulNbr;
 	unsigned char b_SelectedPort;
 	unsigned char b_InputChannel;
@@ -659,7 +659,7 @@ int i_APCI1710_InsnReadTTLIOAllPortValue
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg;
+	unsigned int dw_StatusReg;
 	unsigned char b_ModulNbr;
 	unsigned int * pul_PortValue;
 
@@ -829,7 +829,7 @@ int i_APCI1710_InsnWriteSetTTLIOChlOnOff
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = 0;
-	DWORD dw_StatusReg = 0;
+	unsigned int dw_StatusReg = 0;
 	unsigned char b_ModulNbr;
 	unsigned char b_OutputChannel;
 	unsigned int ui_State;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci16xx.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci16xx.c
@@ -293,7 +293,7 @@ int i_APCI16XX_InsnBitsReadTTLIO(struct 
 	unsigned char b_SelectedPort = CR_RANGE(insn->chanspec);
 	unsigned char b_InputChannel = CR_CHAN(insn->chanspec);
 	unsigned char *pb_Status;
-	DWORD dw_Status;
+	unsigned int dw_Status;
 
 	/************************/
 	/* Test the buffer size */
@@ -579,7 +579,7 @@ int i_APCI16XX_InsnBitsWriteTTLIO(struct
 		(unsigned char) (devpriv->ps_BoardInfo->i_NbrTTLChannel / 8);
 	unsigned char b_SelectedPort = CR_RANGE(insn->chanspec);
 	unsigned char b_OutputChannel = CR_CHAN(insn->chanspec);
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_APCI1710.c
@@ -202,7 +202,7 @@ void v_APCI1710_Interrupt(int irq, void 
 int i_APCI1710_Reset(struct comedi_device * dev)
 {
 	int ret;
-	DWORD dw_Dummy;
+	unsigned int dw_Dummy;
 
 	/*********************************/
 	/* Read all module configuration */
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3200.c
@@ -95,14 +95,14 @@ str_BoardInfos s_BoardInfos[100];	// 100
 /*+----------------------------------------------------------------------------+*/
 /*| Function   Name   : int i_AddiHeaderRW_ReadEeprom                          |*/
 /*|                               (int    i_NbOfWordsToRead,                   |*/
-/*|                                DWORD dw_PCIBoardEepromAddress,             |*/
+/*|                                unsigned int dw_PCIBoardEepromAddress,             |*/
 /*|                                unsigned short   w_EepromStartAddress,                |*/
 /*|                                unsigned short * pw_DataRead)                          |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Task              : Read word from the 5920 eeprom.                        |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Input Parameters  : int    i_NbOfWordsToRead : Nbr. of word to read        |*/
-/*|                     DWORD dw_PCIBoardEepromAddress : Address of the eeprom |*/
+/*|                     unsigned int dw_PCIBoardEepromAddress : Address of the eeprom |*/
 /*|                     unsigned short   w_EepromStartAddress : Eeprom strat address     |*/
 /*+----------------------------------------------------------------------------+*/
 /*| Output Parameters : unsigned short * pw_DataRead : Read data                          |*/
@@ -111,10 +111,10 @@ str_BoardInfos s_BoardInfos[100];	// 100
 /*+----------------------------------------------------------------------------+*/
 
 int i_AddiHeaderRW_ReadEeprom(int i_NbOfWordsToRead,
-	DWORD dw_PCIBoardEepromAddress,
+	unsigned int dw_PCIBoardEepromAddress,
 	unsigned short w_EepromStartAddress, unsigned short * pw_DataRead)
 {
-	DWORD dw_eeprom_busy = 0;
+	unsigned int dw_eeprom_busy = 0;
 	int i_Counter = 0;
 	int i_WordCounter;
 	int i;
@@ -258,7 +258,7 @@ int i_AddiHeaderRW_ReadEeprom(int i_NbOf
 /*| Return Value      : -                                                      |*/
 /*+----------------------------------------------------------------------------+*/
 
-void v_GetAPCI3200EepromCalibrationValue(DWORD dw_PCIBoardEepromAddress,
+void v_GetAPCI3200EepromCalibrationValue(unsigned int dw_PCIBoardEepromAddress,
 	str_BoardInfos * BoardInformations)
 {
 	unsigned short w_AnalogInputMainHeaderAddress;
@@ -3004,7 +3004,7 @@ int i_APCI3200_CommandAnalogInput(struct
 int i_APCI3200_Reset(struct comedi_device * dev)
 {
 	int i_Temp;
-	DWORD dw_Dummy;
+	unsigned int dw_Dummy;
 	//i_InterruptFlag=0;
 	//i_Initialised==0;
 	//i_Count=0;
--- a/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c
+++ b/drivers/staging/comedi/drivers/addi-data/hwdrv_apci3xxx.c
@@ -89,7 +89,7 @@ int i_APCI3XXX_TestConversionStarted(str
 +----------------------------------------------------------------------------+
 | Input Parameters  : b_SingleDiff  = (unsigned char)  data[1];                       |
 |                     b_TimeBase    = (unsigned char)  data[2]; (0: ns, 1:micros 2:ms)|
-|                    dw_ReloadValue = (DWORD) data[3];                       |
+|                    dw_ReloadValue = (unsigned int) data[3];                       |
 |                     ........                                               |
 +----------------------------------------------------------------------------+
 | Output Parameters : -                                                      |
@@ -111,8 +111,8 @@ int i_APCI3XXX_AnalogInputConfigOperatin
 	int i_ReturnValue = insn->n;
 	unsigned char b_TimeBase = 0;
 	unsigned char b_SingleDiff = 0;
-	DWORD dw_ReloadValue = 0;
-	DWORD dw_TestReloadValue = 0;
+	unsigned int dw_ReloadValue = 0;
+	unsigned int dw_TestReloadValue = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -135,7 +135,7 @@ int i_APCI3XXX_AnalogInputConfigOperatin
 		/* Get the convert time reload value */
 	   /*************************************/
 
-		dw_ReloadValue = (DWORD) data[3];
+		dw_ReloadValue = (unsigned int) data[3];
 
 	   /**********************/
 		/* Test the time base */
@@ -204,7 +204,7 @@ int i_APCI3XXX_AnalogInputConfigOperatin
 								/* Set the convert timing unit */
 			      /*******************************/
 
-								writel((DWORD)
+								writel((unsigned int)
 									b_TimeBase,
 									(void *)
 									(devpriv->
@@ -283,7 +283,7 @@ int i_APCI3XXX_AnalogInputConfigOperatin
 +----------------------------------------------------------------------------+
 | Input Parameters  : b_ConvertMode = (unsigned char)  data[0];                       |
 |                     b_TimeBase    = (unsigned char)  data[1]; (0: ns, 1:micros 2:ms)|
-|                    dw_ReloadValue = (DWORD) data[2];                       |
+|                    dw_ReloadValue = (unsigned int) data[2];                       |
 |                     ........                                               |
 +----------------------------------------------------------------------------+
 | Output Parameters : -                                                      |
@@ -361,9 +361,9 @@ int i_APCI3XXX_InsnReadAnalogInput(struc
 	int i_ReturnValue = insn->n;
 	unsigned char b_Configuration = (unsigned char) CR_RANGE(insn->chanspec);
 	unsigned char b_Channel = (unsigned char) CR_CHAN(insn->chanspec);
-	DWORD dw_Temp = 0;
-	DWORD dw_Configuration = 0;
-	DWORD dw_AcquisitionCpt = 0;
+	unsigned int dw_Temp = 0;
+	unsigned int dw_Configuration = 0;
+	unsigned int dw_AcquisitionCpt = 0;
 	unsigned char b_Interrupt = 0;
 
 	/*************************************/
@@ -449,8 +449,8 @@ int i_APCI3XXX_InsnReadAnalogInput(struc
 
 					dw_Configuration =
 						(b_Configuration & 3) |
-						((DWORD) (b_Configuration >> 2)
-						<< 6) | ((DWORD) devpriv->
+						((unsigned int) (b_Configuration >> 2)
+						<< 6) | ((unsigned int) devpriv->
 						b_SingelDiff << 7);
 
 		    /***************************/
@@ -468,7 +468,7 @@ int i_APCI3XXX_InsnReadAnalogInput(struc
 					writel(dw_Temp | 0x100UL,
 						(void *)(devpriv->dw_AiBase +
 							4));
-					writel((DWORD) b_Channel,
+					writel((unsigned int) b_Channel,
 						(void *)(devpriv->dw_AiBase +
 							0));
 
@@ -608,7 +608,7 @@ void v_APCI3XXX_Interrupt(int irq, void 
 {
 	struct comedi_device *dev = d;
 	unsigned char b_CopyCpt = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/***************************/
 	/* Test if interrupt occur */
@@ -689,7 +689,7 @@ int i_APCI3XXX_InsnWriteAnalogOutput(str
 {
 	unsigned char b_Range = (unsigned char) CR_RANGE(insn->chanspec);
 	unsigned char b_Channel = (unsigned char) CR_CHAN(insn->chanspec);
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 	int i_ReturnValue = insn->n;
 
 	/************************/
@@ -924,9 +924,9 @@ int i_APCI3XXX_InsnBitsTTLIO(struct come
 {
 	int i_ReturnValue = insn->n;
 	unsigned char b_ChannelCpt = 0;
-	DWORD dw_ChannelMask = 0;
-	DWORD dw_BitMask = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_ChannelMask = 0;
+	unsigned int dw_BitMask = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -1193,7 +1193,7 @@ int i_APCI3XXX_InsnWriteTTLIO(struct com
 	int i_ReturnValue = insn->n;
 	unsigned char b_Channel = (unsigned char) CR_CHAN(insn->chanspec);
 	unsigned char b_State = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -1303,7 +1303,7 @@ int i_APCI3XXX_InsnReadDigitalInput(stru
 {
 	int i_ReturnValue = insn->n;
 	unsigned char b_Channel = (unsigned char) CR_CHAN(insn->chanspec);
-	DWORD dw_Temp = 0;
+	unsigned int dw_Temp = 0;
 
 	/***************************/
 	/* Test the channel number */
@@ -1360,7 +1360,7 @@ int i_APCI3XXX_InsnBitsDigitalInput(stru
 	struct comedi_subdevice * s, struct comedi_insn * insn, unsigned int * data)
 {
 	int i_ReturnValue = insn->n;
-	DWORD dw_Temp = 0;
+	unsigned int dw_Temp = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -1414,9 +1414,9 @@ int i_APCI3XXX_InsnBitsDigitalOutput(str
 {
 	int i_ReturnValue = insn->n;
 	unsigned char b_ChannelCpt = 0;
-	DWORD dw_ChannelMask = 0;
-	DWORD dw_BitMask = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_ChannelMask = 0;
+	unsigned int dw_BitMask = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -1511,7 +1511,7 @@ int i_APCI3XXX_InsnWriteDigitalOutput(st
 	int i_ReturnValue = insn->n;
 	unsigned char b_Channel = CR_CHAN(insn->chanspec);
 	unsigned char b_State = 0;
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
@@ -1585,7 +1585,7 @@ int i_APCI3XXX_InsnReadDigitalOutput(str
 {
 	int i_ReturnValue = insn->n;
 	unsigned char b_Channel = CR_CHAN(insn->chanspec);
-	DWORD dw_Status = 0;
+	unsigned int dw_Status = 0;
 
 	/************************/
 	/* Test the buffer size */
