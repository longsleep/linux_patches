From foo@baz Tue Aug 18 15:20:34 PDT 2009
Date: Tue, 18 Aug 2009 15:20:34 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: hv: clean up typedefs in Hv.h

This removes the typedefs from Hv.h, it's now clean from a
codingstyle.pl standpoint.

Cc: Hank Janssen <hjanssen@microsoft.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/hv/Hv.c |   12 ++++++------
 drivers/staging/hv/Hv.h |   12 ++++++------
 2 files changed, 12 insertions(+), 12 deletions(-)

--- a/drivers/staging/hv/Hv.c
+++ b/drivers/staging/hv/Hv.c
@@ -30,11 +30,11 @@
 /* Globals */
 
 /* The one and only */
-HV_CONTEXT gHvContext={
-	.SynICInitialized = false,
-	.HypercallPage = NULL,
-	.SignalEventParam = NULL,
-	.SignalEventBuffer = NULL,
+struct hv_context gHvContext = {
+	.SynICInitialized	= false,
+	.HypercallPage		= NULL,
+	.SignalEventParam	= NULL,
+	.SignalEventBuffer	= NULL,
 };
 
 
@@ -299,7 +299,7 @@ int HvInit (void)
 		    (u64)hypercallMsr.GuestPhysicalAddress << PAGE_SHIFT);
 
 	/* Setup the global signal event param for the signal event hypercall */
-	gHvContext.SignalEventBuffer = kmalloc(sizeof(HV_INPUT_SIGNAL_EVENT_BUFFER), GFP_KERNEL);
+	gHvContext.SignalEventBuffer = kmalloc(sizeof(struct hv_input_signal_event_buffer), GFP_KERNEL);
 	if (!gHvContext.SignalEventBuffer)
 	{
 		goto Cleanup;
--- a/drivers/staging/hv/Hv.h
+++ b/drivers/staging/hv/Hv.h
@@ -104,12 +104,12 @@ static const GUID VMBUS_SERVICE_ID = {
 #define MAX_NUM_CPUS	1
 
 
-typedef struct {
+struct hv_input_signal_event_buffer {
 	u64 Align8;
 	HV_INPUT_SIGNAL_EVENT Event;
-} HV_INPUT_SIGNAL_EVENT_BUFFER;
+};
 
-typedef struct {
+struct hv_context {
 	/* XenLinux or native Linux. If XenLinux, the hypercall and synic pages
 	 * has already been initialized */
 	u64 GuestId;
@@ -122,15 +122,15 @@ typedef struct {
 	 * This is used as an input param to HvCallSignalEvent hypercall. The
 	 * input param is immutable in our usage and must be dynamic mem (vs
 	 * stack or global). */
-	HV_INPUT_SIGNAL_EVENT_BUFFER *SignalEventBuffer;
+	struct hv_input_signal_event_buffer *SignalEventBuffer;
 	/* 8-bytes aligned of the buffer above */
 	HV_INPUT_SIGNAL_EVENT *SignalEventParam;
 
 	void *synICMessagePage[MAX_NUM_CPUS];
 	void *synICEventPage[MAX_NUM_CPUS];
-} HV_CONTEXT;
+};
 
-extern HV_CONTEXT gHvContext;
+extern struct hv_context gHvContext;
 
 
 /* Hv Interface */
