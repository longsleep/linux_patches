From foo@baz Thu Jul 16 12:34:20 PDT 2009
Date: Thu, 16 Jul 2009 12:34:20 -0700
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: hv: osd: remove MemoryFence wrapper

From: Greg Kroah-Hartman <gregkh@suse.de>

Use the "real" mb call instead of a wrapper function.

Cc: Hank Janssen <hjanssen@microsoft.com>
Cc: Haiyang Zhang <haiyangz@microsoft.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/hv/RingBuffer.c  |    4 ++--
 drivers/staging/hv/Vmbus.c       |    2 +-
 drivers/staging/hv/include/osd.h |    2 --
 drivers/staging/hv/osd.c         |    5 -----
 4 files changed, 3 insertions(+), 10 deletions(-)

--- a/drivers/staging/hv/include/osd.h
+++ b/drivers/staging/hv/include/osd.h
@@ -119,8 +119,6 @@ extern void PageFree(void* page, unsigne
 extern void* MemMapIO(unsigned long phys, unsigned long size);
 extern void MemUnmapIO(void* virt);
 
-extern void MemoryFence(void);
-
 extern HANDLE TimerCreate(PFN_TIMER_CALLBACK pfnTimerCB, void* context);
 extern void TimerClose(HANDLE hTimer);
 extern int TimerStop(HANDLE hTimer);
--- a/drivers/staging/hv/osd.c
+++ b/drivers/staging/hv/osd.c
@@ -197,11 +197,6 @@ void MemUnmapIO(void *virt)
 	//iounmap(virt);
 }
 
-void MemoryFence()
-{
-	mb();
-}
-
 void TimerCallback(unsigned long data)
 {
 	TIMER* t = (TIMER*)data;
--- a/drivers/staging/hv/RingBuffer.c
+++ b/drivers/staging/hv/RingBuffer.c
@@ -411,7 +411,7 @@ RingBufferWrite(
 												sizeof(u64));
 
 	// Make sure we flush all writes before updating the writeIndex
-	MemoryFence();
+	mb();
 
 	// Now, update the write location
 	SetNextWriteLocation(OutRingInfo, nextWriteLocation);
@@ -532,7 +532,7 @@ RingBufferRead(
 
 	// Make sure all reads are done before we update the read index since
 	// the writer may start writing to the read area once the read index is updated
-	MemoryFence();
+	mb();
 
 	// Update the read index
 	SetNextReadLocation(InRingInfo, nextReadLocation);
--- a/drivers/staging/hv/Vmbus.c
+++ b/drivers/staging/hv/Vmbus.c
@@ -426,7 +426,7 @@ VmbusOnMsgDPC(
 		// Make sure the write to MessageType (ie set to HvMessageTypeNone) happens
 		// before we read the MessagePending and EOMing. Otherwise, the EOMing will not deliver
 		// any more messages since there is no empty slot
-		MemoryFence();
+		mb();
 
 		if (msg->Header.MessageFlags.MessagePending)
 		{
