From penberg@cs.helsinki.fi  Wed Jan 21 09:32:49 2009
From: Pekka Enberg <penberg@cs.helsinki.fi>
Date: Thu, 08 Jan 2009 11:56:53 +0200
Subject: Staging: w35und: convert code to use ETH_ALEN
To: Harvey Harrison <harvey.harrison@gmail.com>
Cc: Greg Kroah-Hartman <greg@kroah.com>, Pavel Machek <pavel@suse.cz>, linux-kernel@vger.kernel.org
Message-ID: <1231408613.9373.5.camel@penberg-laptop>


From: Pekka Enberg <penberg@cs.helsinki.fi>

As suggested by Harvey Harrison, convert driver to use ETH_ALEN and kill a
private macro from common.h that is used for the same thing.

Acked-by: Harvey Harrison <harvey.harrison@gmail.com>
Acked-by: Pavel Machek <pavel@suse.cz>
Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/winbond/common.h  |    1 -
 drivers/staging/winbond/reg.c     |    5 ++---
 drivers/staging/winbond/wb35reg.c |    2 +-
 drivers/staging/winbond/wbhal.c   |    2 +-
 drivers/staging/winbond/wbhal_s.h |    6 +++---
 5 files changed, 7 insertions(+), 9 deletions(-)

--- a/drivers/staging/winbond/common.h
+++ b/drivers/staging/winbond/common.h
@@ -16,7 +16,6 @@
 // Common function definition
 //==================================================================================================
 #define DEBUG_ENABLED
-#define ETH_LENGTH_OF_ADDRESS	6
 #ifdef DEBUG_ENABLED
 #define WBDEBUG( _M )	printk _M
 #else
--- a/drivers/staging/winbond/reg.c
+++ b/drivers/staging/winbond/reg.c
@@ -948,14 +948,13 @@ Uxx_ReadEthernetAddress(  phw_data_t pHw
 //  Return Value:
 //    None.
 //==============================================================================================================
-void CardGetMulticastBit(   u8 Address[ETH_LENGTH_OF_ADDRESS],
-						   u8 *Byte,  u8 *Value )
+void CardGetMulticastBit( u8 Address[ETH_ALEN], u8 *Byte, u8 *Value )
 {
     u32 Crc;
     u32 BitNumber;
 
     // First compute the CRC.
-    Crc = CardComputeCrc(Address, ETH_LENGTH_OF_ADDRESS);
+    Crc = CardComputeCrc(Address, ETH_ALEN);
 
 	// The computed CRC is bit0~31 from left to right
 	//At first we should do right shift 25bits, and read 7bits by using '&', 2^7=128
--- a/drivers/staging/winbond/wb35reg.c
+++ b/drivers/staging/winbond/wb35reg.c
@@ -599,7 +599,7 @@ unsigned char Wb35Reg_initial(phw_data_t
 	Wb35Reg_ReadSync( pHwData, 0x03b4, &Region_ScanInterval );
 
 	// Update Ethernet address
-	memcpy( pHwData->CurrentMacAddress, pHwData->PermanentMacAddress, ETH_LENGTH_OF_ADDRESS );
+	memcpy( pHwData->CurrentMacAddress, pHwData->PermanentMacAddress, ETH_ALEN );
 
 	// Update software variable
 	pHwData->SoftwareSet = (u16)(SoftwareSet & 0xffff);
--- a/drivers/staging/winbond/wbhal.c
+++ b/drivers/staging/winbond/wbhal.c
@@ -8,7 +8,7 @@ void hal_set_ethernet_address( phw_data_
 
 	if( pHwData->SurpriseRemove ) return;
 
-	memcpy( pHwData->CurrentMacAddress, current_address, ETH_LENGTH_OF_ADDRESS );
+	memcpy( pHwData->CurrentMacAddress, current_address, ETH_ALEN );
 
 	ltmp[0]= cpu_to_le32( *(u32 *)pHwData->CurrentMacAddress );
 	ltmp[1]= cpu_to_le32( *(u32 *)(pHwData->CurrentMacAddress + 4) ) & 0xffff;
--- a/drivers/staging/winbond/wbhal_s.h
+++ b/drivers/staging/winbond/wbhal_s.h
@@ -2,6 +2,7 @@
 #define __WINBOND_WBHAL_S_H
 
 #include <linux/types.h>
+#include <linux/if_ether.h> /* for ETH_ALEN */
 
 #include "common.h"
 
@@ -427,7 +428,6 @@ typedef struct _TXVGA_FOR_50 {
 #include "wb35tx_s.h"
 #include "wb35rx_s.h"
 
-
 // For Hal using ==================================================================
 typedef struct _HW_DATA_T
 {
@@ -452,8 +452,8 @@ typedef struct _HW_DATA_T
 	//===============================================
 	// Definition for MAC address
 	//===============================================
-	u8		PermanentMacAddress[ETH_LENGTH_OF_ADDRESS + 2]; // The Enthernet addr that are stored in EEPROM.  + 2 to 8-byte alignment
-	u8		CurrentMacAddress[ETH_LENGTH_OF_ADDRESS + 2]; // The Enthernet addr that are in used.  + 2 to 8-byte alignment
+	u8		PermanentMacAddress[ETH_ALEN + 2]; // The Enthernet addr that are stored in EEPROM.  + 2 to 8-byte alignment
+	u8		CurrentMacAddress[ETH_ALEN + 2]; // The Enthernet addr that are in used.  + 2 to 8-byte alignment
 
 	//=====================================================================
 	// Definition for 802.11
