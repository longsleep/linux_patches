From alan@linux.intel.com  Mon Oct 26 14:56:12 2009
From: Alan Cox <alan@linux.intel.com>
Date: Tue, 06 Oct 2009 15:49:13 +0100
Subject: Staging: et131x: fold up simple wrapper functions
To: greg@kroah.com
Message-ID: <20091006144909.8604.26799.stgit@localhost.localdomain>


Signed-off-by: Alan Cox <alan@linux.intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/staging/et131x/et1310_rx.c |   39 ++++---------------------------------
 1 file changed, 5 insertions(+), 34 deletions(-)

--- a/drivers/staging/et131x/et1310_rx.c
+++ b/drivers/staging/et131x/et1310_rx.c
@@ -417,14 +417,16 @@ void et131x_rx_dma_memory_free(struct et
 					       MP_RFD, list_node);
 
 		list_del(&rfd->list_node);
-		et131x_rfd_resources_free(adapter, rfd);
+		rfd->Packet = NULL;
+		kmem_cache_free(adapter->RxRing.RecvLookaside, rfd);
 	}
 
 	while (!list_empty(&rx_ring->RecvPendingList)) {
 		rfd = (MP_RFD *) list_entry(rx_ring->RecvPendingList.next,
 					       MP_RFD, list_node);
 		list_del(&rfd->list_node);
-		et131x_rfd_resources_free(adapter, rfd);
+		rfd->Packet = NULL;
+		kmem_cache_free(adapter->RxRing.RecvLookaside, rfd);
 	}
 
 	/* Free Free Buffer Ring 1 */
@@ -572,13 +574,7 @@ int et131x_init_recv(struct et131x_adapt
 			continue;
 		}
 
-		status = et131x_rfd_resources_alloc(adapter, rfd);
-		if (status != 0) {
-			dev_err(&adapter->pdev->dev,
-				  "Couldn't alloc packet for RFD\n");
-			kmem_cache_free(rx_ring->RecvLookaside, rfd);
-			continue;
-		}
+		rfd->Packet = NULL;
 
 		/* Add this RFD to the RecvList */
 		list_add_tail(&rfd->list_node, &rx_ring->RecvList);
@@ -602,31 +598,6 @@ int et131x_init_recv(struct et131x_adapt
 }
 
 /**
- * et131x_rfd_resources_alloc
- * @adapter: pointer to our private adapter structure
- * @rfd: pointer to a RFD
- *
- * Returns 0 on success and errno on failure (as defined in errno.h)
- */
-int et131x_rfd_resources_alloc(struct et131x_adapter *adapter, MP_RFD *rfd)
-{
-	rfd->Packet = NULL;
-
-	return 0;
-}
-
-/**
- * et131x_rfd_resources_free - Free the packet allocated for the given RFD
- * @adapter: pointer to our private adapter structure
- * @rfd: pointer to a RFD
- */
-void et131x_rfd_resources_free(struct et131x_adapter *adapter, MP_RFD *rfd)
-{
-	rfd->Packet = NULL;
-	kmem_cache_free(adapter->RxRing.RecvLookaside, rfd);
-}
-
-/**
  * ConfigRxDmaRegs - Start of Rx_DMA init sequence
  * @etdev: pointer to our adapter structure
  */
