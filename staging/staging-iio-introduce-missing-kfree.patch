From julia@diku.dk  Fri Sep 11 16:02:55 2009
From: Julia Lawall <julia@diku.dk>
Date: Fri, 11 Sep 2009 18:22:27 +0200 (CEST)
Subject: Staging: iio: introduce missing kfree
To: Greg Kroah-Hartman <gregkh@suse.de>, devel@driverdev.osuosl.org, linux-kernel@vger.kernel.org, kernel-janitors@vger.kernel.org
Message-ID: <Pine.LNX.4.64.0909111822100.10552@pc-004.diku.dk>


From: Julia Lawall <julia@diku.dk>

Error handling code following a kmalloc or kzalloc should free the
allocated data.

The semantic match that finds the problem is as follows:
(http://www.emn.fr/x-info/coccinelle/)

// <smpl>
@r exists@
local idexpression x;
statement S;
expression E;
identifier f,f1,l;
position p1,p2;
expression *ptr != NULL;
@@

x@p1 = \(kmalloc\|kzalloc\|kcalloc\)(...);
...
if (x == NULL) S
<... when != x
     when != if (...) { <+...x...+> }
(
x->f1 = E
|
 (x->f1 == NULL || ...)
|
 f(...,x->f1,...)
)
...>
(
 return \(0\|<+...x...+>\|ptr\);
|
 return@p2 ...;
)

@script:python@
p1 << r.p1;
p2 << r.p2;
@@

print "* file: %s kmalloc %s return %s" % (p1[0].file,p1[0].line,p2[0].line)
// </smpl>

Signed-off-by: Julia Lawall <julia@diku.dk>
---
 drivers/staging/iio/accel/lis3l02dq_ring.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/staging/iio/accel/lis3l02dq_ring.c
+++ b/drivers/staging/iio/accel/lis3l02dq_ring.c
@@ -286,6 +286,7 @@ static void lis3l02dq_trigger_bh_to_ring
 	rx_array = kmalloc(4 * (st->indio_dev->scan_count), GFP_KERNEL);
 	if (rx_array == NULL) {
 		dev_err(&st->us->dev, "memory alloc failed in ring bh");
+		kfree(data);
 		return;
 	}
 
