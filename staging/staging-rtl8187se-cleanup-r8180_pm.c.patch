From bzolnier@gmail.com  Thu Jul  2 12:38:03 2009
From: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
Date: Sun, 28 Jun 2009 16:20:04 +0200
Subject: Staging: rtl8187se: cleanup r8180_pm.c
To: "Greg Kroah-Hartman" <gregkh@suse.de>
Cc: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>, linux-kernel@vger.kernel.org
Message-ID: <20090628142004.8761.31645.sendpatchset@localhost.localdomain>


From: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
Subject: [PATCH] Staging: rtl8187se: cleanup r8180_pm.c

* remove unused rtl8180_{save_state,enable_wake}()
* remove commented out code
* beautify code

Signed-off-by: Bartlomiej Zolnierkiewicz <bzolnier@gmail.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/rtl8187se/r8180_pm.c |   32 ++++++++------------------------
 drivers/staging/rtl8187se/r8180_pm.h |    2 --
 2 files changed, 8 insertions(+), 26 deletions(-)

--- a/drivers/staging/rtl8187se/r8180_pm.c
+++ b/drivers/staging/rtl8187se/r8180_pm.c
@@ -15,16 +15,9 @@
 #include "r8180_pm.h"
 #include "r8180.h"
 
-int rtl8180_save_state (struct pci_dev *dev, u32 state)
-{
-        printk(KERN_NOTICE "r8180 save state call (state %u).\n", state);
-	return(-EAGAIN);
-}
-
-int rtl8180_suspend (struct pci_dev *pdev, pm_message_t state)
+int rtl8180_suspend(struct pci_dev *pdev, pm_message_t state)
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
-//	struct r8180_priv *priv = ieee80211_priv(dev);
 
 	if (!netif_running(dev))
 		goto out_pci_suspend;
@@ -37,27 +30,28 @@ int rtl8180_suspend (struct pci_dev *pde
 out_pci_suspend:
 	pci_save_state(pdev);
 	pci_disable_device(pdev);
-	pci_set_power_state(pdev,pci_choose_state(pdev,state));
+	pci_set_power_state(pdev, pci_choose_state(pdev, state));
 	return 0;
 }
 
-int rtl8180_resume (struct pci_dev *pdev)
+int rtl8180_resume(struct pci_dev *pdev)
 {
 	struct net_device *dev = pci_get_drvdata(pdev);
-//	struct r8180_priv *priv = ieee80211_priv(dev);
 	int err;
 	u32 val;
 
 	pci_set_power_state(pdev, PCI_D0);
 
 	err = pci_enable_device(pdev);
-	if(err) {
+	if (err) {
 		printk(KERN_ERR "%s: pci_enable_device failed on resume\n",
 				dev->name);
 
 		return err;
 	}
+
 	pci_restore_state(pdev);
+
 	/*
 	 * Suspend/Resume resets the PCI configuration space, so we have to
 	 * re-disable the RETRY_TIMEOUT register (0x41) to keep PCI Tx retries
@@ -68,23 +62,13 @@ int rtl8180_resume (struct pci_dev *pdev
 	if ((val & 0x0000ff00) != 0)
 		pci_write_config_dword(pdev, 0x40, val & 0xffff00ff);
 
-	if(!netif_running(dev))
+	if (!netif_running(dev))
 		goto out;
 
 	if (dev->netdev_ops->ndo_open)
 		dev->netdev_ops->ndo_open(dev);
+
 	netif_device_attach(dev);
 out:
 	return 0;
 }
-
-
-int rtl8180_enable_wake (struct pci_dev *dev, u32 state, int enable)
-{
-        printk(KERN_NOTICE "r8180 enable wake call (state %u, enable %d).\n",
-	       state, enable);
-	return(-EAGAIN);
-}
-
-
-
--- a/drivers/staging/rtl8187se/r8180_pm.h
+++ b/drivers/staging/rtl8187se/r8180_pm.h
@@ -17,10 +17,8 @@
 #include <linux/types.h>
 #include <linux/pci.h>
 
-int rtl8180_save_state (struct pci_dev *dev, u32 state);
 int rtl8180_suspend (struct pci_dev *pdev, pm_message_t state);
 int rtl8180_resume (struct pci_dev *pdev);
-int rtl8180_enable_wake (struct pci_dev *dev, u32 state, int enable);
 
 #endif //R8180_PM_H
 
