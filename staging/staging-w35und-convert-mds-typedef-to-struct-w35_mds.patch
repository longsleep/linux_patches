From penberg@cs.helsinki.fi  Mon Aug 17 12:57:32 2009
From: Pekka Enberg <penberg@cs.helsinki.fi>
Date: Wed, 12 Aug 2009 11:03:33 +0300
Subject: Staging: w35und: Convert MDS typedef to struct w35_mds
To: gregkh@suse.de
Cc: linux-kernel@vger.kernel.org, Pekka Enberg <penberg@cs.helsinki.fi>, Pavel Machek <pavel@ucw.cz>
Message-ID: <1250064219-7372-1-git-send-email-penberg@cs.helsinki.fi>


Acked-by: Pavel Machek <pavel@ucw.cz>
Signed-off-by: Pekka Enberg <penberg@cs.helsinki.fi>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/winbond/core.h   |    2 +-
 drivers/staging/winbond/mds.c    |   10 +++++-----
 drivers/staging/winbond/mds_s.h  |    5 ++---
 drivers/staging/winbond/wb35tx.c |    4 ++--
 4 files changed, 10 insertions(+), 11 deletions(-)

--- a/drivers/staging/winbond/core.h
+++ b/drivers/staging/winbond/core.h
@@ -20,7 +20,7 @@ struct wbsoft_priv {
 
 	MTO_PARAMETERS sMtoPara;	// MTO_struct ...
 	struct hw_data sHwData;	//For HAL
-	MDS Mds;
+	struct wb35_mds Mds;
 
 	spinlock_t SpinLock;
 
--- a/drivers/staging/winbond/mds.c
+++ b/drivers/staging/winbond/mds.c
@@ -8,7 +8,7 @@
 unsigned char
 Mds_initial(struct wbsoft_priv * adapter)
 {
-	PMDS pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 
 	pMds->TxPause = false;
 	pMds->TxRTSThreshold = DEFAULT_RTSThreshold;
@@ -220,7 +220,7 @@ static void Mds_DurationSet(struct wbsof
 static u16 Mds_BodyCopy(struct wbsoft_priv *adapter, PDESCRIPTOR pDes, u8 *TargetBuffer)
 {
 	PT00_DESCRIPTOR	pT00;
-	PMDS	pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 	u8	*buffer;
 	u8	*src_buffer;
 	u8	*pctmp;
@@ -320,7 +320,7 @@ static u16 Mds_BodyCopy(struct wbsoft_pr
 
 static void Mds_HeaderCopy(struct wbsoft_priv * adapter, PDESCRIPTOR pDes, u8 *TargetBuffer)
 {
-	PMDS	pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 	u8	*src_buffer = pDes->buffer_address[0];//931130.5.g
 	PT00_DESCRIPTOR	pT00;
 	PT01_DESCRIPTOR	pT01;
@@ -417,7 +417,7 @@ void
 Mds_Tx(struct wbsoft_priv * adapter)
 {
 	struct hw_data *	pHwData = &adapter->sHwData;
-	PMDS		pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 	DESCRIPTOR	TxDes;
 	PDESCRIPTOR	pTxDes = &TxDes;
 	u8		*XmitBufAddress;
@@ -552,7 +552,7 @@ Mds_Tx(struct wbsoft_priv * adapter)
 void
 Mds_SendComplete(struct wbsoft_priv * adapter, PT02_DESCRIPTOR pT02)
 {
-	PMDS	pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 	struct hw_data *	pHwData = &adapter->sHwData;
 	u8	PacketId = (u8)pT02->T02_Tx_PktID;
 	unsigned char	SendOK = true;
--- a/drivers/staging/winbond/mds_s.h
+++ b/drivers/staging/winbond/mds_s.h
@@ -79,8 +79,7 @@ enum {
 #define PACKET_COME_FROM_MLME					0x80
 #define PACKET_SEND_COMPLETE					0xff
 
-typedef struct _MDS
-{
+struct wb35_mds {
 	// For Tx usage
 	u8	TxOwner[ ((MAX_USB_TX_BUFFER_NUMBER + 3) & ~0x03) ];
 	u8	*pTxBuffer;
@@ -133,7 +132,7 @@ typedef struct _MDS
 	u32	TxTsc; // 20060214
 	u32	TxTsc_2; // 20060214
 
-} MDS, *PMDS;
+};
 
 
 typedef struct _RxBuffer
--- a/drivers/staging/winbond/wb35tx.c
+++ b/drivers/staging/winbond/wb35tx.c
@@ -30,7 +30,7 @@ static void Wb35Tx_complete(struct urb *
 	struct wbsoft_priv *adapter = pUrb->context;
 	struct hw_data *	pHwData = &adapter->sHwData;
 	struct wb35_tx *pWb35Tx = &pHwData->Wb35Tx;
-	PMDS		pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 
 	printk("wb35: tx complete\n");
 	// Variable setting
@@ -67,7 +67,7 @@ static void Wb35Tx(struct wbsoft_priv *a
 	struct hw_data *	pHwData = &adapter->sHwData;
 	struct wb35_tx *pWb35Tx = &pHwData->Wb35Tx;
 	u8		*pTxBufferAddress;
-	PMDS		pMds = &adapter->Mds;
+	struct wb35_mds *pMds = &adapter->Mds;
 	struct urb *	pUrb = (struct urb *)pWb35Tx->Tx4Urb;
 	int         	retv;
 	u32		SendIndex;
