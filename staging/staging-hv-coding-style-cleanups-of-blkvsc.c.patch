From foo@baz Fri Aug 28 16:25:21 PDT 2009
Date: Fri, 28 Aug 2009 16:25:21 -0700
To: Greg KH <greg@kroah.com>
From: Greg Kroah-Hartman <gregkh@suse.de>
Subject: Staging: hv: coding style cleanups of BlkVsc.c

Cc: Hank Janssen <hjanssen@microsoft.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
 drivers/staging/hv/BlkVsc.c |  106 +++++++++++++++++++++-----------------------
 1 file changed, 51 insertions(+), 55 deletions(-)

--- a/drivers/staging/hv/BlkVsc.c
+++ b/drivers/staging/hv/BlkVsc.c
@@ -19,95 +19,91 @@
  *   Hank Janssen  <hjanssen@microsoft.com>
  *
  */
-
 #include <linux/kernel.h>
 #include <linux/mm.h>
 #include "osd.h"
 #include "StorVsc.c"
 
-static const char* gBlkDriverName="blkvsc";
+static const char *gBlkDriverName = "blkvsc";
 
 /* {32412632-86cb-44a2-9b5c-50d1417354f5} */
-static const struct hv_guid gBlkVscDeviceType={
+static const struct hv_guid gBlkVscDeviceType = {
 	.data = {
 		0x32, 0x26, 0x41, 0x32, 0xcb, 0x86, 0xa2, 0x44,
 		0x9b, 0x5c, 0x50, 0xd1, 0x41, 0x73, 0x54, 0xf5
 	}
 };
 
-/* Static routines */
-static int
-BlkVscOnDeviceAdd(
-	struct hv_device *Device,
-	void			*AdditionalInfo
-	);
-
-
-int
-BlkVscInitialize(
-	struct hv_driver *Driver
-	)
+static int BlkVscOnDeviceAdd(struct hv_device *Device, void *AdditionalInfo)
 {
-	struct storvsc_driver_object *storDriver = (struct storvsc_driver_object *)Driver;
-	int ret=0;
+	struct storvsc_device_info *deviceInfo;
+	int ret = 0;
 
 	DPRINT_ENTER(BLKVSC);
 
-	/* Make sure we are at least 2 pages since 1 page is used for control */
-	ASSERT(storDriver->RingBufferSize >= (PAGE_SIZE << 1));
-
-	Driver->name = gBlkDriverName;
-	memcpy(&Driver->deviceType, &gBlkVscDeviceType, sizeof(struct hv_guid));
-
-	storDriver->RequestExtSize			= sizeof(STORVSC_REQUEST_EXTENSION);
-	/* Divide the ring buffer data size (which is 1 page less than the ring buffer size since that page is reserved for the ring buffer indices) */
-	/* by the max request size (which is VMBUS_CHANNEL_PACKET_MULITPAGE_BUFFER + struct vstor_packet + u64) */
-	storDriver->MaxOutstandingRequestsPerChannel =
-		((storDriver->RingBufferSize - PAGE_SIZE) / ALIGN_UP(MAX_MULTIPAGE_BUFFER_PACKET + sizeof(struct vstor_packet) + sizeof(u64),sizeof(u64)));
+	deviceInfo = (struct storvsc_device_info *)AdditionalInfo;
 
-	DPRINT_INFO(BLKVSC, "max io outstd %u", storDriver->MaxOutstandingRequestsPerChannel);
+	ret = StorVscOnDeviceAdd(Device, AdditionalInfo);
+	if (ret != 0) {
+		DPRINT_EXIT(BLKVSC);
+		return ret;
+	}
 
-	/* Setup the dispatch table */
-	storDriver->Base.OnDeviceAdd		= BlkVscOnDeviceAdd;
-	storDriver->Base.OnDeviceRemove		= StorVscOnDeviceRemove;
-	storDriver->Base.OnCleanup			= StorVscOnCleanup;
+	/*
+	 * We need to use the device instance guid to set the path and target
+	 * id. For IDE devices, the device instance id is formatted as
+	 * <bus id> * - <device id> - 8899 - 000000000000.
+	 */
+	deviceInfo->PathId = Device->deviceInstance.data[3] << 24 |
+			     Device->deviceInstance.data[2] << 16 |
+			     Device->deviceInstance.data[1] << 8  |
+			     Device->deviceInstance.data[0];
 
-	storDriver->OnIORequest				= StorVscOnIORequest;
+	deviceInfo->TargetId = Device->deviceInstance.data[5] << 8 |
+			       Device->deviceInstance.data[4];
 
 	DPRINT_EXIT(BLKVSC);
 
 	return ret;
 }
 
-static int
-BlkVscOnDeviceAdd(
-	struct hv_device *Device,
-	void			*AdditionalInfo
-	)
+int BlkVscInitialize(struct hv_driver *Driver)
 {
-	int ret=0;
-	struct storvsc_device_info *deviceInfo = (struct storvsc_device_info *)AdditionalInfo;
+	struct storvsc_driver_object *storDriver;
+	int ret = 0;
 
 	DPRINT_ENTER(BLKVSC);
 
-	ret = StorVscOnDeviceAdd(Device, AdditionalInfo);
+	storDriver = (struct storvsc_driver_object *)Driver;
 
-	if (ret != 0)
-	{
-		DPRINT_EXIT(BLKVSC);
+	/* Make sure we are at least 2 pages since 1 page is used for control */
+	ASSERT(storDriver->RingBufferSize >= (PAGE_SIZE << 1));
 
-		return ret;
-	}
+	Driver->name = gBlkDriverName;
+	memcpy(&Driver->deviceType, &gBlkVscDeviceType, sizeof(struct hv_guid));
 
-	/* We need to use the device instance guid to set the path and target id. For IDE devices, the */
-	/* device instance id is formatted as <bus id> - <device id> - 8899 - 000000000000. */
-	deviceInfo->PathId = Device->deviceInstance.data[3] << 24 |
-			     Device->deviceInstance.data[2] << 16 |
-			     Device->deviceInstance.data[1] << 8  |
-			     Device->deviceInstance.data[0];
+	storDriver->RequestExtSize = sizeof(STORVSC_REQUEST_EXTENSION);
 
-	deviceInfo->TargetId = Device->deviceInstance.data[5] << 8 |
-			       Device->deviceInstance.data[4];
+	/*
+	 * Divide the ring buffer data size (which is 1 page less than the ring
+	 * buffer size since that page is reserved for the ring buffer indices)
+	 * by the max request size (which is
+	 * VMBUS_CHANNEL_PACKET_MULITPAGE_BUFFER + struct vstor_packet + u64)
+	 */
+	storDriver->MaxOutstandingRequestsPerChannel =
+		((storDriver->RingBufferSize - PAGE_SIZE) /
+		  ALIGN_UP(MAX_MULTIPAGE_BUFFER_PACKET +
+			   sizeof(struct vstor_packet) + sizeof(u64),
+			   sizeof(u64)));
+
+	DPRINT_INFO(BLKVSC, "max io outstd %u",
+		    storDriver->MaxOutstandingRequestsPerChannel);
+
+	/* Setup the dispatch table */
+	storDriver->Base.OnDeviceAdd = BlkVscOnDeviceAdd;
+	storDriver->Base.OnDeviceRemove = StorVscOnDeviceRemove;
+	storDriver->Base.OnCleanup = StorVscOnCleanup;
+	storDriver->OnIORequest	= StorVscOnIORequest;
 
 	DPRINT_EXIT(BLKVSC);
 
